"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkterra_graphs"] = self["webpackChunkterra_graphs"] || []).push([["packages_carbon-graphs_src_index_js"],{

/***/ "./packages/carbon-graphs/dist/css/carbon-graphs.css":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/dist/css/carbon-graphs.css ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL2Rpc3QvY3NzL2NhcmJvbi1ncmFwaHMuY3NzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvZGlzdC9jc3MvY2FyYm9uLWdyYXBocy5jc3M/NDZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/dist/css/carbon-graphs.css\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/index.js":
/*!*********************************************!*\
  !*** ./packages/carbon-graphs/src/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _js_carbon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/carbon */ \"./packages/carbon-graphs/src/js/carbon.js\");\n/* harmony import */ var _dist_css_carbon_graphs_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dist/css/carbon-graphs.css */ \"./packages/carbon-graphs/dist/css/carbon-graphs.css\");\n\n\n// TODO: update to pull scss from the src/lib folder instead of dist\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_js_carbon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBaUM7O0FBRWpDO0FBQ3VDO0FBRXZDLCtEQUFlQSxrREFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2luZGV4LmpzPzhhNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhcmJvbiBmcm9tICcuL2pzL2NhcmJvbic7XG5cbi8vIFRPRE86IHVwZGF0ZSB0byBwdWxsIHNjc3MgZnJvbSB0aGUgc3JjL2xpYiBmb2xkZXIgaW5zdGVhZCBvZiBkaXN0XG5pbXBvcnQgJy4uL2Rpc3QvY3NzL2NhcmJvbi1ncmFwaHMuY3NzJztcblxuZXhwb3J0IGRlZmF1bHQgQ2FyYm9uO1xuIl0sIm5hbWVzIjpbIkNhcmJvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/carbon.js":
/*!*************************************************!*\
  !*** ./packages/carbon-graphs/src/js/carbon.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/construct */ \"./node_modules/@babel/runtime/helpers/esm/construct.js\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls */ \"./packages/carbon-graphs/src/js/controls/index.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./locale */ \"./packages/carbon-graphs/src/js/locale/index.js\");\n\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/* globals VERSION */\n\n\n\n\nvar _require = __webpack_require__(/*! ../../package.json */ \"./packages/carbon-graphs/package.json\"),\n  version = _require.version;\nvar carbonVersion = typeof VERSION === 'undefined' ? version : VERSION;\n\n/**\n * Carbon tools for generating reusable items like different shapes\n *\n * @enum {{Object: Function}}\n */\nvar tools = {\n  shape: function shape() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return (0,_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core__WEBPACK_IMPORTED_MODULE_3__.Shape, args);\n  },\n  defaultSVGProps: function defaultSVGProps(args) {\n    return _core__WEBPACK_IMPORTED_MODULE_3__.Shape.getDefaultSVGProps(args);\n  }\n};\n/**\n * Carbon helper constants\n *\n * @public\n * @property {object} AXIS_TYPE Carbon API axis types constants\n * @property {object} COLORS Carbon API color constants\n * @property {object} LINE_TYPE Carbon API line type constants\n * @property {object} LOCALE Carbon API locale objects\n * @property {object} SHAPES Carbon API shape constants\n */\nvar helpers = {\n  AXIS_TYPE: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE,\n  BUBBLE: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.BUBBLE,\n  COLORS: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.COLORS,\n  LINE_TYPE: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.LINE_TYPE,\n  LOCALE: _locale__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  SHAPES: _objectSpread(_objectSpread({}, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES), {}, {\n    DARK: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES,\n    LIGHT: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES_LIGHT\n  }),\n  AXES_ORIENTATION: _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION\n};\n/**\n * Carbon\n *\n * @public\n * @module Carbon\n * @property {object} api Carbon API controls\n * @property {object} tools Tools such as Shapes\n * @property {object} helpers Helper constants such as colors and shapes\n * @property {object} version Current version\n * @enum {object}\n */\nvar Carbon = {\n  api: _controls__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  tools: tools,\n  helpers: helpers,\n  version: carbonVersion\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Carbon);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jYXJib24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUM2QjtBQUNFO0FBU0Y7QUFDQztBQUU5QixJQUFBVSxRQUFBLEdBQW9CQyxtQkFBTyxDQUFDLGlFQUFvQixDQUFDO0VBQXpDQyxPQUFPLEdBQUFGLFFBQUEsQ0FBUEUsT0FBTztBQUVmLElBQU1DLGFBQWEsR0FBRyxPQUFPQyxPQUFPLEtBQUssV0FBVyxHQUFHRixPQUFPLEdBQUdFLE9BQU87O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQyxLQUFLLEdBQUc7RUFDWkMsS0FBSyxFQUFFLFNBQUFBLE1BQUE7SUFBQSxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFJQyxJQUFJLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJQUFBO01BQUpGLElBQUksQ0FBQUUsSUFBQSxJQUFBSixTQUFBLENBQUFJLElBQUE7SUFBQTtJQUFBLE9BQUFDLDRFQUFBLENBQVN0Qix3Q0FBSyxFQUFJbUIsSUFBSTtFQUFBLENBQUM7RUFDdENJLGVBQWUsRUFBRSxTQUFBQSxnQkFBQ0osSUFBSTtJQUFBLE9BQUtuQix3Q0FBSyxDQUFDd0Isa0JBQWtCLENBQUNMLElBQUksQ0FBQztFQUFBO0FBQzNELENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1NLE9BQU8sR0FBRztFQUNkdkIsU0FBUyxFQUFUQSx5REFBUztFQUNUQyxNQUFNLEVBQU5BLHNEQUFNO0VBQ05DLE1BQU0sRUFBTkEsc0RBQU07RUFDTkMsU0FBUyxFQUFUQSx5REFBUztFQUNURyxNQUFNLEVBQU5BLCtDQUFNO0VBQ05GLE1BQU0sRUFBQW9CLGFBQUEsQ0FBQUEsYUFBQSxLQUNEcEIsc0RBQU07SUFDVHFCLElBQUksRUFBRXJCLHNEQUFNO0lBQ1pzQixLQUFLLEVBQUVyQiw0REFBWUE7RUFBQSxFQUNwQjtFQUNETixnQkFBZ0IsRUFBaEJBLGdFQUFnQkE7QUFDbEIsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNNEIsTUFBTSxHQUFHO0VBQ2I5QixHQUFHLEVBQUhBLGlEQUFHO0VBQ0hlLEtBQUssRUFBTEEsS0FBSztFQUNMVyxPQUFPLEVBQVBBLE9BQU87RUFDUGQsT0FBTyxFQUFFQztBQUNYLENBQUM7QUFFRCwrREFBZWlCLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jYXJib24uanM/Mjg0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIFZFUlNJT04gKi9cbmltcG9ydCBhcGkgZnJvbSAnLi9jb250cm9scyc7XG5pbXBvcnQgeyBTaGFwZSB9IGZyb20gJy4vY29yZSc7XG5pbXBvcnQge1xuICBBWEVTX09SSUVOVEFUSU9OLFxuICBBWElTX1RZUEUsXG4gIEJVQkJMRSxcbiAgQ09MT1JTLFxuICBMSU5FX1RZUEUsXG4gIFNIQVBFUyxcbiAgU0hBUEVTX0xJR0hULFxufSBmcm9tICcuL2hlbHBlcnMvY29uc3RhbnRzJztcbmltcG9ydCBMT0NBTEUgZnJvbSAnLi9sb2NhbGUnO1xuXG5jb25zdCB7IHZlcnNpb24gfSA9IHJlcXVpcmUoJy4uLy4uL3BhY2thZ2UuanNvbicpO1xuXG5jb25zdCBjYXJib25WZXJzaW9uID0gdHlwZW9mIFZFUlNJT04gPT09ICd1bmRlZmluZWQnID8gdmVyc2lvbiA6IFZFUlNJT047XG5cbi8qKlxuICogQ2FyYm9uIHRvb2xzIGZvciBnZW5lcmF0aW5nIHJldXNhYmxlIGl0ZW1zIGxpa2UgZGlmZmVyZW50IHNoYXBlc1xuICpcbiAqIEBlbnVtIHt7T2JqZWN0OiBGdW5jdGlvbn19XG4gKi9cbmNvbnN0IHRvb2xzID0ge1xuICBzaGFwZTogKC4uLmFyZ3MpID0+IG5ldyBTaGFwZSguLi5hcmdzKSxcbiAgZGVmYXVsdFNWR1Byb3BzOiAoYXJncykgPT4gU2hhcGUuZ2V0RGVmYXVsdFNWR1Byb3BzKGFyZ3MpLFxufTtcbi8qKlxuICogQ2FyYm9uIGhlbHBlciBjb25zdGFudHNcbiAqXG4gKiBAcHVibGljXG4gKiBAcHJvcGVydHkge29iamVjdH0gQVhJU19UWVBFIENhcmJvbiBBUEkgYXhpcyB0eXBlcyBjb25zdGFudHNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBDT0xPUlMgQ2FyYm9uIEFQSSBjb2xvciBjb25zdGFudHNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBMSU5FX1RZUEUgQ2FyYm9uIEFQSSBsaW5lIHR5cGUgY29uc3RhbnRzXG4gKiBAcHJvcGVydHkge29iamVjdH0gTE9DQUxFIENhcmJvbiBBUEkgbG9jYWxlIG9iamVjdHNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBTSEFQRVMgQ2FyYm9uIEFQSSBzaGFwZSBjb25zdGFudHNcbiAqL1xuY29uc3QgaGVscGVycyA9IHtcbiAgQVhJU19UWVBFLFxuICBCVUJCTEUsXG4gIENPTE9SUyxcbiAgTElORV9UWVBFLFxuICBMT0NBTEUsXG4gIFNIQVBFUzoge1xuICAgIC4uLlNIQVBFUyxcbiAgICBEQVJLOiBTSEFQRVMsXG4gICAgTElHSFQ6IFNIQVBFU19MSUdIVCxcbiAgfSxcbiAgQVhFU19PUklFTlRBVElPTixcbn07XG4vKipcbiAqIENhcmJvblxuICpcbiAqIEBwdWJsaWNcbiAqIEBtb2R1bGUgQ2FyYm9uXG4gKiBAcHJvcGVydHkge29iamVjdH0gYXBpIENhcmJvbiBBUEkgY29udHJvbHNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSB0b29scyBUb29scyBzdWNoIGFzIFNoYXBlc1xuICogQHByb3BlcnR5IHtvYmplY3R9IGhlbHBlcnMgSGVscGVyIGNvbnN0YW50cyBzdWNoIGFzIGNvbG9ycyBhbmQgc2hhcGVzXG4gKiBAcHJvcGVydHkge29iamVjdH0gdmVyc2lvbiBDdXJyZW50IHZlcnNpb25cbiAqIEBlbnVtIHtvYmplY3R9XG4gKi9cbmNvbnN0IENhcmJvbiA9IHtcbiAgYXBpLFxuICB0b29scyxcbiAgaGVscGVycyxcbiAgdmVyc2lvbjogY2FyYm9uVmVyc2lvbixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhcmJvbjtcbiJdLCJuYW1lcyI6WyJhcGkiLCJTaGFwZSIsIkFYRVNfT1JJRU5UQVRJT04iLCJBWElTX1RZUEUiLCJCVUJCTEUiLCJDT0xPUlMiLCJMSU5FX1RZUEUiLCJTSEFQRVMiLCJTSEFQRVNfTElHSFQiLCJMT0NBTEUiLCJfcmVxdWlyZSIsInJlcXVpcmUiLCJ2ZXJzaW9uIiwiY2FyYm9uVmVyc2lvbiIsIlZFUlNJT04iLCJ0b29scyIsInNoYXBlIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfY29uc3RydWN0IiwiZGVmYXVsdFNWR1Byb3BzIiwiZ2V0RGVmYXVsdFNWR1Byb3BzIiwiaGVscGVycyIsIl9vYmplY3RTcHJlYWQiLCJEQVJLIiwiTElHSFQiLCJDYXJib24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/carbon.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/Bar.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/Bar.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n/* harmony import */ var _BarConfig__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./BarConfig */ \"./packages/carbon-graphs/src/js/controls/Bar/BarConfig.js\");\n/* harmony import */ var _helpers_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./helpers/axisInfoRowHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_goalLineHelpers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./helpers/goalLineHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/goalLineHelpers.js\");\n/* harmony import */ var _helpers_legendHelpers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./helpers/legendHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/legendHelpers.js\");\n/* harmony import */ var _helpers_resizeHelpers__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./helpers/resizeHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/resizeHelpers.js\");\n/* harmony import */ var _helpers_selectionHelpers__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./helpers/selectionHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Bar\n * @typedef {object} GraphContent\n * @typedef {object} BarConfig\n */\n/**\n * Calculates the min and max values for Y Axis or Y2 Axis\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points\n */\nvar calculateValuesRangeYAxis = function calculateValuesRangeYAxis(values) {\n  var min = Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(values.map(function (i) {\n    return i.y;\n  })));\n  var max = Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(values.map(function (i) {\n    return i.y;\n  })));\n  return {\n    min: min < 0 ? min : 0,\n    max: max > 0 ? max : 0\n  };\n};\n\n/**\n * Calculates the min and max values for the x axis.\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the x axis\n */\nvar calculateValuesRangeXAxis = function calculateValuesRangeXAxis(values) {\n  // null values are filtered out first\n  var xAxisValuesList = values.filter(function (i) {\n    return i.x !== null && i.x !== undefined;\n  }).map(function (i) {\n    // if the x-axis is a timeseries, then convert it to an epoc int\n    // for easier calculations\n    if (typeof i.x === 'string' || i.x instanceof Date) {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getEpocFromDateString(i.x);\n    }\n    return i.x;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList))\n  };\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} BarConfig config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _BarConfig__WEBPACK_IMPORTED_MODULE_14__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n/**\n * Initializes the necessary Bar constructor objects\n *\n * @private\n * @param {Bar} control - Bar instance\n * @returns {Bar} Bar instance\n */\nvar initConfig = function initConfig(control) {\n  control.config = {};\n  control.bandScale = {\n    x0: {},\n    x1: {}\n  };\n  control.dataTarget = {};\n  control.valuesRange = {};\n  return control;\n};\n\n/**\n * A bar graph is a graph used to represent numerical values of data by\n * height or length of lines or rectangles of equal width\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module Bar\n * @class Bar\n */\nvar Bar = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {BarConfig} input - Input JSON instance created using GraphConfig\n     */\n  function Bar(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Bar);\n    _this = _callSuper(this, Bar);\n    initConfig(_this);\n    _this.config = loadInput(input);\n    _this.type = 'Bar';\n    _this.config.yAxis = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__.getDefaultValue)(_this.config.yAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y_AXIS);\n    _this.config.axisPadding = false;\n    _this.valuesRange = {};\n    _this.valuesRange.x = calculateValuesRangeXAxis(_this.config.values);\n    _this.valuesRange[_this.config.yAxis] = calculateValuesRangeYAxis(_this.config.values);\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Bar, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Bar, [{\n    key: \"load\",\n    value: function load(graph) {\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_13__.validateData)(this.config.values);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.setGroupName)(this.config, graph.content);\n      (0,_helpers_resizeHelpers__WEBPACK_IMPORTED_MODULE_19__.scaleBandAxis)(this.bandScale, graph.config, graph.content);\n      this.dataTarget = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.draw)(graph.scale, this.bandScale, graph.config, graph.svg, this.dataTarget);\n      (0,_helpers_selectionHelpers__WEBPACK_IMPORTED_MODULE_20__.updateSelectionBars)(this.dataTarget.internalValuesSubset, graph.svg, graph.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_legendHelpers__WEBPACK_IMPORTED_MODULE_18__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_legendHelpers__WEBPACK_IMPORTED_MODULE_18__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.clear)(graph.svg, this.dataTarget.key);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.removeLabelShapeItem)(graph.axesLabelShapeGroup[this.config.yAxis], this.dataTarget, graph.config);\n      (0,_helpers_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_15__.removeAxisInfoRowLabels)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].axisInfoRow)), this.dataTarget.key);\n      (0,_helpers_selectionHelpers__WEBPACK_IMPORTED_MODULE_20__.clearSelectionDatum)(graph.svg, this.dataTarget.key);\n      initConfig(this);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      (0,_helpers_resizeHelpers__WEBPACK_IMPORTED_MODULE_19__.scaleBandAxis)(this.bandScale, graph.config, graph.content);\n      (0,_helpers_resizeHelpers__WEBPACK_IMPORTED_MODULE_19__.setBarOffsets)(graph.content, graph.contentConfig, this, this.bandScale, graph.config);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateBarGraph)(graph.scale, this.bandScale, graph.svg, this.dataTarget, graph.config);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.dataTarget.axisInfoRow)) {\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateTextLabel)(this.bandScale, graph.scale, graph.config, graph.svg, this.dataTarget.axisInfoRow, this.dataTarget);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        (0,_helpers_goalLineHelpers__WEBPACK_IMPORTED_MODULE_17__.processGoalLines)(graph.scale, this.bandScale, graph.config, this.dataTarget, this.config.yAxis);\n        (0,_helpers_goalLineHelpers__WEBPACK_IMPORTED_MODULE_17__.translateRegion)(graph.scale, graph.config, graph.svg.selectAll(\"rect[aria-describedby=region_\".concat(this.dataTarget.key, \"]\")));\n      }\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var eventHandlers = {\n        clickHandler: (0,_helpers_legendHelpers__WEBPACK_IMPORTED_MODULE_18__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_legendHelpers__WEBPACK_IMPORTED_MODULE_18__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      this.config.values = graphData.values;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_13__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.processDataPoints)(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var barGraph = graph.content.filter(function (bar) {\n        return bar.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmptyArray(barGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.reflowLegend)(graph.legendSVG, barGraph[0].config, graph, eventHandlers);\n      }\n      var tickValues = graph.config.axis.x.ticks.values.map(function (d) {\n        return {\n          x: d,\n          valueSubsetArray: []\n        };\n      });\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.updateShapesDuringReflow)(graph, graphData, this);\n      (0,_helpers_resizeHelpers__WEBPACK_IMPORTED_MODULE_19__.scaleBandAxis)(this.bandScale, graph.config, graph.content);\n      var barSelectionGroup = graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].barSelectionGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].taskBarSelection)).data(tickValues);\n      barSelectionGroup.enter().append('rect').attr('aria-hidden', true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].taskBarSelection, true).attr('aria-describedby', function (value) {\n        return \"bar-selector-\".concat(tickValues.indexOf(value));\n      }).attr('rx', 3).attr('ry', 3);\n      barSelectionGroup.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      (0,_helpers_selectionHelpers__WEBPACK_IMPORTED_MODULE_20__.updateSelectionBars)(this.dataTarget.internalValuesSubset, graph.svg, graph.config);\n      var currentBarsPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\"[class=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].currentBarsGroup, \"\\\"]\")).data([this.dataTarget]);\n      var bars = currentBarsPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].bar)).data(this.dataTarget.internalValuesSubset);\n      bars.exit().remove();\n      var barsContent = currentBarsPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].bar, \" > rect\")).data(this.dataTarget.internalValuesSubset);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.drawDataBars)(graph.scale, this.bandScale, graph.config, graph.svg, barsContent.enter(), this.dataTarget.regions, this.dataTarget.axisInfoRow);\n      this.resize(graph);\n      this.valuesRange[this.config.yAxis] = calculateValuesRangeYAxis(this.config.values);\n      this.resize(graph);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.clear)(graph.svg, this.dataTarget.key);\n      (0,_helpers_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_15__.removeAxisInfoRowLabels)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].axisInfoRow)), this.dataTarget.key);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_16__.draw)(graph.scale, this.bandScale, graph.config, graph.svg, this.dataTarget);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_6__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/Bar.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/BarConfig.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/BarConfig.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n/**\n * API to parse consumer input for Bar graph\n *\n * @class BarConfig\n */\nvar BarConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function BarConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, BarConfig);\n    _this = _callSuper(this, BarConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * Returns the config object\n     *\n     * @returns {object} config object\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(BarConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BarConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @param {object} inputJSON - Input JSON\n       * @returns {BarConfig} instance object\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object.\n       *\n       * @returns {BarConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.validateBaseInput)(this.input);\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {BarConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (BarConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CYXIvQmFyQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQUFLLFdBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFdBQUFELENBQUEsR0FBQUosaUZBQUEsQ0FBQUksQ0FBQSxHQUFBTCw0RkFBQSxDQUFBSSxDQUFBLEVBQUFHLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBSixDQUFBLEVBQUFDLENBQUEsUUFBQUwsaUZBQUEsQ0FBQUcsQ0FBQSxFQUFBTSxXQUFBLElBQUFMLENBQUEsQ0FBQU0sS0FBQSxDQUFBUCxDQUFBLEVBQUFFLENBQUE7QUFBQSxTQUFBQywwQkFBQSxjQUFBSCxDQUFBLElBQUFRLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVAsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUEsaUNBQUFSLENBQUEsYUFBQUcseUJBQUEsWUFBQUEsMEJBQUEsYUFBQUgsQ0FBQTtBQUV5RDtBQUM5Qjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBLElBS01lLFNBQVMsMEJBQUFDLFdBQUE7RUFDYjtBQUNGO0FBQ0E7RUFDRSxTQUFBRCxVQUFBLEVBQWM7SUFBQSxJQUFBRSxLQUFBO0lBQUF2QixpRkFBQSxPQUFBcUIsU0FBQTtJQUNaRSxLQUFBLEdBQUFsQixVQUFBLE9BQUFnQixTQUFBO0lBQ0FFLEtBQUEsQ0FBS0MsTUFBTSxHQUFHLElBQUk7SUFDbEJELEtBQUEsQ0FBS0UsS0FBSyxHQUFHLElBQUk7SUFBQyxPQUFBRixLQUFBO0VBQ3BCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRW5CLDJFQUFBLENBQUFpQixTQUFBLEVBQUFDLFdBQUE7RUFBQSxPQUFBckIsOEVBQUEsQ0FBQW9CLFNBQUE7SUFBQUssR0FBQTtJQUFBQyxLQUFBLEVBS0EsU0FBQUMsVUFBQSxFQUFZO01BQ1YsT0FBTyxJQUFJLENBQUNKLE1BQU07SUFDcEI7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBTEU7SUFBQUUsR0FBQTtJQUFBQyxLQUFBLEVBTUEsU0FBQUUsU0FBU0MsU0FBUyxFQUFFO01BQ2xCLElBQUksQ0FBQ0wsS0FBSyxHQUFHSyxTQUFTO01BQ3RCLE9BQU8sSUFBSTtJQUNiOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBSixHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBSSxjQUFBLEVBQWdCO01BQ2RaLG1FQUFpQixDQUFDLElBQUksQ0FBQ00sS0FBSyxDQUFDO01BQzdCLE9BQU8sSUFBSTtJQUNiOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBQyxHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBSyxNQUFBLEVBQVE7TUFDTixJQUFJLENBQUNSLE1BQU0sR0FBR0osc0RBQUssQ0FBQ2EsU0FBUyxDQUFDLElBQUksQ0FBQ1IsS0FBSyxDQUFDO01BQ3pDLE9BQU8sSUFBSTtJQUNiO0VBQUM7QUFBQSxFQWhEcUJQLHdEQUFVO0FBbURsQywrREFBZUcsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvbnRyb2xzL0Jhci9CYXJDb25maWcuanM/ZWEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBCYXNlQ29uZmlnLCB7IHZhbGlkYXRlQmFzZUlucHV0IH0gZnJvbSAnLi4vLi4vY29yZS9CYXNlQ29uZmlnJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi8uLi9oZWxwZXJzL3V0aWxzJztcblxuLyoqXG4gKiBBUEkgdG8gcGFyc2UgY29uc3VtZXIgaW5wdXQgZm9yIEJhciBncmFwaFxuICpcbiAqIEBjbGFzcyBCYXJDb25maWdcbiAqL1xuY2xhc3MgQmFyQ29uZmlnIGV4dGVuZHMgQmFzZUNvbmZpZyB7XG4gIC8qKlxuICAgICAqIEBpbmhlcml0ZG9jXG4gICAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jb25maWcgPSBudWxsO1xuICAgIHRoaXMuaW5wdXQgPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY29uZmlnIG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMge29iamVjdH0gY29uZmlnIG9iamVjdFxuICAgICAqL1xuICBnZXRDb25maWcoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnO1xuICB9XG5cbiAgLyoqXG4gICAgICogU2V0cyB0aGUgaW5wdXQgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gaW5wdXRKU09OIC0gSW5wdXQgSlNPTlxuICAgICAqIEByZXR1cm5zIHtCYXJDb25maWd9IGluc3RhbmNlIG9iamVjdFxuICAgICAqL1xuICBzZXRJbnB1dChpbnB1dEpTT04pIHtcbiAgICB0aGlzLmlucHV0ID0gaW5wdXRKU09OO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAgICogVmFsaWRhdGVzIGFuZCB2ZXJpZmllcyB0aGUgaW5wdXQgSlNPTiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7QmFyQ29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgdmFsaWRhdGVJbnB1dCgpIHtcbiAgICB2YWxpZGF0ZUJhc2VJbnB1dCh0aGlzLmlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgICAqIENsb25lcyB0aGUgaW5wdXQgSlNPTiBpbnRvIHRoZSBjb25maWcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7QmFyQ29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgdGhpcy5jb25maWcgPSB1dGlscy5kZWVwQ2xvbmUodGhpcy5pbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQmFyQ29uZmlnO1xuIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiX2luaGVyaXRzIiwiX2NhbGxTdXBlciIsInQiLCJvIiwiZSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJhcHBseSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsIkJhc2VDb25maWciLCJ2YWxpZGF0ZUJhc2VJbnB1dCIsInV0aWxzIiwiQmFyQ29uZmlnIiwiX0Jhc2VDb25maWciLCJfdGhpcyIsImNvbmZpZyIsImlucHV0Iiwia2V5IiwidmFsdWUiLCJnZXRDb25maWciLCJzZXRJbnB1dCIsImlucHV0SlNPTiIsInZhbGlkYXRlSW5wdXQiLCJjbG9uZSIsImRlZXBDbG9uZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/BarConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js":
/*!**********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAxisInfoRowLabel: function() { return /* binding */ createAxisInfoRowLabel; },\n/* harmony export */   getTextLabelsXPosition: function() { return /* binding */ getTextLabelsXPosition; },\n/* harmony export */   getTextLabelsYPosition: function() { return /* binding */ getTextLabelsYPosition; },\n/* harmony export */   removeAxisInfoRowLabels: function() { return /* binding */ removeAxisInfoRowLabels; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * X position for the text label\n *\n * @private\n * @param {object} attributeHelper - contains methods for calculating x, y, height, width.\n * @param {Array} textLabelList - list of text labels\n * @param {number} index - data point index\n * @returns {number} X position for the text label\n */\nvar getTextLabelsXPosition = function getTextLabelsXPosition(attributeHelper, textLabelList, index) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isDefined(index) && index < textLabelList.length ? attributeHelper.x(textLabelList[index]) + attributeHelper.width() / 2 : attributeHelper.x(textLabelList) + attributeHelper.width() / 2;\n};\n\n/**\n * Y position for the text label\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Y position for the text label\n */\nvar getTextLabelsYPosition = function getTextLabelsYPosition(config) {\n  return (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.isXAxisOrientationTop)(config.axis.x.orientation) ? _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TEXT_LABEL_VERTICAL_POSITION.bottom // axis info row orientation is bottom\n  : _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TEXT_LABEL_VERTICAL_POSITION.top;\n}; // axis info row orientation is top\n\n/**\n * Adds svg element for each text label.\n *\n * @private\n * @param {object} axisInfoRow - d3 select object containing the text label\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} textLabelList - list of text labels\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @returns {undefined} - returns nothing\n */\nvar addTextLabelIcon = function addTextLabelIcon(axisInfoRow, config, textLabelList, uniqueKey) {\n  return axisInfoRow.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRowIcon)).append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__.getShapeForTarget)(textLabelList.value)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point,\n      svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__.getColorForTarget)(textLabelList.value.shape)),\n      transformFn: function transformFn(scale) {\n        return \"scale(\".concat(scale, \")\");\n      },\n      a11yAttributes: {\n        'aria-hidden': config.shownTargets.indexOf(uniqueKey) < 0,\n        'aria-describedby': uniqueKey\n      }\n    }));\n  });\n};\n\n/**\n * sets selection axis info row label's aria-selected attribute\n *\n * @private\n * @param {object} selectionPath - selection axis info row label svg path\n * @param {boolean} isSelected - true if selected, false if not\n * @returns {undefined} - returns nothing\n */\nvar setOnSelectionAttributes = function setOnSelectionAttributes(selectionPath, isSelected) {\n  selectionPath.attr('aria-selected', isSelected);\n};\n\n/**\n * Toggles the selection of a text label, executes on click of a text label.\n *\n * @private\n * @param {object} value - data point object\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @param {string} type - x-axis type\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @param {number} index - data point index\n * @returns {Array} d3 html element of the selected text label\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(value, canvasSVG, type, uniqueKey, index) {\n  var selectedPointNodes = canvasSVG.selectAll(\"g[aria-describedby=text_label_\".concat(uniqueKey, \"]\"));\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(selectedPointNodes.nodes()[index]);\n  var isSelected = selectedPointNode.attr('aria-selected') === 'true';\n  setOnSelectionAttributes(selectedPointNode, !isSelected);\n  return selectedPointNode;\n};\n\n/**\n * Handler for the text label on click.\n * If the callback is present, the selected text label is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @param {string} type - x-axis type\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @returns {undefined} - returns nothing\n */\nvar axisInfoRowActionHandler = function axisInfoRowActionHandler(value, index, canvasSVG, type, uniqueKey) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(value, canvasSVG, type, uniqueKey, index).call(function (selectedTarget) {\n    return value.onClick(function () {\n      setOnSelectionAttributes(selectedTarget, false);\n    }, value, index, uniqueKey, selectedTarget);\n  });\n};\n/**\n * Truncates the label string to the character count provided, by default the label will not be truncated\n *\n * @private\n * @param {string} label - axis info row label\n * @param {number} characterCount - Maximum character length before truncation\n * @returns {string} A truncated string with ellipsis\n */\nvar getTextLabel = function getTextLabel(label, characterCount) {\n  return (0,_helpers_label__WEBPACK_IMPORTED_MODULE_5__.shouldTruncateLabel)(label, characterCount) ? (0,_helpers_label__WEBPACK_IMPORTED_MODULE_5__.truncateLabel)(label, characterCount) : label;\n};\n\n/**\n * Adds the label strings to axis info row after truncation(if required).\n *\n * @private\n * @param {object} axisInfoRow - d3 object of axis info row group svg\n * @param {object} config - config object derived from input JSON\n * @param {Array} textLabelList - list of text labels\n * @returns {undefined} - returns nothing\n */\nvar addTextLabelString = function addTextLabelString(axisInfoRow, config, textLabelList) {\n  axisInfoRow.append('text').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRowDisplay, true).text(getTextLabel(textLabelList.value.label.display, textLabelList.value.characterCount)).attr('style', \"fill: \".concat(textLabelList.value.color, \";\"));\n  if (textLabelList.value.label.secondaryDisplay) {\n    axisInfoRow.append('text').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRowSecondaryDisplay, true).text(getTextLabel(textLabelList.value.label.secondaryDisplay, textLabelList.value.characterCount)).attr('dy', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.isXAxisOrientationTop)(config.axis.x.orientation) ? config.axisLabelHeights.x : -config.axisLabelHeights.x);\n  }\n};\n\n/**\n * Creates text labels based on input object provided. Text label can be one or many.\n *\n * @private\n * @param {object} bandScale - band scale object\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} canvasSVG - d3 object of canvas group svg\n * @param {Array} textLabelList - List of text labels\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @param {number} index - data point index\n * @returns {undefined} - returns nothing\n */\nvar createAxisInfoRowLabel = function createAxisInfoRowLabel(bandScale, scale, config, canvasSVG, textLabelList, uniqueKey, index) {\n  var x = textLabelList;\n  if (config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES) {\n    x.x = _helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parseDateTime(x); // for time series\n  }\n  var attributeHelper = (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_9__.barAttributesHelper)(scale, bandScale);\n  var axisInfoRow = canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRow)).attr('aria-hidden', false).datum(textLabelList.value).append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRowItem, true).attr('text-anchor', 'middle').attr('transform', \"translate(\".concat(getTextLabelsXPosition(attributeHelper, textLabelList), \", \").concat(getTextLabelsYPosition(config), \")\")).attr('aria-describedby', \"text_label_\".concat(uniqueKey)).attr('aria-hidden', config.shownTargets.indexOf(uniqueKey) < 0);\n  if ((0,_helpers_label__WEBPACK_IMPORTED_MODULE_5__.shouldTruncateLabel)(textLabelList.value.label.display, textLabelList.value.characterCount) || textLabelList.value.label.secondaryDisplay && (0,_helpers_label__WEBPACK_IMPORTED_MODULE_5__.shouldTruncateLabel)(textLabelList.value.label.secondaryDisplay, textLabelList.value.characterCount)) {\n    axisInfoRow.attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(textLabelList.value.onClick)).on('click', function (value) {\n      axisInfoRowActionHandler(value, index, canvasSVG, config.axis.x.type, uniqueKey);\n    });\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].notEmpty(textLabelList.value.shape)) {\n    axisInfoRow.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisInfoRowIcon, true).attr('transform', \"translate(\".concat(-((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getAxisLabelWidth)(getTextLabel(textLabelList.value.label.display, textLabelList.value.characterCount)) / 2) - _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TEXT_LABEL_ICON_WIDTH_PADDING, \",\\n                \").concat(-_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TEXT_LABEL_ICON_HEIGHT_PADDING, \")\"));\n    addTextLabelIcon(axisInfoRow, config, textLabelList, uniqueKey);\n  }\n  addTextLabelString(axisInfoRow, config, textLabelList, uniqueKey);\n};\n\n/**\n * CLear the axis info row labels currently rendered\n *\n * @private\n * @param {d3.selection} axisInfoRowSVG - d3 selection node of axis info row svg\n * @param {string} key - identifier\n * @returns {object} - d3 select object\n */\nvar removeAxisInfoRowLabels = function removeAxisInfoRowLabels(axisInfoRowSVG, key) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__.d3RemoveElement)(axisInfoRowSVG, \"g[aria-describedby=\\\"text_label_\".concat(key, \"\\\"]\"), true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js":
/*!*******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   barActionHandler: function() { return /* binding */ barActionHandler; },\n/* harmony export */   barAttributesHelper: function() { return /* binding */ barAttributesHelper; },\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawDataBars: function() { return /* binding */ drawDataBars; },\n/* harmony export */   getSelectedData: function() { return /* reexport safe */ _selectionHelpers__WEBPACK_IMPORTED_MODULE_12__.getSelectedData; },\n/* harmony export */   getXAxisXPosition: function() { return /* binding */ getXAxisXPosition; },\n/* harmony export */   hasInvalidTicks: function() { return /* binding */ hasInvalidTicks; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   processDataPoints: function() { return /* binding */ processDataPoints; },\n/* harmony export */   setDataPoints: function() { return /* binding */ setDataPoints; },\n/* harmony export */   setGroupName: function() { return /* binding */ setGroupName; },\n/* harmony export */   setSelectionIndicatorAttributes: function() { return /* binding */ setSelectionIndicatorAttributes; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_barType__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/barType */ \"./packages/carbon-graphs/src/js/helpers/barType.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./axisInfoRowHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js\");\n/* harmony import */ var _goalLineHelpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./goalLineHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/goalLineHelpers.js\");\n/* harmony import */ var _selectionHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selectionHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Checks if ticks are provided for every input\n *\n * @private\n * @param {Array} xTicks - graph x axis tick values\n * @param {Array} inputValues - input values\n * @returns {boolean} - true if invalid. false if valid\n */\nvar hasInvalidTicks = function hasInvalidTicks(xTicks, inputValues) {\n  return inputValues.some(function (value) {\n    return xTicks.indexOf(value.x) < 0;\n  });\n};\n\n/**\n * Checks if x-axis type matches for every input\n *\n * @private\n * @param {string} type - x-axis type\n * @param {Array} inputValues - input values\n * @returns {boolean} - true if input has invalid type, false if it doesn't have invalid type\n */\nvar hasInvalidTypes = function hasInvalidTypes(type, inputValues) {\n  return inputValues.some(function (value) {\n    return !(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.isValidAxisType)(value.x, type);\n  });\n};\n/**\n * Checks if each axis info row input has value\n *\n * @private\n * @param {object} inputAxisInfoRow - input axis info row values\n * @returns {boolean} - true if each axis info row input has value, false otherwise\n */\nvar hasMissingAxisInfoRowValue = function hasMissingAxisInfoRowValue(inputAxisInfoRow) {\n  return inputAxisInfoRow.some(function (axisInfoRow) {\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(axisInfoRow.value);\n  });\n};\n/**\n * Checks if each axis info row input value label has display\n *\n * @private\n * @param {object} inputAxisInfoRow - input axis info row values\n * @returns {boolean} - true if each axis info row input value label has display , false otherwise\n */\nvar hasMissingAxisInfoRowLabelDisplay = function hasMissingAxisInfoRowLabelDisplay(inputAxisInfoRow) {\n  return inputAxisInfoRow.some(function (axisInfoRow) {\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(axisInfoRow.value.label) || _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(axisInfoRow.value.label.display);\n  });\n};\n\n/**\n * Checks for the presence of secondary display inside axisInfoRow\n *\n * @private\n * @param {object} dataTarget - Data points object\n * @returns {boolean} - true if secondary display is present, false otherwise\n */\nvar hasSecondaryDisplay = function hasSecondaryDisplay(dataTarget) {\n  return dataTarget.axisInfoRow.some(function (axisInfoRowItem) {\n    return axisInfoRowItem.value.label.secondaryDisplay;\n  });\n};\n\n/**\n * Processes the input JSON and adds the colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar setDataPoints = function setDataPoints(graphConfig, dataTarget) {\n  var type = graphConfig.axis.x.type;\n  var getXDataValues = function getXDataValues(x) {\n    if ((0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_1__.getType)(type) === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES) {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].parseDateTime(x);\n    }\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getNumber(x);\n  };\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(dataTarget.axisInfoRow)) {\n    dataTarget.axisInfoRow.forEach(function (axisInfoRowValue) {\n      axisInfoRowValue.group = dataTarget.group;\n    });\n    if (!graphConfig.axisInfoRowLabelHeight) {\n      graphConfig.axisInfoRowLabelHeight = hasSecondaryDisplay(dataTarget) ? (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getAxisLabelHeight)('dummyString') * 2 : (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getAxisLabelHeight)('dummyString');\n      graphConfig.padding.bottom += graphConfig.axisInfoRowLabelHeight;\n    }\n  }\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    var isHashed = dataTarget.style ? dataTarget.style.isHashed : false;\n    return {\n      onClick: dataTarget.onClick,\n      x: getXDataValues(value.x),\n      y: value.y,\n      y0: 0,\n      color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.COLORS.BLUE,\n      label: dataTarget.label,\n      yAxis: dataTarget.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS,\n      key: dataTarget.key,\n      isHashed: value.style ? value.style.isHashed : isHashed,\n      style: (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_3__.getBarStyle)(value.style ? value.style : dataTarget.style, dataTarget),\n      group: dataTarget.group\n    };\n  });\n  // This square shape is used strictly for legend item\n  dataTarget.shape = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES.SQUARE;\n  dataTarget.color = dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.COLORS.BLUE;\n  return dataTarget;\n};\n\n/**\n * Processes the input JSON and adds the colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n * We add key to shownTargets if bar content is newly added to graph\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @throws module:errors.THROW_MSG_EMPTY_X_AXIS_TICK_VALUES\n * @throws module:errors.THROW_MSG_INVALID_FORMAT_TYPE\n * @throws module:errors.THROW_MSG_INVALID_X_AXIS_TICK_VALUES\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(graphConfig.axis.x.ticks) || _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(graphConfig.axis.x.ticks.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_EMPTY_X_AXIS_TICK_VALUES);\n  }\n  if (hasInvalidTypes(graphConfig.axis.x.type, dataTarget.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n  }\n  if (hasInvalidTicks(graphConfig.axis.x.ticks.values, dataTarget.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_INVALID_X_AXIS_TICK_VALUES);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isDefined(dataTarget.axisInfoRow)) {\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(dataTarget.axisInfoRow)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_AXIS_INFO_ROW_EMPTY_TICK_VALUES);\n    }\n    if (hasInvalidTicks(graphConfig.axis.x.ticks.values, dataTarget.axisInfoRow)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_AXIS_INFO_ROW_INVALID_TICK_VALUES);\n    }\n    if (hasMissingAxisInfoRowValue(dataTarget.axisInfoRow)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_AXIS_INFO_ROW_VALUE_NOT_PROVIDED);\n    }\n    if (hasMissingAxisInfoRowLabelDisplay(dataTarget.axisInfoRow)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_AXIS_INFO_ROW_LABEL_DISPLAY_NOT_PROVIDED);\n    }\n  }\n  graphConfig.shownTargets.push(dataTarget.key);\n  return setDataPoints(graphConfig, dataTarget);\n};\n\n/**\n * X Axis's starting position within the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisXPosition = function getXAxisXPosition(config) {\n  return config.axisSizes.y + config.axisLabelWidths.y;\n};\n/**\n * sets selection bar's aria-hidden and aria-selected attributes\n *\n * @private\n * @param {object} selectionPath - selection bar svg path\n * @param {boolean} isSelected - true if selected, false if not\n * @returns {undefined} - returns nothing\n */\nvar setSelectionIndicatorAttributes = function setSelectionIndicatorAttributes(selectionPath, isSelected) {\n  selectionPath.attr('aria-hidden', !isSelected);\n  selectionPath.attr('aria-selected', isSelected);\n};\n/**\n * Toggles the selection of a bar, executes on click of a bar.\n *\n * @private\n * @param {object} value - data point object\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} type - x-axis type\n * @param {Array} tickValues - X axis ticks array\n * @returns {Array} d3 html element of the selected bar\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(value, canvasSVG, type, tickValues) {\n  var selectedPointNode = canvasSVG.select(\"rect[aria-describedby=bar-selector-\".concat(type === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES ? tickValues.indexOf(new Date(value.x).toISOString()) : tickValues.indexOf(value.x), \"]\"));\n  var isHidden = selectedPointNode.attr('aria-hidden') === 'true';\n  setSelectionIndicatorAttributes(selectedPointNode, isHidden);\n  return selectedPointNode;\n};\n/**\n * Handler for the bar on click. If the content property is present for the bar content\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected bar is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected bar target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} type - x-axis type\n * @param {Array} tickValues - X axis ticks array\n * @param {Array} datum - selected bar data to be passed to onclick function\n * @returns {undefined} - returns nothing\n */\nvar barActionHandler = function barActionHandler(value, index, canvasSVG, type, tickValues, datum) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(value, canvasSVG, type, tickValues).call(function (selectedTarget) {\n    return value.onClick(function () {\n      setSelectionIndicatorAttributes(selectedTarget, false);\n    }, value.key, index, datum, selectedTarget);\n  });\n};\n\n/**\n * Contains logic to calculate x, y, height, width for bar\n * x is calculated using band scale. Padding between each bar should be half of its width.\n * width of bar should be 2/3 of range band. Remaining 1/3 of range band is for padding between bars.\n * height of bar should be\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @returns {object} Object that contains methods for calculating x, y, height, width.\n */\nvar barAttributesHelper = function barAttributesHelper(scale, bandScale) {\n  var leftShiftOffset = bandScale.x0.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.LEFT_SHIFT_OFFSET_RATIO; // this value is used to center bars by shifting left\n  var leftShiftPadding = bandScale.x1.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.LEFT_SHIFT_OFFSET_PADDING_RATIO; // padding to be added on left side of bar\n  var getXRange = function getXRange(x, groupOffset) {\n    return scale.x(x) + leftShiftPadding + groupOffset - leftShiftOffset;\n  };\n  return {\n    x: function x(d) {\n      // x offset for grouped bars. By default every content is treated as a grouped bar.\n      var groupOffset = bandScale.x1(d.group);\n      return getXRange(d.x, groupOffset || 0) || 0;\n    },\n    y: function y(d) {\n      return d.y < 0 ? scale[d.yAxis](d.y0) : scale[d.yAxis](d.y + d.y0);\n    },\n    height: function height(d) {\n      return Math.abs(scale[d.yAxis](0) - scale[d.yAxis](+d.y));\n    },\n    width: function width() {\n      return bandScale.x1.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.WIDTH_RATIO;\n    }\n  };\n};\n\n/**\n * Creates a d3 svg bar\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} barGroupSVG - d3 object for bar group svg\n * @param {Array} regionList - List of regions to be shown within graph\n * @param {Array} axisInfoRowList - List of text labels to be shown\n * @returns {object} d3 bar object\n */\nvar drawDataBars = function drawDataBars(scale, bandScale, config, canvasSVG, barGroupSVG, regionList, axisInfoRowList) {\n  var attributeHelper = barAttributesHelper(scale, bandScale);\n  return barGroupSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].bar, true).each(function (dataPoint, index) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    var rectPath = dataPoint.isHashed ? (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_3__.getHashedBar)(canvasSVG, canvasSVG.append('defs'), dataPointSVG, attributeHelper.x(dataPoint), attributeHelper.y(dataPoint), attributeHelper.width(), attributeHelper.height(dataPoint), dataPoint.style).selectAll('rect') : (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_3__.getRect)(dataPointSVG, attributeHelper.x(dataPoint), attributeHelper.y(dataPoint), attributeHelper.width(), attributeHelper.height(dataPoint)).attr('style', \"\".concat(dataPoint.style));\n    rectPath.attr('aria-describedby', dataPoint.key).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].taskBar, true).attr('aria-hidden', config.shownTargets.indexOf(dataPoint.key) < 0).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isFunction(dataPoint.onClick)).on('click', function (value) {\n      barActionHandler(value, index, canvasSVG, config.axis.x.type, config.axis.x.ticks.values, (0,_selectionHelpers__WEBPACK_IMPORTED_MODULE_12__.getSelectedData)(canvasSVG, value, config));\n    });\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(regionList)) {\n      var regions = regionList.filter(function (r) {\n        return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEqual(r.x, dataPoint.x);\n      });\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(regions)) {\n        (0,_goalLineHelpers__WEBPACK_IMPORTED_MODULE_11__.createRegion)(scale, config, dataPointSVG, regions, dataPoint.key);\n      }\n    }\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(axisInfoRowList)) {\n      var textLabels = axisInfoRowList.filter(function (t) {\n        return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEqual(t.x, dataPoint.x);\n      });\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(textLabels)) {\n        (0,_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_10__.createAxisInfoRowLabel)(bandScale, scale, config, canvasSVG, textLabels[0], dataPoint.key, axisInfoRowList.indexOf(textLabels[0]));\n      }\n    }\n  });\n};\n\n/**\n * Draws the Bar graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the lines and points\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, bandScale, config, canvasSVG, dataTarget) {\n  if (canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].barSelectionGroup)).empty()) {\n    (0,_selectionHelpers__WEBPACK_IMPORTED_MODULE_12__.drawSelectionBars)(scale, bandScale, config, canvasSVG);\n  }\n  var barSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].barGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var barGroupSVG = barSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].currentBarsGroup, true).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config), \")\")).data([dataTarget]);\n  var bars = barGroupSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].bar)).data(dataTarget.internalValuesSubset);\n  drawDataBars(scale, bandScale, config, canvasSVG, bars.enter(), dataTarget.regions, dataTarget.axisInfoRow);\n};\n\n/**\n * Sets key as group name if group name is empty\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Array} content - Array of targets\n * @returns {undefined} - returns nothing\n */\nvar setGroupName = function setGroupName(config, content) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(config.group)) {\n    config.group = config.key;\n    return;\n  }\n  if (!content.filter(function (c) {\n    return c.config.key === config.group;\n  }).length) {\n    config.group = config.key;\n  }\n};\n\n/**\n * CLear the graph data points and bars currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - identifier\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, key) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(key, \"\\\"]\"));\n};\n\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_6__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/goalLineHelpers.js":
/*!*******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/goalLineHelpers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRegion: function() { return /* binding */ createRegion; },\n/* harmony export */   processGoalLines: function() { return /* binding */ processGoalLines; },\n/* harmony export */   translateRegion: function() { return /* binding */ translateRegion; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Calculates x-axis range for given region\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} region - region input\n * @returns {number} - xRange of region\n */\nvar getXRange = function getXRange(scale, bandScale, region) {\n  var leftShiftOffset = bandScale.x0.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.LEFT_SHIFT_OFFSET_RATIO; // this value is used to center bars by shifting left\n  var groupOffset = bandScale.x1(region.group);\n  var leftShiftPadding = bandScale.x1.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.REGION_LEFT_SHIFT_OFFSET_PADDING_RATIO; // padding to be added on left side of bar\n\n  return scale.x(region.x) + groupOffset - leftShiftOffset + leftShiftPadding;\n};\n/**\n * Validates the input object provided for the region\n *\n * @private\n * @param {object} region - Region to be shown within graph\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @param {Array} ticks - x axis ticks array\n * @param {string} xAxisType - Graph x axis type\n * @returns {undefined} - returns nothing\n */\nvar validateBarRegion = function validateBarRegion(region, targetAxis, ticks, xAxisType) {\n  (0,_helpers_region__WEBPACK_IMPORTED_MODULE_5__.validateRegion)(region, targetAxis);\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(region.x) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isDateInstance(region.x)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_BAR_REGION_EMPTY_X_VALUE);\n  }\n  if (!(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.isValidAxisType)(region.x, xAxisType)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_INVALID_FORMAT);\n  }\n  if (!ticks.filter(function (t) {\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEqual(t, region.x);\n  }).length) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_INVALID_REGION_X_AXIS_TICK);\n  }\n};\n/**\n * Process goal regions. Sets x-axis range and width of each region.\n * These values are used in createRegion method to create rect for each region\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} dataTarget - Data input object\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @returns {undefined} - returns nothing\n */\nvar processGoalLines = function processGoalLines(scale, bandScale, config, dataTarget) {\n  var targetAxis = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n  var regionWidth = bandScale.x1.bandwidth() * _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.REGION_WIDTH_RATIO;\n  dataTarget.regions.forEach(function (region) {\n    validateBarRegion(region, targetAxis, config.axis.x.ticks.values, config.axis.x.type);\n    region.x = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_1__.parseTypedValue)(region.x, config.axis.x.type);\n    region.group = dataTarget.group;\n    region.xRange = getXRange(scale, bandScale, region);\n    region.width = regionWidth;\n  });\n};\n\n/**\n * Returns the region axis or \"y\" as default\n *\n * @private\n * @param {object} region - Region to be shown within graph\n * @returns {string} Region axis or \"y\" as default\n */\nvar getRegionAxis = function getRegionAxis(region) {\n  return region.axis || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n};\n\n/**\n * Returns the function which returns Y Axis Vertical position for Range\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @returns {function(*=): number} Function which returns Y Axis Vertical position for Range\n */\nvar getYAxisRangePosition = function getYAxisRangePosition(scale) {\n  return function (bounds) {\n    return bounds.end ? (0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__.round2Decimals)(scale[getRegionAxis(bounds)](bounds.end)) : 0;\n  };\n};\n\n/**\n * Returns the height for range based on Y Axes, start and end bounds\n * If start and end bounds arent provided then a \"goal line\" number is returned with\n * height worth of padding top\n *\n * @private\n * @param {object} regionPath - d3 object of region svg\n * @param {object} bounds - Start and end values for region\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON.\n * @returns {number} Height of the region for Y axes\n */\nvar getRegionHeight = function getRegionHeight(regionPath, bounds, scale, config) {\n  var upperBound = bounds.end ? (0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__.round2Decimals)(scale[getRegionAxis(bounds)](bounds.end)) : 0;\n  var lowerBound = bounds.start ? (0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__.round2Decimals)(scale[getRegionAxis(bounds)](bounds.start)) + _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GOAL_LINE_STROKE_WIDTH : config.height + _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GOAL_LINE_STROKE_WIDTH;\n  // If start and end are the same then `constants.DEFAULT_GOAL_LINE_STROKE_WIDTH`\n  // worth of height is applied to make it seem like a goal line\n  return lowerBound - upperBound || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GOAL_LINE_STROKE_WIDTH;\n};\n\n/**\n * Creates regions based on input object provided. Region can be one or many.\n * Regions are rendered based on the content.\n * Criteria:\n * * Either start or end is mandatory.\n * * If start is not provided - 0 to end\n * * If end is not provided - start to INFINITY (end of the graph)\n * If xRange is provided - starts from xRange point\n * If width is provided - applies that width to region\n * Color can be provided to identify the range.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} regionGroupSVG - d3 object of region group svg\n * @param {Array} regionList - List of regions to be shown within graph\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @returns {undefined} - returns nothing\n */\nvar createRegion = function createRegion(scale, config, regionGroupSVG, regionList, uniqueKey) {\n  var regionPath = regionGroupSVG.selectAll('g').data(regionList);\n  regionPath.enter().append('rect').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].region, true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].barGoalLine, true).attr('aria-hidden', config.shownTargets.indexOf(uniqueKey) < 0).attr('aria-describedby', \"region_\".concat(uniqueKey)).attr('style', function (d) {\n    return \"fill: \".concat(d.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_BAR_REGION_COLOR, \"; pointer-events: none\");\n  }).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, function (d) {\n    return d.xRange || 0;\n  }).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisRangePosition(scale, config)).attr('width', function (d) {\n    return d.width || 0;\n  }).attr('height', function (d) {\n    return getRegionHeight(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), d, scale, config);\n  });\n  regionPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n/**\n * Translates region. Moves the \"rect\" according the new scale generated on-resize.\n * Width and height are also flexed accordingly.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} regionGroupSVG - d3 object of region group svg\n * @returns {undefined} - returns nothing\n */\nvar translateRegion = function translateRegion(scale, config, regionGroupSVG) {\n  regionGroupSVG.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, function (d) {\n    return d.xRange || 0;\n  }).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisRangePosition(scale, config)).attr('width', function (d) {\n    return d.width || 0;\n  }).attr('height', function (d) {\n    return getRegionHeight(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), d, scale, config);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/goalLineHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/legendHelpers.js":
/*!*****************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/legendHelpers.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\");\n\n\n\n\n\n/**\n * @typedef Bar\n * @typedef d3\n */\n\n/**\n * Handler for Request animation frame, executes on resize.\n *  * Order of execution\n *      * Redraws the content\n *      * Shows/hides the regions\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @returns {function()} callback function handler for RAF\n */\nvar onAnimationHandler = function onAnimationHandler(graphContext) {\n  return function () {\n    graphContext.resize();\n  };\n};\n/**\n * Click handler for legend item. Hide and display the bar from graph when clicked.\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {Bar} control - Bar instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    if (config.shownTargets.length === 0) {\n      graphContext.contentKeys.forEach(function (key) {\n        canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBar, \"[aria-describedby=\\\"\").concat(key, \"\\\"]\")).attr('aria-hidden', (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element)));\n      });\n    }\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.legendClickHandler)(element);\n    updateShownTarget(config.shownTargets, item);\n    if (config.shownTargets.length >= 1) {\n      canvasSVG.selectAll(\"g[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).attr('aria-hidden', (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element)));\n      canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBar, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element)));\n      canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].region, \"[aria-describedby=\\\"region_\").concat(item.key, \"\\\"]\")).attr('aria-hidden', function () {\n        return !(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('aria-hidden') === 'true');\n      });\n      (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_3__.setSelectionIndicatorAttributes)(canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection)), false);\n      window.requestAnimationFrame(onAnimationHandler(graphContext));\n    } else {\n      canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].region, \"[aria-describedby=\\\"region_\").concat(item.key, \"\\\"]\")).attr('aria-hidden', function () {\n        return !(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('aria-hidden') === 'true');\n      });\n      canvasSVG.selectAll(\"g[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).attr('aria-hidden', (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element)));\n      (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_3__.setSelectionIndicatorAttributes)(canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection)), false);\n      window.requestAnimationFrame(onAnimationHandler(graphContext));\n    }\n  };\n};\n/**\n * Hover handler for legend item. Highlights current bar and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_1__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, []);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/legendHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/resizeHelpers.js":
/*!*****************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/resizeHelpers.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scaleBandAxis: function() { return /* binding */ scaleBandAxis; },\n/* harmony export */   setBarOffsets: function() { return /* binding */ setBarOffsets; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Bar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Bar */ \"./packages/carbon-graphs/src/js/controls/Bar/Bar.js\");\n\n\n\n\n\n\n\n\n/**\n * Filters and returns number of groups available for a unit bandwidth (for each x-axis tick)\n *\n * @private\n * @param {Array} content - Array of targets\n * @param {Array} shownTargets - Array of shown targets\n * @returns {Array} - array of group names\n */\nvar getBands = function getBands(content, shownTargets) {\n  var bands = [];\n  var addGroupNameToBands = function addGroupNameToBands(group) {\n    if (bands.indexOf(group) < 0) {\n      bands.push(group);\n    }\n  };\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(content)) {\n    content.forEach(function (value) {\n      if (value instanceof _Bar__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n        if (shownTargets.indexOf(value.config.key) > -1) {\n          addGroupNameToBands(value.config.group);\n        }\n      }\n    });\n  }\n  return bands;\n};\n/**\n * Calculates and returns outer padding ratio for band scale unit bandwidth\n * Outer padding should be 2.5 times the inner padding\n * Inner padding should be 0.5 times the bar width\n *\n * @private\n * @param {Array} content - Array of targets\n * @param {Array} shownTargets - Array of shown targets\n * @returns {number} - padding value\n */\nvar getBandwidthPaddingRatio = function getBandwidthPaddingRatio(content, shownTargets) {\n  return _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.OUTER_PADDING_RATIO / (3 * getBands(content, shownTargets).length + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES.OUTER_PADDING_RATIO);\n};\n/**\n * Creates and sets the d3 bandScale for the Graph. This scale is created only if\n * static x-axis is provided for graph.\n * To create a d3 bandScale, we need domain, range and bandwidth padding\n *\n * @private\n * @param {object} bandScale - d3 bandScale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} content - Array of targets\n * @returns {undefined} - returns nothing\n */\nvar scaleBandAxis = function scaleBandAxis(bandScale, config, content) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(config.axis.x.ticks) && _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(config.axis.x.ticks.values)) {\n    bandScale.x0 = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleBand().domain(config.axis.x.ticks.values).range((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getXAxisRange)(config)).paddingInner(getBandwidthPaddingRatio(content, config.shownTargets));\n    bandScale.x1 = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleBand();\n  }\n};\n/**\n * Sets domain and range bands for band scale\n *\n * @private\n * @param {Array} bands - bands array for bandwidth\n * @param {Array} content - Array of targets\n * @param {object} bandScale - band scale object\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setX0X1Scale = function setX0X1Scale(bands, content, bandScale, config) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(content) || _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(bands) || _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(config.axis.x.ticks) || _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(config.axis.x.ticks.values)) {\n    return;\n  }\n  bandScale.x1.domain(bands).range([0, bandScale.x0.bandwidth()]);\n};\n/**\n * In case of stacked bars, this method sets y-axis offset for each data point.\n * By default, every bar is considered as a stacked bar. This method checks if there are any bars\n * getting stacked under it and calculates offset for both positive and negative bars.\n * If no other bar is stacked below this bar, offset is set to 0.\n *\n * @private\n * @param {Array} inputValues - Array of dataTarget's inputValueSubset\n * @param {Array} group - Array of filtered group names\n * @returns {undefined} - returns nothing\n */\nvar setStackOffset = function setStackOffset(inputValues, group) {\n  inputValues.forEach(function (value) {\n    var upY = 0;\n    var downY = 0;\n    group.forEach(function (prev) {\n      var f = prev.values.filter(function (p) {\n        return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEqual(p.x, value.x);\n      });\n      if (f.length > 0) {\n        if (f[0].y > 0) {\n          upY += f[0].y;\n        } else {\n          downY += f[0].y;\n        }\n      }\n    });\n    value.y0 = value.y < 0 ? downY : upY;\n  });\n};\n/**\n * Sets offsets for bars on content load\n *\n * @private\n * @param {Array} content - Array of targets\n * @param {Array} contentConfig - Array of targets config objects\n * @param {object} input - load input object\n * @param {object} bandScale - band scale object\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setBarOffsets = function setBarOffsets(content, contentConfig, input, bandScale, config) {\n  var shownTargets = config.shownTargets;\n  var group = contentConfig.filter(function (d) {\n    return d.key === input.config.key || d.group === input.config.group && shownTargets.indexOf(d.key) !== -1;\n  });\n  setStackOffset(input.dataTarget.internalValuesSubset, group.splice(group.indexOf(input.config) + 1));\n  setX0X1Scale(getBands(content, config.shownTargets), content, bandScale, config);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/resizeHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearSelectionDatum: function() { return /* binding */ clearSelectionDatum; },\n/* harmony export */   drawSelectionBars: function() { return /* binding */ drawSelectionBars; },\n/* harmony export */   getSelectedData: function() { return /* binding */ getSelectedData; },\n/* harmony export */   translateSelectBars: function() { return /* binding */ translateSelectBars; },\n/* harmony export */   updateSelectionBars: function() { return /* binding */ updateSelectionBars; }\n/* harmony export */ });\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\");\n\n\n\n\n\n\n\nvar PADDING = _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_BAR_SELECTION_PADDING;\n\n/**\n * @typedef d3\n */\n\n/**\n * Returns selected data on click of a bar.\n * This will return only content that is present in shownTargets. Array also maintains order in which content is loaded.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} value - selected value\n * @param {object} config - graph config object\n * @returns {Array} - array of selected content\n */\nvar getSelectedData = function getSelectedData(canvasSVG, value, config) {\n  return canvasSVG.select(\"rect[aria-describedby=bar-selector-\".concat(config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.AXIS_TYPE.TIME_SERIES ? config.axis.x.ticks.values.indexOf(new Date(value.x).toISOString()) : config.axis.x.ticks.values.indexOf(value.x), \"]\")).datum().valueSubsetArray.filter(function (v) {\n    return config.shownTargets.indexOf(v.key) > -1;\n  });\n};\n/**\n * This method is called when bar content is unloaded off graph. This will remove objects related to the unloaded content.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - unloaded content key\n * @returns {undefined} - returns nothing\n */\nvar clearSelectionDatum = function clearSelectionDatum(canvasSVG, key) {\n  canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection)).each(function (dataPoint) {\n    var index = dataPoint.valueSubsetArray.findIndex(function (v) {\n      return v.key === key;\n    });\n    if (index > -1) {\n      dataPoint.valueSubsetArray.splice(index, 1);\n    }\n  });\n};\n/**\n * Updates selection datum with newly loaded content.\n *\n * @private\n * @param {Array} internalValueSubset - input internalValueSubset array\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - graph config object\n * @returns {undefined} - returns nothing\n */\nvar updateSelectionBars = function updateSelectionBars(internalValueSubset, canvasSVG, config) {\n  var selectionPath = canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection));\n  selectionPath.each(function (dataPoint) {\n    var value = internalValueSubset.filter(function (v) {\n      return config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.AXIS_TYPE.TIME_SERIES ? v.x.toISOString() === dataPoint.x : v.x === dataPoint.x;\n    });\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(value)) {\n      dataPoint.valueSubsetArray.push(value[0]);\n    }\n  });\n};\n/**\n * Creates a d3 svg selection bar\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar drawSelectionBars = function drawSelectionBars(scale, bandScale, config, canvasSVG) {\n  var tickValues = config.axis.x.ticks.values.map(function (d) {\n    return {\n      x: d,\n      valueSubsetArray: []\n    };\n  });\n  var selectionPath = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].barSelectionGroup, true).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_0__.calculateVerticalPadding)(config), \")\")).selectAll(\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection)).data(tickValues);\n  selectionPath.enter().append('rect').attr('aria-hidden', true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection, true).attr('aria-describedby', function (value) {\n    return \"bar-selector-\".concat(tickValues.indexOf(value));\n  }).attr('rx', 3).attr('ry', 3);\n  selectionPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n/**\n * Contains logic to calculate x, y, height, width for selection bar\n * x is calculated using first visible content in the datum array for a tick.\n * y is calculated using maximum y available in datum.\n * Last content - first content range is the width\n * max y range - min y range is the height\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {Array} shownTargets - graph's shownTarget array\n * @param {Array} datum - selection datum array\n * @returns {object} Object that contains methods for calculating x, y, height, width.\n */\nvar selectionAttributeHelper = function selectionAttributeHelper(scale, bandScale, shownTargets, datum) {\n  var barAttributeHelper = (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_4__.barAttributesHelper)(scale, bandScale);\n  var shownDatum = datum.filter(function (v) {\n    return shownTargets.indexOf(v.key) > -1;\n  });\n  var maxYIndex = function (targets) {\n    var maxIndex = 0;\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(targets)) {\n      var maxY = Math.max(0, targets[0].y + targets[0].y0);\n      targets.forEach(function (v, i) {\n        var temp = Math.max(0, v.y + v.y0);\n        if (maxY <= temp) {\n          maxIndex = i;\n          maxY = temp;\n        }\n      });\n    }\n    return maxIndex;\n  }(shownDatum);\n  var minYIndex = function (targets) {\n    var maxIndex = 0;\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(targets)) {\n      var maxY = Math.min(0, targets[0].y + targets[0].y0);\n      targets.forEach(function (v, i) {\n        var temp = Math.min(0, v.y + v.y0);\n        if (maxY >= temp) {\n          maxIndex = i;\n          maxY = temp;\n        }\n      });\n    }\n    return maxIndex;\n  }(shownDatum);\n  var maxXIndex = function (targets) {\n    var maxIndex = 0;\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(targets)) {\n      var maxX = 0;\n      targets.forEach(function (v, i) {\n        var temp = Math.max(maxX, barAttributeHelper.x(v));\n        if (temp > maxX) {\n          maxIndex = i;\n          maxX = temp;\n        }\n      });\n    }\n    return maxIndex;\n  }(shownDatum);\n  var leftRange = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? barAttributeHelper.x(shownDatum[0]) : 0;\n  var topRange = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? barAttributeHelper.y(shownDatum[maxYIndex]) : 0;\n  var rightRange = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? barAttributeHelper.x(shownDatum[maxXIndex]) + barAttributeHelper.width() : 0;\n  var bottomRange = _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? barAttributeHelper.y(shownDatum[minYIndex]) + barAttributeHelper.height(shownDatum[minYIndex]) : 0;\n  return {\n    x: function x() {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? leftRange - PADDING : 0;\n    },\n    y: function y() {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? topRange - PADDING : 0;\n    },\n    height: function height() {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? bottomRange - topRange + 2 * PADDING : 0;\n    },\n    width: function width() {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].notEmpty(shownDatum) ? rightRange - leftRange + 2 * PADDING : 0;\n    }\n  };\n};\n\n/**\n * Transforms selection bars for all ticks in the Bar graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 object for selection bars\n */\nvar translateSelectBars = function translateSelectBars(scale, bandScale, canvasSVG, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].taskBarSelection)).each(function (dataPoint, i) {\n    var selectionAttrHelper = selectionAttributeHelper(scale, bandScale, config.shownTargets, dataPoint.valueSubsetArray);\n    canvasSVG.select(\"rect[aria-describedby=bar-selector-\".concat(i, \"]\")).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', selectionAttrHelper.x()).attr('y', selectionAttrHelper.y()).attr('height', selectionAttrHelper.height()).attr('width', selectionAttrHelper.width());\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/helpers/translateHelpers.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/helpers/translateHelpers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   translateBarGraph: function() { return /* binding */ translateBarGraph; },\n/* harmony export */   translateTextLabel: function() { return /* binding */ translateTextLabel; }\n/* harmony export */ });\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./axisInfoRowHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/axisInfoRowHelpers.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/creationHelpers.js\");\n/* harmony import */ var _selectionHelpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./selectionHelpers */ \"./packages/carbon-graphs/src/js/controls/Bar/helpers/selectionHelpers.js\");\n\n\n\n\n\n\n\n\n/**\n * @typedef d3\n */\n\n/**\n * Transforms bars for a data point set in the Bar graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} bandScale - bar x-axis band scale\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @param {object} config - graph config object\n * @returns {object} d3 select object\n */\nvar translateBarGraph = function translateBarGraph(scale, bandScale, canvasSVG, dataTarget, config) {\n  var attributeHelper = (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_3__.barAttributesHelper)(scale, bandScale);\n  (0,_selectionHelpers__WEBPACK_IMPORTED_MODULE_4__.translateSelectBars)(scale, bandScale, canvasSVG, config);\n  return canvasSVG.selectAll(\"rect[aria-describedby=\".concat(dataTarget.key, \"]\")).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', function (d) {\n    return attributeHelper.x(d);\n  }).attr('y', function (d) {\n    return attributeHelper.y(d);\n  }).attr('width', attributeHelper.width()).attr('height', function (d) {\n    return attributeHelper.height(d);\n  });\n};\n\n/**\n * Translates text label in axis info row\n *\n * @private\n * @param {object} bandScale - bar x-axis band scale\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - graph config object\n * @param {Array} canvasSVG -d3 object of canvas svg\n * @param {Array} textLabelList - input axis info row JSON\n * @param {object} dataTarget - Data points object\n * @returns {object} d3 select object\n */\nvar translateTextLabel = function translateTextLabel(bandScale, scale, config, canvasSVG, textLabelList, dataTarget) {\n  var attributeHelper = (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_3__.barAttributesHelper)(scale, bandScale);\n  var axisInfoPath = canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].axisInfoRow));\n  return axisInfoPath.selectAll(\"g[aria-describedby=\\\"text_label_\".concat(dataTarget.key, \"\\\"]\")).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function (d, index) {\n    return \"translate(\".concat((0,_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_2__.getTextLabelsXPosition)(attributeHelper, textLabelList, index), \", \").concat((0,_axisInfoRowHelpers__WEBPACK_IMPORTED_MODULE_2__.getTextLabelsYPosition)(config), \")\");\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CYXIvaGVscGVycy90cmFuc2xhdGVIZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBYTs7QUFFc0M7QUFDTjtBQUlmO0FBQzBCO0FBQ0M7O0FBRXpEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTU0saUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBSUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsVUFBVSxFQUFFQyxNQUFNLEVBQUs7RUFDN0UsSUFBTUMsZUFBZSxHQUFHUixxRUFBbUIsQ0FBQ0csS0FBSyxFQUFFQyxTQUFTLENBQUM7RUFDN0RILHNFQUFtQixDQUFDRSxLQUFLLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFRSxNQUFNLENBQUM7RUFDeEQsT0FBT0YsU0FBUyxDQUNiSSxTQUFTLDBCQUFBQyxNQUFBLENBQTBCSixVQUFVLENBQUNLLEdBQUcsTUFBRyxDQUFDLENBQ3JEQyxVQUFVLENBQUMsQ0FBQyxDQUNaQyxJQUFJLENBQUNqQiwwREFBUyxDQUFDa0IsWUFBWSxDQUFDUCxNQUFNLENBQUNRLGtCQUFrQixDQUFDSCxVQUFVLENBQUMsQ0FBQyxDQUNsRUksSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFDQyxDQUFDO0lBQUEsT0FBS1QsZUFBZSxDQUFDVSxDQUFDLENBQUNELENBQUMsQ0FBQztFQUFBLEVBQUMsQ0FDdENELElBQUksQ0FBQyxHQUFHLEVBQUUsVUFBQ0MsQ0FBQztJQUFBLE9BQUtULGVBQWUsQ0FBQ1csQ0FBQyxDQUFDRixDQUFDLENBQUM7RUFBQSxFQUFDLENBQ3RDRCxJQUFJLENBQUMsT0FBTyxFQUFFUixlQUFlLENBQUNZLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FDdENKLElBQUksQ0FBQyxRQUFRLEVBQUUsVUFBQ0MsQ0FBQztJQUFBLE9BQUtULGVBQWUsQ0FBQ2EsTUFBTSxDQUFDSixDQUFDLENBQUM7RUFBQSxFQUFDO0FBQ3JELENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUssa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFrQkEsQ0FDdEJsQixTQUFTLEVBQ1RELEtBQUssRUFDTEksTUFBTSxFQUNORixTQUFTLEVBQ1RrQixhQUFhLEVBQ2JqQixVQUFVLEVBQ1A7RUFDSCxJQUFNRSxlQUFlLEdBQUdSLHFFQUFtQixDQUFDRyxLQUFLLEVBQUVDLFNBQVMsQ0FBQztFQUM3RCxJQUFNb0IsWUFBWSxHQUFHbkIsU0FBUyxDQUFDb0IsTUFBTSxLQUFBZixNQUFBLENBQUtiLHVEQUFNLENBQUM2QixXQUFXLENBQUUsQ0FBQztFQUMvRCxPQUFPRixZQUFZLENBQ2hCZixTQUFTLG9DQUFBQyxNQUFBLENBQW1DSixVQUFVLENBQUNLLEdBQUcsUUFBSSxDQUFDLENBQy9EQyxVQUFVLENBQUMsQ0FBQyxDQUNaQyxJQUFJLENBQUNqQiwwREFBUyxDQUFDa0IsWUFBWSxDQUFDUCxNQUFNLENBQUNRLGtCQUFrQixDQUFDSCxVQUFVLENBQUMsQ0FBQyxDQUNsRUksSUFBSSxDQUNILFdBQVcsRUFDWCxVQUFDQyxDQUFDLEVBQUVVLEtBQUs7SUFBQSxvQkFBQWpCLE1BQUEsQ0FBa0JaLDJFQUFzQixDQUMvQ1UsZUFBZSxFQUNmZSxhQUFhLEVBQ2JJLEtBQ0YsQ0FBQyxRQUFBakIsTUFBQSxDQUFLWCwyRUFBc0IsQ0FBQ1EsTUFBTSxDQUFDO0VBQUEsQ0FDdEMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CYXIvaGVscGVycy90cmFuc2xhdGVIZWxwZXJzLmpzP2Y3MzQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgY29uc3RhbnRzIGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvY29uc3RhbnRzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vLi4vLi4vaGVscGVycy9zdHlsZXMnO1xuaW1wb3J0IHtcbiAgZ2V0VGV4dExhYmVsc1hQb3NpdGlvbixcbiAgZ2V0VGV4dExhYmVsc1lQb3NpdGlvbixcbn0gZnJvbSAnLi9heGlzSW5mb1Jvd0hlbHBlcnMnO1xuaW1wb3J0IHsgYmFyQXR0cmlidXRlc0hlbHBlciB9IGZyb20gJy4vY3JlYXRpb25IZWxwZXJzJztcbmltcG9ydCB7IHRyYW5zbGF0ZVNlbGVjdEJhcnMgfSBmcm9tICcuL3NlbGVjdGlvbkhlbHBlcnMnO1xuXG4vKipcbiAqIEB0eXBlZGVmIGQzXG4gKi9cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGJhcnMgZm9yIGEgZGF0YSBwb2ludCBzZXQgaW4gdGhlIEJhciBncmFwaCBvbiByZXNpemVcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IHNjYWxlIC0gZDMgc2NhbGUgZm9yIEdyYXBoXG4gKiBAcGFyYW0ge29iamVjdH0gYmFuZFNjYWxlIC0gYmFyIHgtYXhpcyBiYW5kIHNjYWxlXG4gKiBAcGFyYW0ge2QzLnNlbGVjdGlvbn0gY2FudmFzU1ZHIC0gZDMgc2VsZWN0aW9uIG5vZGUgb2YgY2FudmFzIHN2Z1xuICogQHBhcmFtIHtvYmplY3R9IGRhdGFUYXJnZXQgLSBEYXRhIHBvaW50cyBvYmplY3RcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgLSBncmFwaCBjb25maWcgb2JqZWN0XG4gKiBAcmV0dXJucyB7b2JqZWN0fSBkMyBzZWxlY3Qgb2JqZWN0XG4gKi9cbmNvbnN0IHRyYW5zbGF0ZUJhckdyYXBoID0gKHNjYWxlLCBiYW5kU2NhbGUsIGNhbnZhc1NWRywgZGF0YVRhcmdldCwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZUhlbHBlciA9IGJhckF0dHJpYnV0ZXNIZWxwZXIoc2NhbGUsIGJhbmRTY2FsZSk7XG4gIHRyYW5zbGF0ZVNlbGVjdEJhcnMoc2NhbGUsIGJhbmRTY2FsZSwgY2FudmFzU1ZHLCBjb25maWcpO1xuICByZXR1cm4gY2FudmFzU1ZHXG4gICAgLnNlbGVjdEFsbChgcmVjdFthcmlhLWRlc2NyaWJlZGJ5PSR7ZGF0YVRhcmdldC5rZXl9XWApXG4gICAgLnRyYW5zaXRpb24oKVxuICAgIC5jYWxsKGNvbnN0YW50cy5kM1RyYW5zaXRpb24oY29uZmlnLnNldHRpbmdzRGljdGlvbmFyeS50cmFuc2l0aW9uKSlcbiAgICAuYXR0cigneCcsIChkKSA9PiBhdHRyaWJ1dGVIZWxwZXIueChkKSlcbiAgICAuYXR0cigneScsIChkKSA9PiBhdHRyaWJ1dGVIZWxwZXIueShkKSlcbiAgICAuYXR0cignd2lkdGgnLCBhdHRyaWJ1dGVIZWxwZXIud2lkdGgoKSlcbiAgICAuYXR0cignaGVpZ2h0JywgKGQpID0+IGF0dHJpYnV0ZUhlbHBlci5oZWlnaHQoZCkpO1xufTtcblxuLyoqXG4gKiBUcmFuc2xhdGVzIHRleHQgbGFiZWwgaW4gYXhpcyBpbmZvIHJvd1xuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gYmFuZFNjYWxlIC0gYmFyIHgtYXhpcyBiYW5kIHNjYWxlXG4gKiBAcGFyYW0ge29iamVjdH0gc2NhbGUgLSBkMyBzY2FsZSBmb3IgR3JhcGhcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgLSBncmFwaCBjb25maWcgb2JqZWN0XG4gKiBAcGFyYW0ge0FycmF5fSBjYW52YXNTVkcgLWQzIG9iamVjdCBvZiBjYW52YXMgc3ZnXG4gKiBAcGFyYW0ge0FycmF5fSB0ZXh0TGFiZWxMaXN0IC0gaW5wdXQgYXhpcyBpbmZvIHJvdyBKU09OXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YVRhcmdldCAtIERhdGEgcG9pbnRzIG9iamVjdFxuICogQHJldHVybnMge29iamVjdH0gZDMgc2VsZWN0IG9iamVjdFxuICovXG5jb25zdCB0cmFuc2xhdGVUZXh0TGFiZWwgPSAoXG4gIGJhbmRTY2FsZSxcbiAgc2NhbGUsXG4gIGNvbmZpZyxcbiAgY2FudmFzU1ZHLFxuICB0ZXh0TGFiZWxMaXN0LFxuICBkYXRhVGFyZ2V0LFxuKSA9PiB7XG4gIGNvbnN0IGF0dHJpYnV0ZUhlbHBlciA9IGJhckF0dHJpYnV0ZXNIZWxwZXIoc2NhbGUsIGJhbmRTY2FsZSk7XG4gIGNvbnN0IGF4aXNJbmZvUGF0aCA9IGNhbnZhc1NWRy5zZWxlY3QoYC4ke3N0eWxlcy5heGlzSW5mb1Jvd31gKTtcbiAgcmV0dXJuIGF4aXNJbmZvUGF0aFxuICAgIC5zZWxlY3RBbGwoYGdbYXJpYS1kZXNjcmliZWRieT1cInRleHRfbGFiZWxfJHtkYXRhVGFyZ2V0LmtleX1cIl1gKVxuICAgIC50cmFuc2l0aW9uKClcbiAgICAuY2FsbChjb25zdGFudHMuZDNUcmFuc2l0aW9uKGNvbmZpZy5zZXR0aW5nc0RpY3Rpb25hcnkudHJhbnNpdGlvbikpXG4gICAgLmF0dHIoXG4gICAgICAndHJhbnNmb3JtJyxcbiAgICAgIChkLCBpbmRleCkgPT4gYHRyYW5zbGF0ZSgke2dldFRleHRMYWJlbHNYUG9zaXRpb24oXG4gICAgICAgIGF0dHJpYnV0ZUhlbHBlcixcbiAgICAgICAgdGV4dExhYmVsTGlzdCxcbiAgICAgICAgaW5kZXgsXG4gICAgICApfSwgJHtnZXRUZXh0TGFiZWxzWVBvc2l0aW9uKGNvbmZpZyl9KWAsXG4gICAgKTtcbn07XG5cbmV4cG9ydCB7IHRyYW5zbGF0ZUJhckdyYXBoLCB0cmFuc2xhdGVUZXh0TGFiZWwgfTtcbiJdLCJuYW1lcyI6WyJjb25zdGFudHMiLCJzdHlsZXMiLCJnZXRUZXh0TGFiZWxzWFBvc2l0aW9uIiwiZ2V0VGV4dExhYmVsc1lQb3NpdGlvbiIsImJhckF0dHJpYnV0ZXNIZWxwZXIiLCJ0cmFuc2xhdGVTZWxlY3RCYXJzIiwidHJhbnNsYXRlQmFyR3JhcGgiLCJzY2FsZSIsImJhbmRTY2FsZSIsImNhbnZhc1NWRyIsImRhdGFUYXJnZXQiLCJjb25maWciLCJhdHRyaWJ1dGVIZWxwZXIiLCJzZWxlY3RBbGwiLCJjb25jYXQiLCJrZXkiLCJ0cmFuc2l0aW9uIiwiY2FsbCIsImQzVHJhbnNpdGlvbiIsInNldHRpbmdzRGljdGlvbmFyeSIsImF0dHIiLCJkIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInRyYW5zbGF0ZVRleHRMYWJlbCIsInRleHRMYWJlbExpc3QiLCJheGlzSW5mb1BhdGgiLCJzZWxlY3QiLCJheGlzSW5mb1JvdyIsImluZGV4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/helpers/translateHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bar/index.js":
/*!*************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bar/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Bar__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Bar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bar */ \"./packages/carbon-graphs/src/js/controls/Bar/Bar.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CYXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CYXIvaW5kZXguanM/ZTMwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFyIGZyb20gJy4vQmFyJztcblxuZXhwb3J0IHsgQmFyIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJCYXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bar/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n/**\n * A Bubble graph is a graph used to represent a collection of data\n * points connected by a Bubble along the X and Y Axis.\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module Bubble\n * @class Bubble\n */\nvar Bubble = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {object} input - Input JSON instance created using GraphConfig\n     */\n  function Bubble(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Bubble);\n    _this = _callSuper(this, Bubble);\n    _this.config = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.loadInput)(input);\n    _this.config.yAxis = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(_this.config.yAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Y_AXIS);\n    _this.valuesRange = {};\n    _this.valuesRange.x = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.calculateValuesRangeXAxis)(_this.config.values);\n    _this.valuesRange[_this.config.yAxis] = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.calculateValuesRangeYAxes)(_this.config.values);\n    _this.dataTarget = {};\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Bubble, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Bubble, [{\n    key: \"load\",\n    value: function load(graph) {\n      // eslint-disable-next-line no-console\n      console.warn('Bubble will be deprecated in a future release. Please use BubbleSingleDataset or BubbleMultipleDataset');\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.createRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].regionGroup)), this.dataTarget.regions, \"region_\".concat(this.dataTarget.key), this.config.yAxis);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_8__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.removeRegion)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].regionGroup)), this.dataTarget);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_9__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_8__.removeLabelShapeItem)(graph.axesLabelShapeGroup[this.config.yAxis], this.dataTarget, graph.config);\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        if (graph.content.length > 1 && !graph.config.shouldHideAllRegion) {\n          if ((0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.areRegionsIdentical)(graph.svg)) {\n            graph.config.shouldHideAllRegion = false;\n          } else {\n            (0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.hideAllRegions)(graph.svg);\n            graph.config.shouldHideAllRegion = true;\n          }\n        }\n      } else {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.hideAllRegions)(graph.svg);\n        graph.config.shouldHideAllRegion = true;\n      }\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_10__.translateRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].regionGroup)));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.translateBubbleGraph)(graph.scale, graph.svg, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      this.config.values = graphData.values;\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.processDataPoints)(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var bubbleGraph = graph.content.filter(function (bubble) {\n        return bubble.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmptyArray(bubbleGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_9__.reflowLegend)(graph.legendSVG, bubbleGraph[0].config, graph, eventHandlers);\n      }\n      var currentPointsGroup = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].currentPointsGroup)).data([this.dataTarget]);\n      currentPointsGroup.exit().remove();\n      var currentPointsPath = currentPointsGroup.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].pointGroup)).data(this.dataTarget);\n      currentPointsPath.exit().remove();\n      var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].currentPointsGroup)).selectAll(\"[class=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].point, \"\\\"]\")).data((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getDataPointValues)(this.dataTarget));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.drawBubbles)(graph.scale, graph.config, pointPath.enter(), this.dataTarget, graph.legendSVG);\n      pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      this.valuesRange.x = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.calculateValuesRangeXAxis)(this.config.values);\n      this.valuesRange[this.config.yAxis] = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.calculateValuesRangeYAxes)(this.config.values);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_5__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bubble);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/BubbleConfig.js":
/*!***********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/BubbleConfig.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n/**\n * API to parse consumer input for Bubble graph\n *\n * @class BubbleConfig\n */\nvar BubbleConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function BubbleConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, BubbleConfig);\n    _this = _callSuper(this, BubbleConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * Returns the config object\n     *\n     * @returns {object} config object\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(BubbleConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BubbleConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @param {object} inputJSON - Input JSON\n       * @returns {BubbleConfig} instance object\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object.\n       *\n       * @returns {BubbleConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.validateBaseInput)(this.input);\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {BubbleConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (BubbleConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvQnViYmxlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQUFLLFdBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFdBQUFELENBQUEsR0FBQUosaUZBQUEsQ0FBQUksQ0FBQSxHQUFBTCw0RkFBQSxDQUFBSSxDQUFBLEVBQUFHLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBSixDQUFBLEVBQUFDLENBQUEsUUFBQUwsaUZBQUEsQ0FBQUcsQ0FBQSxFQUFBTSxXQUFBLElBQUFMLENBQUEsQ0FBQU0sS0FBQSxDQUFBUCxDQUFBLEVBQUFFLENBQUE7QUFBQSxTQUFBQywwQkFBQSxjQUFBSCxDQUFBLElBQUFRLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVAsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUEsaUNBQUFSLENBQUEsYUFBQUcseUJBQUEsWUFBQUEsMEJBQUEsYUFBQUgsQ0FBQTtBQUV5RDtBQUM5Qjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBLElBS01lLFlBQVksMEJBQUFDLFdBQUE7RUFDaEI7QUFDRjtBQUNBO0VBQ0UsU0FBQUQsYUFBQSxFQUFjO0lBQUEsSUFBQUUsS0FBQTtJQUFBdkIsaUZBQUEsT0FBQXFCLFlBQUE7SUFDWkUsS0FBQSxHQUFBbEIsVUFBQSxPQUFBZ0IsWUFBQTtJQUNBRSxLQUFBLENBQUtDLE1BQU0sR0FBRyxJQUFJO0lBQ2xCRCxLQUFBLENBQUtFLEtBQUssR0FBRyxJQUFJO0lBQUMsT0FBQUYsS0FBQTtFQUNwQjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBSkVuQiwyRUFBQSxDQUFBaUIsWUFBQSxFQUFBQyxXQUFBO0VBQUEsT0FBQXJCLDhFQUFBLENBQUFvQixZQUFBO0lBQUFLLEdBQUE7SUFBQUMsS0FBQSxFQUtBLFNBQUFDLFVBQUEsRUFBWTtNQUNWLE9BQU8sSUFBSSxDQUFDSixNQUFNO0lBQ3BCOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUxFO0lBQUFFLEdBQUE7SUFBQUMsS0FBQSxFQU1BLFNBQUFFLFNBQVNDLFNBQVMsRUFBRTtNQUNsQixJQUFJLENBQUNMLEtBQUssR0FBR0ssU0FBUztNQUN0QixPQUFPLElBQUk7SUFDYjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBSkU7SUFBQUosR0FBQTtJQUFBQyxLQUFBLEVBS0EsU0FBQUksY0FBQSxFQUFnQjtNQUNkWixtRUFBaUIsQ0FBQyxJQUFJLENBQUNNLEtBQUssQ0FBQztNQUM3QixPQUFPLElBQUk7SUFDYjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0VBSkU7SUFBQUMsR0FBQTtJQUFBQyxLQUFBLEVBS0EsU0FBQUssTUFBQSxFQUFRO01BQ04sSUFBSSxDQUFDUixNQUFNLEdBQUdKLHNEQUFLLENBQUNhLFNBQVMsQ0FBQyxJQUFJLENBQUNSLEtBQUssQ0FBQztNQUN6QyxPQUFPLElBQUk7SUFDYjtFQUFDO0FBQUEsRUFoRHdCUCx3REFBVTtBQW1EckMsK0RBQWVHLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvQnViYmxlQ29uZmlnLmpzPzA2MzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQmFzZUNvbmZpZywgeyB2YWxpZGF0ZUJhc2VJbnB1dCB9IGZyb20gJy4uLy4uL2NvcmUvQmFzZUNvbmZpZyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vaGVscGVycy91dGlscyc7XG5cbi8qKlxuICogQVBJIHRvIHBhcnNlIGNvbnN1bWVyIGlucHV0IGZvciBCdWJibGUgZ3JhcGhcbiAqXG4gKiBAY2xhc3MgQnViYmxlQ29uZmlnXG4gKi9cbmNsYXNzIEJ1YmJsZUNvbmZpZyBleHRlbmRzIEJhc2VDb25maWcge1xuICAvKipcbiAgICAgKiBAaW5oZXJpdGRvY1xuICAgICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gbnVsbDtcbiAgICB0aGlzLmlucHV0ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbmZpZyBvYmplY3RcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbmZpZyBvYmplY3RcbiAgICAgKi9cbiAgZ2V0Q29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZztcbiAgfVxuXG4gIC8qKlxuICAgICAqIFNldHMgdGhlIGlucHV0IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGlucHV0SlNPTiAtIElucHV0IEpTT05cbiAgICAgKiBAcmV0dXJucyB7QnViYmxlQ29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgc2V0SW5wdXQoaW5wdXRKU09OKSB7XG4gICAgdGhpcy5pbnB1dCA9IGlucHV0SlNPTjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgICAqIFZhbGlkYXRlcyBhbmQgdmVyaWZpZXMgdGhlIGlucHV0IEpTT04gb2JqZWN0LlxuICAgICAqXG4gICAgICogQHJldHVybnMge0J1YmJsZUNvbmZpZ30gaW5zdGFuY2Ugb2JqZWN0XG4gICAgICovXG4gIHZhbGlkYXRlSW5wdXQoKSB7XG4gICAgdmFsaWRhdGVCYXNlSW5wdXQodGhpcy5pbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICAgKiBDbG9uZXMgdGhlIGlucHV0IEpTT04gaW50byB0aGUgY29uZmlnIG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMge0J1YmJsZUNvbmZpZ30gaW5zdGFuY2Ugb2JqZWN0XG4gICAgICovXG4gIGNsb25lKCkge1xuICAgIHRoaXMuY29uZmlnID0gdXRpbHMuZGVlcENsb25lKHRoaXMuaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJ1YmJsZUNvbmZpZztcbiJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9nZXRQcm90b3R5cGVPZiIsIl9pbmhlcml0cyIsIl9jYWxsU3VwZXIiLCJ0IiwibyIsImUiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImNvbnN0cnVjdG9yIiwiYXBwbHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJCYXNlQ29uZmlnIiwidmFsaWRhdGVCYXNlSW5wdXQiLCJ1dGlscyIsIkJ1YmJsZUNvbmZpZyIsIl9CYXNlQ29uZmlnIiwiX3RoaXMiLCJjb25maWciLCJpbnB1dCIsImtleSIsInZhbHVlIiwiZ2V0Q29uZmlnIiwic2V0SW5wdXQiLCJpbnB1dEpTT04iLCJ2YWxpZGF0ZUlucHV0IiwiY2xvbmUiLCJkZWVwQ2xvbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/BubbleConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/BubbleMultipleDataset.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/BubbleMultipleDataset.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\");\n/* harmony import */ var _helpers_helpersMultipleDataset__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/helpersMultipleDataset */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersMultipleDataset.js\");\n/* harmony import */ var _Bubble__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Bubble */ \"./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A Bubble graph is a graph used to represent a collection of data\n * points connected by a Bubble along the X and Y Axis.\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module Bubble\n * @class BubbleMultipleDataset\n */\nvar BubbleMultipleDataset = /*#__PURE__*/function (_Bubble) {\n  function BubbleMultipleDataset() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, BubbleMultipleDataset);\n    return _callSuper(this, BubbleMultipleDataset, arguments);\n  }\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(BubbleMultipleDataset, _Bubble);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BubbleMultipleDataset, [{\n    key: \"load\",\n    value:\n    /**\n       * @inheritdoc\n       * @public\n       */\n    function load(graph) {\n      if (graph.content.length > _helpers_constants__WEBPACK_IMPORTED_MODULE_5__.BUBBLE.MAX_DATASETS_MULTIPLE_API) {\n        // eslint-disable-next-line no-console\n        console.warn('BubbleMultipleDataset is limited to a maximum of 7 datasets');\n        return this;\n      }\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpersMultipleDataset__WEBPACK_IMPORTED_MODULE_12__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.createRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].regionGroup)), this.dataTarget.regions, \"region_\".concat(this.dataTarget.key), this.config.yAxis);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    // /**\n    //  * @inheritdoc\n    //  */\n    // unload(graph) { ... }\n    //  inherited from class Bubble\n\n    // /**\n    //  * @inheritdoc\n    //  */\n    // resize(graph) { ... }\n    //  inherited from class Bubble\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      this.config.values = graphData.values;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.processDataPoints)(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var bubbleGraph = graph.content.filter(function (bubble) {\n        return bubble.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmptyArray(bubbleGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.reflowLegend)(graph.legendSVG, bubbleGraph[0].config, graph, eventHandlers);\n      }\n      var currentPointsGroup = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].currentPointsGroup)).data([this.dataTarget]);\n      currentPointsGroup.exit().remove();\n      var currentPointsPath = currentPointsGroup.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].pointGroup)).data(this.dataTarget);\n      currentPointsPath.exit().remove();\n      var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].currentPointsGroup)).selectAll(\"[class=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].point, \"\\\"]\")).data((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.getDataPointValues)(this.dataTarget));\n      (0,_helpers_helpersMultipleDataset__WEBPACK_IMPORTED_MODULE_12__.drawBubbles)(graph.scale, graph.config, pointPath.enter(), this.dataTarget, graph.legendSVG);\n      pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      this.valuesRange.x = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.calculateValuesRangeXAxis)(this.config.values);\n      this.valuesRange[this.config.yAxis] = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.calculateValuesRangeYAxes)(this.config.values);\n    }\n\n    // /**\n    //  * @inheritdoc\n    //  */\n    // redraw(graph) { ... }\n    //  inherited from class Bubble\n  }]);\n}(_Bubble__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (BubbleMultipleDataset);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/BubbleMultipleDataset.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/BubbleSingleDataset.js":
/*!******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/BubbleSingleDataset.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\");\n/* harmony import */ var _helpers_helpersSingleDataset__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/helpersSingleDataset */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersSingleDataset.js\");\n/* harmony import */ var _Bubble__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Bubble */ \"./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n/**\n * A Bubble graph is a graph used to represent a collection of data\n * points connected by a Bubble along the X and Y Axis.\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module BubbleSingleDataset\n * @class BubbleSingleDataset\n */\nvar BubbleSingleDataset = /*#__PURE__*/function (_Bubble) {\n  function BubbleSingleDataset() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, BubbleSingleDataset);\n    return _callSuper(this, BubbleSingleDataset, arguments);\n  }\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(BubbleSingleDataset, _Bubble);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BubbleSingleDataset, [{\n    key: \"load\",\n    value:\n    /**\n       * @inheritdoc\n       * @public\n       */\n    function load(graph) {\n      if (graph.content.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn('BubbleSingleDataset can only use one dataset.');\n        return this;\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isUndefined(graph.content[0].config.color) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDefined(graph.content[0].config.palette) && graph.content[0].config.values.length > _helpers_constants__WEBPACK_IMPORTED_MODULE_5__.BUBBLE.MAX_BUBBLES_SINGLE_DATASET) {\n        // eslint-disable-next-line no-console\n        console.warn('Cannot plot more than 4 bubbles using shades.');\n        return this;\n      }\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpersSingleDataset__WEBPACK_IMPORTED_MODULE_12__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.createRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].regionGroup)), this.dataTarget.regions, \"region_\".concat(this.dataTarget.key), this.config.yAxis);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    // /**\n    //  * @inheritdoc\n    //  */\n    // unload(graph) { ... }\n    //  inherited from class Bubble\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.dataTarget.regions)) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.hideAllRegions)(graph.svg);\n        graph.config.shouldHideAllRegion = true;\n      }\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.translateRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].regionGroup)));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.translateBubbleGraph)(graph.scale, graph.svg, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      this.config.values = graphData.values;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_14__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.processDataPoints)(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var bubbleGraph = graph.content.filter(function (bubble) {\n        return bubble.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmptyArray(bubbleGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.reflowLegend)(graph.legendSVG, bubbleGraph[0].config, graph, eventHandlers);\n      }\n      var currentPointsGroup = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].currentPointsGroup)).data([this.dataTarget]);\n      currentPointsGroup.exit().remove();\n      var currentPointsPath = currentPointsGroup.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].pointGroup)).data(this.dataTarget);\n      currentPointsPath.exit().remove();\n      var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].currentPointsGroup)).selectAll(\"[class=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].point, \"\\\"]\")).data((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.getDataPointValues)(this.dataTarget));\n      (0,_helpers_helpersSingleDataset__WEBPACK_IMPORTED_MODULE_12__.drawBubbles)(graph.scale, graph.config, pointPath.enter(), this.dataTarget, graph.legendSVG);\n      pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      this.valuesRange.x = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.calculateValuesRangeXAxis)(this.config.values);\n      this.valuesRange[this.config.yAxis] = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.calculateValuesRangeYAxes)(this.config.values);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_helpersSingleDataset__WEBPACK_IMPORTED_MODULE_12__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n  }]);\n}(_Bubble__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (BubbleSingleDataset);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/BubbleSingleDataset.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bubbleScale: function() { return /* binding */ bubbleScale; },\n/* harmony export */   generateColor: function() { return /* binding */ generateColor; },\n/* harmony export */   generateColorSingleDataset: function() { return /* binding */ generateColorSingleDataset; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n/**\n * Gives bubble scale for given weight range in min and max\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @returns {d3.scale} - returns a function to get bubble radius\n */\nvar bubbleScale = function bubbleScale(dataTarget) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleLinear().domain([dataTarget.weight.min, dataTarget.weight.max]).range([_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_BUBBLE_RADIUS_MIN, _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_BUBBLE_RADIUS_MAX]);\n};\n\n/**\n * Generates color range for the given color lowerShade and upperShade\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @returns {d3.scale} - returns function to get color for specific bubble\n */\nvar generateColor = function generateColor(dataTarget) {\n  var lowerShade = dataTarget.hue.lowerShade;\n  var upperShade = dataTarget.hue.upperShade;\n  var radiusData;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isUndefined(dataTarget.weight)) {\n    radiusData = dataTarget.values.map(function (element) {\n      return element.y;\n    });\n  } else {\n    radiusData = dataTarget.values.map(function (element) {\n      return bubbleScale(dataTarget)(element.weight);\n    });\n  }\n  var huePaletteList = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleLinear().domain(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.extent(radiusData)).range([lowerShade, upperShade]);\n  return huePaletteList;\n};\n\n/**\n * Generates color range for the given color for a single dataset\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @returns {d3.scale} - returns function to get color for specific bubble\n */\nvar generateColorSingleDataset = function generateColorSingleDataset(dataTarget) {\n  var radiusData;\n  var color = [];\n  var huePaletteList = null;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isUndefined(dataTarget.weight)) {\n    radiusData = dataTarget.values.map(function (element) {\n      return element.y;\n    });\n  } else {\n    radiusData = dataTarget.values.map(function (element) {\n      return bubbleScale(dataTarget)(element.weight);\n    });\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isDefined(dataTarget.palette)) {\n    color = dataTarget.palette;\n    switch (dataTarget.values.length) {\n      case 4:\n        if (color.length === 3) {\n          color.unshift(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__.BUBBLE.PALETTE.GRAY);\n        }\n        break;\n      case 2:\n        if (color.length === 1) {\n          color.splice(1, 1);\n        }\n        break;\n      case 1:\n        if (color.length === 1) {\n          color.splice(1, 2);\n        }\n        break;\n      default:\n        color = dataTarget.palette;\n    }\n  }\n  huePaletteList = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleQuantile().domain(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.extent(radiusData)).range(color);\n  return huePaletteList;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvaGVscGVycy9jb2xvckdyYWRpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5QztBQUNzQjtBQUNwQjs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNSSxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsVUFBVTtFQUFBLE9BQUtMLG1EQUM3QixDQUFDLENBQUMsQ0FDYk8sTUFBTSxDQUFDLENBQUNGLFVBQVUsQ0FBQ0csTUFBTSxDQUFDQyxHQUFHLEVBQUVKLFVBQVUsQ0FBQ0csTUFBTSxDQUFDRSxHQUFHLENBQUMsQ0FBQyxDQUN0REMsS0FBSyxDQUFDLENBQ0xWLDBEQUFTLENBQUNXLHlCQUF5QixFQUNuQ1gsMERBQVMsQ0FBQ1kseUJBQXlCLENBQ3BDLENBQUM7QUFBQTs7QUFFSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBSVQsVUFBVSxFQUFLO0VBQzNDLElBQVFVLFVBQVUsR0FBS1YsVUFBVSxDQUFDVyxHQUFHLENBQTdCRCxVQUFVO0VBQ2xCLElBQVFFLFVBQVUsR0FBS1osVUFBVSxDQUFDVyxHQUFHLENBQTdCQyxVQUFVO0VBQ2xCLElBQUlDLFVBQVU7RUFDZCxJQUFJZixzREFBSyxDQUFDZ0IsV0FBVyxDQUFDZCxVQUFVLENBQUNHLE1BQU0sQ0FBQyxFQUFFO0lBQ3hDVSxVQUFVLEdBQUdiLFVBQVUsQ0FBQ2UsTUFBTSxDQUFDQyxHQUFHLENBQUMsVUFBQ0MsT0FBTztNQUFBLE9BQUtBLE9BQU8sQ0FBQ0MsQ0FBQztJQUFBLEVBQUM7RUFDNUQsQ0FBQyxNQUFNO0lBQ0xMLFVBQVUsR0FBR2IsVUFBVSxDQUFDZSxNQUFNLENBQUNDLEdBQUcsQ0FBQyxVQUFDQyxPQUFPO01BQUEsT0FBS2xCLFdBQVcsQ0FBQ0MsVUFBVSxDQUFDLENBQUNpQixPQUFPLENBQUNkLE1BQU0sQ0FBQztJQUFBLEVBQUM7RUFDMUY7RUFDQSxJQUFNZ0IsY0FBYyxHQUFHeEIsbURBQ1QsQ0FBQyxDQUFDLENBQ2JPLE1BQU0sQ0FBQ1AsOENBQVMsQ0FBQ2tCLFVBQVUsQ0FBQyxDQUFDLENBQzdCUCxLQUFLLENBQUMsQ0FBQ0ksVUFBVSxFQUFFRSxVQUFVLENBQUMsQ0FBQztFQUVsQyxPQUFPTyxjQUFjO0FBQ3ZCLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNRSwwQkFBMEIsR0FBRyxTQUE3QkEsMEJBQTBCQSxDQUFJckIsVUFBVSxFQUFLO0VBQ3hELElBQUlhLFVBQVU7RUFDZCxJQUFJUyxLQUFLLEdBQUcsRUFBRTtFQUNkLElBQUlILGNBQWMsR0FBRyxJQUFJO0VBRXpCLElBQUlyQixzREFBSyxDQUFDZ0IsV0FBVyxDQUFDZCxVQUFVLENBQUNHLE1BQU0sQ0FBQyxFQUFFO0lBQ3hDVSxVQUFVLEdBQUdiLFVBQVUsQ0FBQ2UsTUFBTSxDQUFDQyxHQUFHLENBQUMsVUFBQ0MsT0FBTztNQUFBLE9BQUtBLE9BQU8sQ0FBQ0MsQ0FBQztJQUFBLEVBQUM7RUFDNUQsQ0FBQyxNQUFNO0lBQ0xMLFVBQVUsR0FBR2IsVUFBVSxDQUFDZSxNQUFNLENBQUNDLEdBQUcsQ0FBQyxVQUFDQyxPQUFPO01BQUEsT0FBS2xCLFdBQVcsQ0FBQ0MsVUFBVSxDQUFDLENBQUNpQixPQUFPLENBQUNkLE1BQU0sQ0FBQztJQUFBLEVBQUM7RUFDMUY7RUFFQSxJQUFJTCxzREFBSyxDQUFDeUIsU0FBUyxDQUFDdkIsVUFBVSxDQUFDd0IsT0FBTyxDQUFDLEVBQUU7SUFDdkNGLEtBQUssR0FBR3RCLFVBQVUsQ0FBQ3dCLE9BQU87SUFDMUIsUUFBUXhCLFVBQVUsQ0FBQ2UsTUFBTSxDQUFDVSxNQUFNO01BQ2hDLEtBQUssQ0FBQztRQUNKLElBQUlILEtBQUssQ0FBQ0csTUFBTSxLQUFLLENBQUMsRUFBRTtVQUN0QkgsS0FBSyxDQUFDSSxPQUFPLENBQUM3QixzREFBTSxDQUFDOEIsT0FBTyxDQUFDQyxJQUFJLENBQUM7UUFDcEM7UUFDQTtNQUNGLEtBQUssQ0FBQztRQUNKLElBQUlOLEtBQUssQ0FBQ0csTUFBTSxLQUFLLENBQUMsRUFBRTtVQUN0QkgsS0FBSyxDQUFDTyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNwQjtRQUNBO01BQ0YsS0FBSyxDQUFDO1FBQ0osSUFBSVAsS0FBSyxDQUFDRyxNQUFNLEtBQUssQ0FBQyxFQUFFO1VBQ3RCSCxLQUFLLENBQUNPLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3BCO1FBQ0E7TUFDRjtRQUNFUCxLQUFLLEdBQUd0QixVQUFVLENBQUN3QixPQUFPO0lBQzVCO0VBQ0Y7RUFFQUwsY0FBYyxHQUFHeEIscURBQ0QsQ0FBQyxDQUFDLENBQ2ZPLE1BQU0sQ0FBQ1AsOENBQVMsQ0FBQ2tCLFVBQVUsQ0FBQyxDQUFDLENBQzdCUCxLQUFLLENBQUNnQixLQUFLLENBQUM7RUFFZixPQUFPSCxjQUFjO0FBQ3ZCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvaGVscGVycy9jb2xvckdyYWRpZW50LmpzPzNhNWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZDMgZnJvbSAnLi4vLi4vLi4vZDNNb2R1bGVzJztcbmltcG9ydCBjb25zdGFudHMsIHsgQlVCQkxFIH0gZnJvbSAnLi4vLi4vLi4vaGVscGVycy9jb25zdGFudHMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvdXRpbHMnO1xuXG4vKipcbiAqIEdpdmVzIGJ1YmJsZSBzY2FsZSBmb3IgZ2l2ZW4gd2VpZ2h0IHJhbmdlIGluIG1pbiBhbmQgbWF4XG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhVGFyZ2V0IC0gZGF0YSBmb3IgdGhlIGJ1YmJsZSBncmFwaFxuICogQHJldHVybnMge2QzLnNjYWxlfSAtIHJldHVybnMgYSBmdW5jdGlvbiB0byBnZXQgYnViYmxlIHJhZGl1c1xuICovXG5leHBvcnQgY29uc3QgYnViYmxlU2NhbGUgPSAoZGF0YVRhcmdldCkgPT4gZDNcbiAgLnNjYWxlTGluZWFyKClcbiAgLmRvbWFpbihbZGF0YVRhcmdldC53ZWlnaHQubWluLCBkYXRhVGFyZ2V0LndlaWdodC5tYXhdKVxuICAucmFuZ2UoW1xuICAgIGNvbnN0YW50cy5ERUZBVUxUX0JVQkJMRV9SQURJVVNfTUlOLFxuICAgIGNvbnN0YW50cy5ERUZBVUxUX0JVQkJMRV9SQURJVVNfTUFYLFxuICBdKTtcblxuLyoqXG4gKiBHZW5lcmF0ZXMgY29sb3IgcmFuZ2UgZm9yIHRoZSBnaXZlbiBjb2xvciBsb3dlclNoYWRlIGFuZCB1cHBlclNoYWRlXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhVGFyZ2V0IC0gZGF0YSBmb3IgdGhlIGJ1YmJsZSBncmFwaFxuICogQHJldHVybnMge2QzLnNjYWxlfSAtIHJldHVybnMgZnVuY3Rpb24gdG8gZ2V0IGNvbG9yIGZvciBzcGVjaWZpYyBidWJibGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3IgPSAoZGF0YVRhcmdldCkgPT4ge1xuICBjb25zdCB7IGxvd2VyU2hhZGUgfSA9IGRhdGFUYXJnZXQuaHVlO1xuICBjb25zdCB7IHVwcGVyU2hhZGUgfSA9IGRhdGFUYXJnZXQuaHVlO1xuICBsZXQgcmFkaXVzRGF0YTtcbiAgaWYgKHV0aWxzLmlzVW5kZWZpbmVkKGRhdGFUYXJnZXQud2VpZ2h0KSkge1xuICAgIHJhZGl1c0RhdGEgPSBkYXRhVGFyZ2V0LnZhbHVlcy5tYXAoKGVsZW1lbnQpID0+IGVsZW1lbnQueSk7XG4gIH0gZWxzZSB7XG4gICAgcmFkaXVzRGF0YSA9IGRhdGFUYXJnZXQudmFsdWVzLm1hcCgoZWxlbWVudCkgPT4gYnViYmxlU2NhbGUoZGF0YVRhcmdldCkoZWxlbWVudC53ZWlnaHQpKTtcbiAgfVxuICBjb25zdCBodWVQYWxldHRlTGlzdCA9IGQzXG4gICAgLnNjYWxlTGluZWFyKClcbiAgICAuZG9tYWluKGQzLmV4dGVudChyYWRpdXNEYXRhKSlcbiAgICAucmFuZ2UoW2xvd2VyU2hhZGUsIHVwcGVyU2hhZGVdKTtcblxuICByZXR1cm4gaHVlUGFsZXR0ZUxpc3Q7XG59O1xuXG4vKipcbiAqIEdlbmVyYXRlcyBjb2xvciByYW5nZSBmb3IgdGhlIGdpdmVuIGNvbG9yIGZvciBhIHNpbmdsZSBkYXRhc2V0XG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhVGFyZ2V0IC0gZGF0YSBmb3IgdGhlIGJ1YmJsZSBncmFwaFxuICogQHJldHVybnMge2QzLnNjYWxlfSAtIHJldHVybnMgZnVuY3Rpb24gdG8gZ2V0IGNvbG9yIGZvciBzcGVjaWZpYyBidWJibGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ29sb3JTaW5nbGVEYXRhc2V0ID0gKGRhdGFUYXJnZXQpID0+IHtcbiAgbGV0IHJhZGl1c0RhdGE7XG4gIGxldCBjb2xvciA9IFtdO1xuICBsZXQgaHVlUGFsZXR0ZUxpc3QgPSBudWxsO1xuXG4gIGlmICh1dGlscy5pc1VuZGVmaW5lZChkYXRhVGFyZ2V0LndlaWdodCkpIHtcbiAgICByYWRpdXNEYXRhID0gZGF0YVRhcmdldC52YWx1ZXMubWFwKChlbGVtZW50KSA9PiBlbGVtZW50LnkpO1xuICB9IGVsc2Uge1xuICAgIHJhZGl1c0RhdGEgPSBkYXRhVGFyZ2V0LnZhbHVlcy5tYXAoKGVsZW1lbnQpID0+IGJ1YmJsZVNjYWxlKGRhdGFUYXJnZXQpKGVsZW1lbnQud2VpZ2h0KSk7XG4gIH1cblxuICBpZiAodXRpbHMuaXNEZWZpbmVkKGRhdGFUYXJnZXQucGFsZXR0ZSkpIHtcbiAgICBjb2xvciA9IGRhdGFUYXJnZXQucGFsZXR0ZTtcbiAgICBzd2l0Y2ggKGRhdGFUYXJnZXQudmFsdWVzLmxlbmd0aCkge1xuICAgIGNhc2UgNDpcbiAgICAgIGlmIChjb2xvci5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgY29sb3IudW5zaGlmdChCVUJCTEUuUEFMRVRURS5HUkFZKTtcbiAgICAgIH1cbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgMjpcbiAgICAgIGlmIChjb2xvci5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgY29sb3Iuc3BsaWNlKDEsIDEpO1xuICAgICAgfVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAxOlxuICAgICAgaWYgKGNvbG9yLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBjb2xvci5zcGxpY2UoMSwgMik7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgY29sb3IgPSBkYXRhVGFyZ2V0LnBhbGV0dGU7XG4gICAgfVxuICB9XG5cbiAgaHVlUGFsZXR0ZUxpc3QgPSBkM1xuICAgIC5zY2FsZVF1YW50aWxlKClcbiAgICAuZG9tYWluKGQzLmV4dGVudChyYWRpdXNEYXRhKSlcbiAgICAucmFuZ2UoY29sb3IpO1xuXG4gIHJldHVybiBodWVQYWxldHRlTGlzdDtcbn07XG4iXSwibmFtZXMiOlsiZDMiLCJjb25zdGFudHMiLCJCVUJCTEUiLCJ1dGlscyIsImJ1YmJsZVNjYWxlIiwiZGF0YVRhcmdldCIsInNjYWxlTGluZWFyIiwiZG9tYWluIiwid2VpZ2h0IiwibWluIiwibWF4IiwicmFuZ2UiLCJERUZBVUxUX0JVQkJMRV9SQURJVVNfTUlOIiwiREVGQVVMVF9CVUJCTEVfUkFESVVTX01BWCIsImdlbmVyYXRlQ29sb3IiLCJsb3dlclNoYWRlIiwiaHVlIiwidXBwZXJTaGFkZSIsInJhZGl1c0RhdGEiLCJpc1VuZGVmaW5lZCIsInZhbHVlcyIsIm1hcCIsImVsZW1lbnQiLCJ5IiwiaHVlUGFsZXR0ZUxpc3QiLCJleHRlbnQiLCJnZW5lcmF0ZUNvbG9yU2luZ2xlRGF0YXNldCIsImNvbG9yIiwiaXNEZWZpbmVkIiwicGFsZXR0ZSIsImxlbmd0aCIsInVuc2hpZnQiLCJQQUxFVFRFIiwiR1JBWSIsInNwbGljZSIsInNjYWxlUXVhbnRpbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js":
/*!**************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areWeightsDefined: function() { return /* binding */ areWeightsDefined; },\n/* harmony export */   calculateValuesRangeXAxis: function() { return /* binding */ calculateValuesRangeXAxis; },\n/* harmony export */   calculateValuesRangeYAxes: function() { return /* binding */ calculateValuesRangeYAxes; },\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   dataPointActionHandler: function() { return /* binding */ dataPointActionHandler; },\n/* harmony export */   decideRadius: function() { return /* binding */ decideRadius; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawBubbles: function() { return /* binding */ drawBubbles; },\n/* harmony export */   getDataPointValues: function() { return /* binding */ getDataPointValues; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   isHueDefined: function() { return /* binding */ isHueDefined; },\n/* harmony export */   loadInput: function() { return /* binding */ loadInput; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   processDataPoints: function() { return /* binding */ processDataPoints; },\n/* harmony export */   toggleDataPointSelection: function() { return /* binding */ toggleDataPointSelection; },\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translateBubbleGraph: function() { return /* binding */ translateBubbleGraph; },\n/* harmony export */   translatePoints: function() { return /* binding */ translatePoints; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _colorGradient__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./colorGradient */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js\");\n/* harmony import */ var _BubbleConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../BubbleConfig */ \"./packages/carbon-graphs/src/js/controls/Bubble/BubbleConfig.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef Bubble\n */\n\n/**\n * Transforms the point in the bubble graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @returns {Function} - translate function for d3 transform\n */\nvar transformPoint = function transformPoint(scale) {\n  return function (value) {\n    var getX = function getX(val) {\n      return scale.x(val.x);\n    };\n    var getY = function getY(val) {\n      return scale[val.yAxis](val.y);\n    };\n    return \"translate(\".concat(getX(value), \",\").concat(getY(value), \")\");\n  };\n};\n/**\n * Transforms points for a data point set in the bubble graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} cls - selector for the data point translation\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 select object\n */\nvar translatePoints = function translatePoints(scale, canvasSVG, cls, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].bubbleGraphContent, \" .\").concat(cls)).each(function (d) {\n    var pointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this);\n    pointSVG.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPoint(scale)(d);\n    });\n  });\n};\n\n/**\n * Enforces blur state for all the bubbles that is not the one clicked on.\n * This is provided regardless of whether onClick is present or not.\n *\n * @private\n * @param {object} target - target node of bubble which is clicked\n * @returns {undefined} - returns nothing\n */\nvar enforceBubbleBlur = function enforceBubbleBlur(target) {\n  _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(target.viewportElement).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point)).select('circle').attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_BLUR_OPACITY).attr('stroke-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_BLUR_STROKE_OPACITY);\n  _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(target).select('circle').attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_OPACITY).attr('stroke-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_STROKE_OPACITY);\n};\n\n/**\n * Handler for the bubble that is clicked on. It blurs all other bubble in the bubble graph except one which is selected.\n *\n * @private\n * @param {HTMLElement} target - Target element bubble clicked on\n * @returns {undefined} - returns nothing\n */\nvar blurActionHandler = function blurActionHandler(target) {\n  _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(target).attr('aria-selected', true);\n  enforceBubbleBlur(target);\n};\n\n/**\n * Toggles the selection of a data point, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  blurActionHandler(target);\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(target.parentNode).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].dataPointSelection));\n  selectedPointNode.attr('aria-hidden', !(selectedPointNode.attr('aria-hidden') === 'true'));\n  return selectedPointNode;\n};\n\n/**\n * Removes the carbon-bubbleBlur style from all the bubbles to unblur all the bubbles in the bubble graph.\n *\n * @private\n * @returns {object} - d3 Selection object\n */\nvar removeBubbleBlur = function removeBubbleBlur() {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point)).attr('aria-selected', false).select('circle').attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_OPACITY).attr('stroke-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_STROKE_OPACITY);\n};\n\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      selectedTarget.attr('aria-hidden', true);\n      removeBubbleBlur();\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Called on resize, translates the data point values.\n * This includes:\n *  Points\n *  Selected point indicators\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar translateBubbleGraph = function translateBubbleGraph(scale, canvasSVG, config) {\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point, config);\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].dataPointSelection, config);\n};\n/**\n * Returns the internal values subset which is the array that was created from the input JSON.\n * This array has information for each data point w.r.t shape, colors and on click callback along with\n * x and y co-ordinates.\n *\n * @private\n * @param {object} target - Object containing the subsets\n * @returns {Array} List of data point subsets\n */\nvar getDataPointValues = function getDataPointValues(target) {\n  return target.internalValuesSubset;\n};\n\n/**\n * Checks if the weight object is defined with min and max values.\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @returns {boolean} - returns true if weight is defined and inside weight min and max is also defined else false.\n */\nvar areWeightsDefined = function areWeightsDefined(dataTarget) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(dataTarget.weight) ? _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(dataTarget.weight.min) && _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(dataTarget.weight.max) : false;\n};\n\n/**\n * Decides the radius for each bubble\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @param {number} value - data point whose radius has to be decided\n * @returns {number} - returns the radius of the bubble\n */\nvar decideRadius = function decideRadius(dataTarget, value) {\n  if (areWeightsDefined(dataTarget) && _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isUndefined(dataTarget.weight.maxRadius)) {\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_11__.bubbleScale)(dataTarget)(value.weight);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isUndefined(dataTarget.weight)) {\n    return _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_RADIUS_MAX;\n  }\n  return dataTarget.weight.maxRadius;\n};\n\n/**\n * Checks if hue is defined in the input JSON to get color gradient.\n *\n * @private\n * @param {object} hue - hue is object defining the color range.\n * @returns {boolean} - returns true if hue is defined else false.\n */\nvar isHueDefined = function isHueDefined(hue) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(hue);\n};\n\n/**\n * Decides the color for each bubble\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @param {number} value - data point whose color has to be decided\n * @returns {string} - returns color string for each bubble\n */\nvar decideColor = function decideColor(dataTarget, value) {\n  if (isHueDefined(dataTarget.hue) && areWeightsDefined(dataTarget)) {\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_11__.generateColor)(dataTarget)((0,_colorGradient__WEBPACK_IMPORTED_MODULE_11__.bubbleScale)(dataTarget)(value.weight));\n  }\n  if (isHueDefined(dataTarget.hue) && areWeightsDefined(dataTarget) === false) {\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_11__.generateColor)(dataTarget)(value.y);\n  }\n  return dataTarget.color;\n};\n\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroupPath - d3 html element of the points group\n * @param {object} dataTarget - data for the bubble graph\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar drawBubbles = function drawBubbles(scale, config, pointGroupPath, dataTarget, legendSVG) {\n  var renderDataPoint = function renderDataPoint(path, value, index) {\n    var _legendSVG$select;\n    var bubblePoint = path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point, true).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isFunction(value.onClick)).attr('transform', transformPoint(scale)(value)).attr('aria-describedby', \"\".concat(value.key)).attr('aria-selected', false).attr('aria-hidden', legendSVG ? ((_legendSVG$select = legendSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].legendItem, \"[aria-describedby='\").concat(value.key, \"']\"))) === null || _legendSVG$select === void 0 ? void 0 : _legendSVG$select.attr('aria-current')) === 'false' : 'false').on('click', function () {\n      dataPointActionHandler(value, index, this);\n    });\n    bubblePoint.append('circle').attr('aria-describedby', value.key).attr('r', function (d) {\n      return decideRadius(dataTarget, d);\n    }).attr('fill', function (d) {\n      return decideColor(dataTarget, d);\n    }).attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_OPACITY).attr('stroke', function (d) {\n      return decideColor(dataTarget, d);\n    });\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].dataPointSelection, true).attr('transform', transformPoint(scale)(value)).attr('aria-disabled', _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(value.onClick)).attr('aria-hidden', true).attr('aria-describedby', value.key).on('click', function () {\n      dataPointActionHandler(value, index, this);\n    }).append('circle').attr('r', function (d) {\n      return decideRadius(dataTarget, d) + _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_BUBBLE_SELECTOR_RADIUS;\n    });\n  };\n  pointGroupPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    renderDataPoint(dataPointSVG, d, i);\n  });\n};\n\n/**\n * Draws the bubble graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the bubbles\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget, legendSVG) {\n  var BubbleSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].bubbleGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var currentPointsPath = BubbleSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].currentPointsGroup)).data([dataTarget]);\n  currentPointsPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config), \")\"));\n  currentPointsPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  var bubblePoint = BubbleSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].currentPointsGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point)).data(getDataPointValues(dataTarget).filter(function (d) {\n    return d.y !== null;\n  }));\n  drawBubbles(scale, config, bubblePoint.enter(), dataTarget, legendSVG);\n  bubblePoint.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  var type = graphConfig.axis.x.type;\n  var getXDataValues = function getXDataValues(x) {\n    if (!(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.isValidAxisType)(x, type)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.parseTypedValue)(x, type);\n  };\n  graphConfig.shownTargets.push(dataTarget.key);\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    return {\n      onClick: dataTarget.onClick,\n      isCritical: value.isCritical || false,\n      x: getXDataValues(value.x),\n      y: value.y,\n      weight: value.weight,\n      color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_COLOR,\n      label: dataTarget.label || {},\n      yAxis: dataTarget.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS,\n      key: dataTarget.key\n    };\n  });\n  return dataTarget;\n};\n\n/**\n * Handler for Request animation frame, executes on resize shows/hides the regions.\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {function()} callback function handler for RAF\n */\nvar onAnimationHandler = function onAnimationHandler(graphContext, config, canvasSVG) {\n  return function () {\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_7__.processRegions)(graphContext, config, canvasSVG);\n  };\n};\n/**\n * Click handler for legend item. Removes the bubble from the graph\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {Bubble} control - Bubble instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_6__.legendClickHandler)(element);\n    var isSelected = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_6__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(element));\n    updateShownTarget(config.shownTargets, item);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].dataPointSelection, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', true);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', isSelected);\n    window.requestAnimationFrame(onAnimationHandler(graphContext, config, canvasSVG));\n  };\n};\n/**\n * Hover handler for legend item. Highlights current bubble and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point, \"[aria-describedby=\\\"\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].blur, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_6__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_8__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    // Highlight region(s) of the item hovered on, only if the content is currently displayed\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_7__.regionLegendHoverHandler)(graphTargets, canvasSVG, item.key, state);\n  };\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_6__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n\n/**\n * Clear the graph data points currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_10__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n\n/**\n * Calculates the min and max values for the x axis.\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the x axis\n */\nvar calculateValuesRangeXAxis = function calculateValuesRangeXAxis(values) {\n  // null values are filtered out first\n  var xAxisValuesList = values.filter(function (i) {\n    return i.x !== null && i.x !== undefined;\n  }).map(function (i) {\n    // if the x-axis is a timeseries, then convert it to an epoc int\n    // for easier calculations\n    if (typeof i.x === 'string' || i.x instanceof Date) {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getEpocFromDateString(i.x);\n    }\n    return i.x;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(xAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(xAxisValuesList))\n  };\n};\n\n/**\n * Calculates the min and max values for the y or y2 axis.\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the y or y2 axis\n */\nvar calculateValuesRangeYAxes = function calculateValuesRangeYAxes(values) {\n  // null values are filtered out first\n  var yAxisValuesList = values.filter(function (i) {\n    return i.y !== null;\n  }).map(function (i) {\n    return i.y;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(yAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(yAxisValuesList))\n  };\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} BubbleConfig config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _BubbleConfig__WEBPACK_IMPORTED_MODULE_12__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersMultipleDataset.js":
/*!*****************************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersMultipleDataset.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decideRadius: function() { return /* binding */ decideRadius; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawBubbles: function() { return /* binding */ drawBubbles; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\");\n/* harmony import */ var _colorGradient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./colorGradient */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js\");\n\n\n\n\n\n\n\n\n\nvar decideRadius = function decideRadius(dataTarget, value) {\n  if ((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.areWeightsDefined)(dataTarget) && _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isUndefined(dataTarget.weight.fixedRadius)) {\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_6__.bubbleScale)(dataTarget)(value.weight);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isUndefined(dataTarget.weight)) {\n    return _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_RADIUS_MAX;\n  }\n  return dataTarget.weight.fixedRadius;\n};\n\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroupPath - d3 html element of the points group\n * @param {object} dataTarget - data for the bubble graph\n * @returns {undefined} - returns nothing\n */\nvar drawBubbles = function drawBubbles(scale, config, pointGroupPath, dataTarget) {\n  var renderDataPoint = function renderDataPoint(path, value, index) {\n    var _document$querySelect;\n    var bubblePoint = path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].point, true).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(value.onClick)).attr('transform', (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.transformPoint)(scale)(value)).attr('aria-describedby', \"\".concat(value.key)).attr('aria-selected', false).attr('aria-hidden', ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) === 'false').on('click', function () {\n      (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.dataPointActionHandler)(value, index, this);\n    });\n    bubblePoint.append('circle').attr('aria-describedby', value.key).attr('r', function (d) {\n      return decideRadius(dataTarget, d);\n    }).attr('fill', function () {\n      return dataTarget.color;\n    }).attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_OPACITY).attr('stroke', function () {\n      return dataTarget.color;\n    });\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection, true).attr('transform', (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.transformPoint)(scale)(value)).attr('aria-disabled', _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isDefined(value.onClick)).attr('aria-hidden', true).attr('aria-describedby', value.key).on('click', function () {\n      (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.dataPointActionHandler)(value, index, this);\n    }).append('circle').attr('r', function (d) {\n      return decideRadius(dataTarget, d) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_SELECTOR_RADIUS;\n    });\n  };\n  pointGroupPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    renderDataPoint(dataPointSVG, d, i);\n  });\n};\n\n/**\n * Draws the bubble graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the bubbles\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget) {\n  var BubbleSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].bubbleGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var currentPointsPath = BubbleSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup)).data([dataTarget]);\n  currentPointsPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.calculateVerticalPadding)(config), \")\"));\n  currentPointsPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  var bubblePoint = BubbleSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].point)).data((0,_helpers__WEBPACK_IMPORTED_MODULE_5__.getDataPointValues)(dataTarget));\n  drawBubbles(scale, config, bubblePoint.enter(), dataTarget);\n  bubblePoint.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersMultipleDataset.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersSingleDataset.js":
/*!***************************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersSingleDataset.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decideRadius: function() { return /* binding */ decideRadius; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawBubbles: function() { return /* binding */ drawBubbles; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _colorGradient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./colorGradient */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/colorGradient.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers */ \"./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpers.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Decides the color for each bubble\n *\n * @private\n * @param {object} dataTarget - data for the bubble graph\n * @param {number} value - data point whose color has to be decided\n * @returns {string} - returns color string for each bubble\n */\n// eslint-disable-next-line consistent-return\nvar decideColor = function decideColor(dataTarget, value) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isDefined(dataTarget.color)) {\n    return dataTarget.color;\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isDefined(dataTarget.palette)) {\n    if ((0,_helpers__WEBPACK_IMPORTED_MODULE_6__.areWeightsDefined)(dataTarget)) {\n      return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_5__.generateColorSingleDataset)(dataTarget)((0,_colorGradient__WEBPACK_IMPORTED_MODULE_5__.bubbleScale)(dataTarget)(value.weight));\n    }\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_5__.generateColorSingleDataset)(dataTarget)(value.y);\n  }\n};\nvar decideRadius = function decideRadius(dataTarget, value) {\n  if ((0,_helpers__WEBPACK_IMPORTED_MODULE_6__.areWeightsDefined)(dataTarget) && _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isUndefined(dataTarget.weight.fixedRadius)) {\n    return (0,_colorGradient__WEBPACK_IMPORTED_MODULE_5__.bubbleScale)(dataTarget)(value.weight);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isUndefined(dataTarget.weight)) {\n    return _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_RADIUS_MAX;\n  }\n  return dataTarget.weight.fixedRadius;\n};\n\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroupPath - d3 html element of the points group\n * @param {object} dataTarget - data for the bubble graph\n * @returns {undefined} - returns nothing\n */\nvar drawBubbles = function drawBubbles(scale, config, pointGroupPath, dataTarget) {\n  var renderDataPoint = function renderDataPoint(path, value, index) {\n    var _document$querySelect;\n    var bubblePoint = path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].point, true).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(value.onClick)).attr('transform', (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.transformPoint)(scale)(value)).attr('aria-describedby', \"\".concat(value.key)).attr('aria-selected', false).attr('aria-hidden', ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) === 'false').on('click', function () {\n      (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.dataPointActionHandler)(value, index, this);\n    });\n    bubblePoint.append('circle').attr('aria-describedby', value.key).attr('r', function (d) {\n      return decideRadius(dataTarget, d);\n    }).attr('fill', function (d) {\n      return decideColor(dataTarget, d);\n    }).attr('fill-opacity', _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_OPACITY).attr('stroke', function (d) {\n      return decideColor(dataTarget, d);\n    });\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    path.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection, true).attr('transform', (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.transformPoint)(scale)(value)).attr('aria-disabled', _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isDefined(value.onClick)).attr('aria-hidden', true).attr('aria-describedby', value.key).on('click', function () {\n      (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.dataPointActionHandler)(value, index, this);\n    }).append('circle').attr('r', function (d) {\n      return decideRadius(dataTarget, d) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_BUBBLE_SELECTOR_RADIUS;\n    });\n  };\n  pointGroupPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    renderDataPoint(dataPointSVG, d, i);\n  });\n};\n\n/**\n * Draws the bubble graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the bubbles\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget) {\n  var BubbleSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].bubbleGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var currentPointsPath = BubbleSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup)).data([dataTarget]);\n  currentPointsPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.calculateVerticalPadding)(config), \")\"));\n  currentPointsPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  var bubblePoint = BubbleSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].currentPointsGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].point)).data((0,_helpers__WEBPACK_IMPORTED_MODULE_6__.getDataPointValues)(dataTarget));\n  drawBubbles(scale, config, bubblePoint.enter(), dataTarget);\n  bubblePoint.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvaGVscGVycy9oZWxwZXJzU2luZ2xlRGF0YXNldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7O0FBRTRCO0FBSVY7QUFDb0I7QUFDTjtBQUNGO0FBQytCO0FBTXZEOztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNWSxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsVUFBVSxFQUFFQyxLQUFLLEVBQUs7RUFDekMsSUFBSVQsc0RBQUssQ0FBQ1UsU0FBUyxDQUFDRixVQUFVLENBQUNHLEtBQUssQ0FBQyxFQUFFO0lBQ3JDLE9BQU9ILFVBQVUsQ0FBQ0csS0FBSztFQUN6QjtFQUNBLElBQUlYLHNEQUFLLENBQUNVLFNBQVMsQ0FBQ0YsVUFBVSxDQUFDSSxPQUFPLENBQUMsRUFBRTtJQUN2QyxJQUFJTiwyREFBaUIsQ0FBQ0UsVUFBVSxDQUFDLEVBQUU7TUFDakMsT0FBT1AsMEVBQTBCLENBQUNPLFVBQVUsQ0FBQyxDQUMzQ04sMkRBQVcsQ0FBQ00sVUFBVSxDQUFDLENBQUNDLEtBQUssQ0FBQ0ksTUFBTSxDQUN0QyxDQUFDO0lBQ0g7SUFDQSxPQUFPWiwwRUFBMEIsQ0FBQ08sVUFBVSxDQUFDLENBQUNDLEtBQUssQ0FBQ0ssQ0FBQyxDQUFDO0VBQ3hEO0FBQ0YsQ0FBQztBQUVELElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFZQSxDQUFJUCxVQUFVLEVBQUVDLEtBQUssRUFBSztFQUMxQyxJQUNFSCwyREFBaUIsQ0FBQ0UsVUFBVSxDQUFDLElBQ3hCUixzREFBSyxDQUFDZ0IsV0FBVyxDQUFDUixVQUFVLENBQUNLLE1BQU0sQ0FBQ0ksV0FBVyxDQUFDLEVBQ3JEO0lBQ0EsT0FBT2YsMkRBQVcsQ0FBQ00sVUFBVSxDQUFDLENBQUNDLEtBQUssQ0FBQ0ksTUFBTSxDQUFDO0VBQzlDO0VBQUUsSUFBSWIsc0RBQUssQ0FBQ2dCLFdBQVcsQ0FBQ1IsVUFBVSxDQUFDSyxNQUFNLENBQUMsRUFBRTtJQUMxQyxPQUFPZiwwREFBUyxDQUFDb0IseUJBQXlCO0VBQzVDO0VBQ0EsT0FBT1YsVUFBVSxDQUFDSyxNQUFNLENBQUNJLFdBQVc7QUFDdEMsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRSxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLGNBQWMsRUFBRWQsVUFBVSxFQUFLO0VBQ2pFLElBQU1lLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSUMsSUFBSSxFQUFFZixLQUFLLEVBQUVnQixLQUFLLEVBQUs7SUFBQSxJQUFBQyxxQkFBQTtJQUM5QyxJQUFNQyxXQUFXLEdBQUdILElBQUksQ0FDckJJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWEMsT0FBTyxDQUFDOUIsdURBQU0sQ0FBQytCLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FDM0JDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQy9CLHNEQUFLLENBQUNnQyxVQUFVLENBQUN2QixLQUFLLENBQUN3QixPQUFPLENBQUMsQ0FBQyxDQUN2REYsSUFBSSxDQUFDLFdBQVcsRUFBRTVCLHdEQUFjLENBQUNpQixLQUFLLENBQUMsQ0FBQ1gsS0FBSyxDQUFDLENBQUMsQ0FDL0NzQixJQUFJLENBQUMsa0JBQWtCLEtBQUFHLE1BQUEsQ0FBS3pCLEtBQUssQ0FBQzBCLEdBQUcsQ0FBRSxDQUFDLENBQ3hDSixJQUFJLENBQUMsZUFBZSxFQUFFLEtBQUssQ0FBQyxDQUM1QkEsSUFBSSxDQUNILGFBQWEsRUFDYixFQUFBTCxxQkFBQSxHQUFBVSxRQUFRLENBQ0xDLGFBQWEsS0FBQUgsTUFBQSxDQUNSbkMsdURBQU0sQ0FBQ3VDLFVBQVUsMEJBQUFKLE1BQUEsQ0FBc0J6QixLQUFLLENBQUMwQixHQUFHLFFBQ3RELENBQUMsY0FBQVQscUJBQUEsdUJBSEhBLHFCQUFBLENBSUlhLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBSyxPQUN2QyxDQUFDLENBQ0FDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsWUFBWTtNQUN2QnBDLGdFQUFzQixDQUFDSyxLQUFLLEVBQUVnQixLQUFLLEVBQUUsSUFBSSxDQUFDO0lBQzVDLENBQUMsQ0FBQztJQUVKRSxXQUFXLENBQ1JDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDaEJHLElBQUksQ0FBQyxrQkFBa0IsRUFBRXRCLEtBQUssQ0FBQzBCLEdBQUcsQ0FBQyxDQUNuQ0osSUFBSSxDQUFDLEdBQUcsRUFBRSxVQUFDVSxDQUFDO01BQUEsT0FBSzFCLFlBQVksQ0FBQ1AsVUFBVSxFQUFFaUMsQ0FBQyxDQUFDO0lBQUEsRUFBQyxDQUM3Q1YsSUFBSSxDQUFDLE1BQU0sRUFBRSxVQUFDVSxDQUFDO01BQUEsT0FBS2xDLFdBQVcsQ0FBQ0MsVUFBVSxFQUFFaUMsQ0FBQyxDQUFDO0lBQUEsRUFBQyxDQUMvQ1YsSUFBSSxDQUFDLGNBQWMsRUFBRWpDLDBEQUFTLENBQUM0QyxzQkFBc0IsQ0FBQyxDQUN0RFgsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFDVSxDQUFDO01BQUEsT0FBS2xDLFdBQVcsQ0FBQ0MsVUFBVSxFQUFFaUMsQ0FBQyxDQUFDO0lBQUEsRUFBQztFQUN0RCxDQUFDO0VBRUQsSUFBTUUsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFtQkEsQ0FBSW5CLElBQUksRUFBRWYsS0FBSyxFQUFFZ0IsS0FBSyxFQUFLO0lBQ2xERCxJQUFJLENBQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDYkMsT0FBTyxDQUFDOUIsdURBQU0sQ0FBQzZDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUN4Q2IsSUFBSSxDQUFDLFdBQVcsRUFBRTVCLHdEQUFjLENBQUNpQixLQUFLLENBQUMsQ0FBQ1gsS0FBSyxDQUFDLENBQUMsQ0FDL0NzQixJQUFJLENBQUMsZUFBZSxFQUFFL0Isc0RBQUssQ0FBQ1UsU0FBUyxDQUFDRCxLQUFLLENBQUN3QixPQUFPLENBQUMsQ0FBQyxDQUNyREYsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FDekJBLElBQUksQ0FBQyxrQkFBa0IsRUFBRXRCLEtBQUssQ0FBQzBCLEdBQUcsQ0FBQyxDQUNuQ0ssRUFBRSxDQUFDLE9BQU8sRUFBRSxZQUFZO01BQ3ZCcEMsZ0VBQXNCLENBQUNLLEtBQUssRUFBRWdCLEtBQUssRUFBRSxJQUFJLENBQUM7SUFDNUMsQ0FBQyxDQUFDLENBQ0RHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FDaEJHLElBQUksQ0FDSCxHQUFHLEVBQ0gsVUFBQ1UsQ0FBQztNQUFBLE9BQUsxQixZQUFZLENBQUNQLFVBQVUsRUFBRWlDLENBQUMsQ0FBQyxHQUMxQjNDLDBEQUFTLENBQUMrQyw4QkFBOEI7SUFBQSxDQUNsRCxDQUFDO0VBQ0wsQ0FBQztFQUNEdkIsY0FBYyxDQUNYTSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hDLE9BQU8sQ0FBQzlCLHVEQUFNLENBQUMrQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQ2hDQyxJQUFJLENBQUMsVUFBVU4sQ0FBQyxFQUFFTyxDQUFDLEVBQUU7SUFDcEIsSUFBTUMsWUFBWSxHQUFHdEQsOENBQVMsQ0FBQyxJQUFJLENBQUM7SUFDcENnRCxtQkFBbUIsQ0FBQ00sWUFBWSxFQUFFUixDQUFDLEVBQUVPLENBQUMsQ0FBQztJQUN2Q3pCLGVBQWUsQ0FBQzBCLFlBQVksRUFBRVIsQ0FBQyxFQUFFTyxDQUFDLENBQUM7RUFDckMsQ0FBQyxDQUFDO0FBQ04sQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRyxJQUFJLEdBQUcsU0FBUEEsSUFBSUEsQ0FBSS9CLEtBQUssRUFBRUMsTUFBTSxFQUFFK0IsU0FBUyxFQUFFNUMsVUFBVSxFQUFLO0VBQ3JELElBQU02QyxTQUFTLEdBQUdELFNBQVMsQ0FDeEJ4QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hDLE9BQU8sQ0FBQzlCLHVEQUFNLENBQUN1RCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsQ0FDeEN2QixJQUFJLENBQUMsV0FBVyxVQUFBRyxNQUFBLENBQVViLE1BQU0sQ0FBQ2tDLFVBQVUsTUFBRyxDQUFDLENBQy9DeEIsSUFBSSxDQUFDLGFBQWEsRUFBRVYsTUFBTSxDQUFDbUMsWUFBWSxDQUFDQyxPQUFPLENBQUNqRCxVQUFVLENBQUMyQixHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FDcEVKLElBQUksQ0FBQyxrQkFBa0IsRUFBRXZCLFVBQVUsQ0FBQzJCLEdBQUcsQ0FBQztFQUUzQyxJQUFNdUIsaUJBQWlCLEdBQUdMLFNBQVMsQ0FBQ00sU0FBUyxLQUFBekIsTUFBQSxDQUNuQ25DLHVEQUFNLENBQUM2RCxrQkFBa0IsQ0FDbkMsQ0FBQyxDQUFDQyxJQUFJLENBQUMsQ0FBQ3JELFVBQVUsQ0FBQyxDQUFDO0VBQ3BCa0QsaUJBQWlCLENBQ2RJLEtBQUssQ0FBQyxDQUFDLENBQ1BsQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQ1hDLE9BQU8sQ0FBQzlCLHVEQUFNLENBQUM2RCxrQkFBa0IsRUFBRSxJQUFJLENBQUMsQ0FDeEM3QixJQUFJLENBQ0gsV0FBVyxlQUFBRyxNQUFBLENBQ1FyQyxnRUFBaUIsQ0FBQ3dCLE1BQU0sQ0FBQyxPQUFBYSxNQUFBLENBQUl0Qyx1RUFBd0IsQ0FDaEV5QixNQUNGLENBQUMsTUFDVCxDQUFDO0VBQ0hxQyxpQkFBaUIsQ0FDZEssSUFBSSxDQUFDLENBQUMsQ0FDTkMsVUFBVSxDQUFDLENBQUMsQ0FDWkMsSUFBSSxDQUFDbkUsMERBQVMsQ0FBQ29FLFlBQVksQ0FBQzdDLE1BQU0sQ0FBQzhDLGtCQUFrQixDQUFDSCxVQUFVLENBQUMsQ0FBQyxDQUNsRUksTUFBTSxDQUFDLENBQUM7RUFFWCxJQUFNekMsV0FBVyxHQUFHMEIsU0FBUyxDQUFDSCxNQUFNLEtBQUFoQixNQUFBLENBQUtuQyx1REFBTSxDQUFDNkQsa0JBQWtCLENBQUUsQ0FBQyxDQUNsRUQsU0FBUyxLQUFBekIsTUFBQSxDQUFLbkMsdURBQU0sQ0FBQytCLEtBQUssQ0FBRSxDQUFDLENBQzdCK0IsSUFBSSxDQUFDeEQsNERBQWtCLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0VBQ3ZDVyxXQUFXLENBQUNDLEtBQUssRUFBRUMsTUFBTSxFQUFFTSxXQUFXLENBQUNtQyxLQUFLLENBQUMsQ0FBQyxFQUFFdEQsVUFBVSxDQUFDO0VBQzNEbUIsV0FBVyxDQUNSb0MsSUFBSSxDQUFDLENBQUMsQ0FDTkMsVUFBVSxDQUFDLENBQUMsQ0FDWkMsSUFBSSxDQUFDbkUsMERBQVMsQ0FBQ29FLFlBQVksQ0FBQzdDLE1BQU0sQ0FBQzhDLGtCQUFrQixDQUFDSCxVQUFVLENBQUMsQ0FBQyxDQUNsRUksTUFBTSxDQUFDLENBQUM7QUFDYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29udHJvbHMvQnViYmxlL2hlbHBlcnMvaGVscGVyc1NpbmdsZURhdGFzZXQuanM/NTM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCAqIGFzIGQzIGZyb20gJy4uLy4uLy4uL2QzTW9kdWxlcyc7XG5pbXBvcnQge1xuICBjYWxjdWxhdGVWZXJ0aWNhbFBhZGRpbmcsXG4gIGdldFhBeGlzWFBvc2l0aW9uLFxufSBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL2F4aXMnO1xuaW1wb3J0IGNvbnN0YW50cyBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL2NvbnN0YW50cyc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvc3R5bGVzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi8uLi8uLi9oZWxwZXJzL3V0aWxzJztcbmltcG9ydCB7IGdlbmVyYXRlQ29sb3JTaW5nbGVEYXRhc2V0LCBidWJibGVTY2FsZSB9IGZyb20gJy4vY29sb3JHcmFkaWVudCc7XG5pbXBvcnQge1xuICB0cmFuc2Zvcm1Qb2ludCxcbiAgZGF0YVBvaW50QWN0aW9uSGFuZGxlcixcbiAgZ2V0RGF0YVBvaW50VmFsdWVzLFxuICBhcmVXZWlnaHRzRGVmaW5lZCxcbn0gZnJvbSAnLi9oZWxwZXJzJztcblxuLyoqXG4gKiBEZWNpZGVzIHRoZSBjb2xvciBmb3IgZWFjaCBidWJibGVcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IGRhdGFUYXJnZXQgLSBkYXRhIGZvciB0aGUgYnViYmxlIGdyYXBoXG4gKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSBkYXRhIHBvaW50IHdob3NlIGNvbG9yIGhhcyB0byBiZSBkZWNpZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtIHJldHVybnMgY29sb3Igc3RyaW5nIGZvciBlYWNoIGJ1YmJsZVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbmNvbnN0IGRlY2lkZUNvbG9yID0gKGRhdGFUYXJnZXQsIHZhbHVlKSA9PiB7XG4gIGlmICh1dGlscy5pc0RlZmluZWQoZGF0YVRhcmdldC5jb2xvcikpIHtcbiAgICByZXR1cm4gZGF0YVRhcmdldC5jb2xvcjtcbiAgfVxuICBpZiAodXRpbHMuaXNEZWZpbmVkKGRhdGFUYXJnZXQucGFsZXR0ZSkpIHtcbiAgICBpZiAoYXJlV2VpZ2h0c0RlZmluZWQoZGF0YVRhcmdldCkpIHtcbiAgICAgIHJldHVybiBnZW5lcmF0ZUNvbG9yU2luZ2xlRGF0YXNldChkYXRhVGFyZ2V0KShcbiAgICAgICAgYnViYmxlU2NhbGUoZGF0YVRhcmdldCkodmFsdWUud2VpZ2h0KSxcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBnZW5lcmF0ZUNvbG9yU2luZ2xlRGF0YXNldChkYXRhVGFyZ2V0KSh2YWx1ZS55KTtcbiAgfVxufTtcblxuY29uc3QgZGVjaWRlUmFkaXVzID0gKGRhdGFUYXJnZXQsIHZhbHVlKSA9PiB7XG4gIGlmIChcbiAgICBhcmVXZWlnaHRzRGVmaW5lZChkYXRhVGFyZ2V0KVxuICAgICAgJiYgdXRpbHMuaXNVbmRlZmluZWQoZGF0YVRhcmdldC53ZWlnaHQuZml4ZWRSYWRpdXMpXG4gICkge1xuICAgIHJldHVybiBidWJibGVTY2FsZShkYXRhVGFyZ2V0KSh2YWx1ZS53ZWlnaHQpO1xuICB9IGlmICh1dGlscy5pc1VuZGVmaW5lZChkYXRhVGFyZ2V0LndlaWdodCkpIHtcbiAgICByZXR1cm4gY29uc3RhbnRzLkRFRkFVTFRfQlVCQkxFX1JBRElVU19NQVg7XG4gIH1cbiAgcmV0dXJuIGRhdGFUYXJnZXQud2VpZ2h0LmZpeGVkUmFkaXVzO1xufTtcblxuLyoqXG4gKiBEcmF3cyB0aGUgcG9pbnRzIHdpdGggb3B0aW9ucyBvcHRlZCBpbiB0aGUgaW5wdXQgSlNPTiBieSB0aGUgY29uc3VtZXIgZm9yIGVhY2ggZGF0YSBzZXQuXG4gKiAgUmVuZGVyIHRoZSBwb2ludCB3aXRoIGFwcHJvcHJpYXRlIGNvbG9yLCB4IGFuZCB5IGNvLW9yZGluYXRlcywgbGFiZWwgZXRjLlxuICogIE9uIGNsaWNrIGNvbnRlbnQgY2FsbGJhY2sgZnVuY3Rpb24gaXMgY2FsbGVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gc2NhbGUgLSBkMyBzY2FsZSBmb3IgR3JhcGhcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgLSBHcmFwaCBjb25maWcgb2JqZWN0IGRlcml2ZWQgZnJvbSBpbnB1dCBKU09OXG4gKiBAcGFyYW0ge0FycmF5fSBwb2ludEdyb3VwUGF0aCAtIGQzIGh0bWwgZWxlbWVudCBvZiB0aGUgcG9pbnRzIGdyb3VwXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YVRhcmdldCAtIGRhdGEgZm9yIHRoZSBidWJibGUgZ3JhcGhcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9IC0gcmV0dXJucyBub3RoaW5nXG4gKi9cbmNvbnN0IGRyYXdCdWJibGVzID0gKHNjYWxlLCBjb25maWcsIHBvaW50R3JvdXBQYXRoLCBkYXRhVGFyZ2V0KSA9PiB7XG4gIGNvbnN0IHJlbmRlckRhdGFQb2ludCA9IChwYXRoLCB2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBidWJibGVQb2ludCA9IHBhdGhcbiAgICAgIC5hcHBlbmQoJ2cnKVxuICAgICAgLmNsYXNzZWQoc3R5bGVzLnBvaW50LCB0cnVlKVxuICAgICAgLmF0dHIoJ2FyaWEtZGlzYWJsZWQnLCAhdXRpbHMuaXNGdW5jdGlvbih2YWx1ZS5vbkNsaWNrKSlcbiAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCB0cmFuc2Zvcm1Qb2ludChzY2FsZSkodmFsdWUpKVxuICAgICAgLmF0dHIoJ2FyaWEtZGVzY3JpYmVkYnknLCBgJHt2YWx1ZS5rZXl9YClcbiAgICAgIC5hdHRyKCdhcmlhLXNlbGVjdGVkJywgZmFsc2UpXG4gICAgICAuYXR0cihcbiAgICAgICAgJ2FyaWEtaGlkZGVuJyxcbiAgICAgICAgZG9jdW1lbnRcbiAgICAgICAgICAucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgIGAuJHtzdHlsZXMubGVnZW5kSXRlbX1bYXJpYS1kZXNjcmliZWRieT1cIiR7dmFsdWUua2V5fVwiXWAsXG4gICAgICAgICAgKVxuICAgICAgICAgID8uZ2V0QXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnKSA9PT0gJ2ZhbHNlJyxcbiAgICAgIClcbiAgICAgIC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRhdGFQb2ludEFjdGlvbkhhbmRsZXIodmFsdWUsIGluZGV4LCB0aGlzKTtcbiAgICAgIH0pO1xuXG4gICAgYnViYmxlUG9pbnRcbiAgICAgIC5hcHBlbmQoJ2NpcmNsZScpXG4gICAgICAuYXR0cignYXJpYS1kZXNjcmliZWRieScsIHZhbHVlLmtleSlcbiAgICAgIC5hdHRyKCdyJywgKGQpID0+IGRlY2lkZVJhZGl1cyhkYXRhVGFyZ2V0LCBkKSlcbiAgICAgIC5hdHRyKCdmaWxsJywgKGQpID0+IGRlY2lkZUNvbG9yKGRhdGFUYXJnZXQsIGQpKVxuICAgICAgLmF0dHIoJ2ZpbGwtb3BhY2l0eScsIGNvbnN0YW50cy5ERUZBVUxUX0JVQkJMRV9PUEFDSVRZKVxuICAgICAgLmF0dHIoJ3N0cm9rZScsIChkKSA9PiBkZWNpZGVDb2xvcihkYXRhVGFyZ2V0LCBkKSk7XG4gIH07XG5cbiAgY29uc3QgcmVuZGVyU2VsZWN0aW9uUGF0aCA9IChwYXRoLCB2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICBwYXRoLmFwcGVuZCgnZycpXG4gICAgICAuY2xhc3NlZChzdHlsZXMuZGF0YVBvaW50U2VsZWN0aW9uLCB0cnVlKVxuICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIHRyYW5zZm9ybVBvaW50KHNjYWxlKSh2YWx1ZSkpXG4gICAgICAuYXR0cignYXJpYS1kaXNhYmxlZCcsIHV0aWxzLmlzRGVmaW5lZCh2YWx1ZS5vbkNsaWNrKSlcbiAgICAgIC5hdHRyKCdhcmlhLWhpZGRlbicsIHRydWUpXG4gICAgICAuYXR0cignYXJpYS1kZXNjcmliZWRieScsIHZhbHVlLmtleSlcbiAgICAgIC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRhdGFQb2ludEFjdGlvbkhhbmRsZXIodmFsdWUsIGluZGV4LCB0aGlzKTtcbiAgICAgIH0pXG4gICAgICAuYXBwZW5kKCdjaXJjbGUnKVxuICAgICAgLmF0dHIoXG4gICAgICAgICdyJyxcbiAgICAgICAgKGQpID0+IGRlY2lkZVJhZGl1cyhkYXRhVGFyZ2V0LCBkKVxuICAgICAgICAgICAgICArIGNvbnN0YW50cy5ERUZBVUxUX0JVQkJMRV9TRUxFQ1RPUl9SQURJVVMsXG4gICAgICApO1xuICB9O1xuICBwb2ludEdyb3VwUGF0aFxuICAgIC5hcHBlbmQoJ2cnKVxuICAgIC5jbGFzc2VkKHN0eWxlcy5wb2ludEdyb3VwLCB0cnVlKVxuICAgIC5lYWNoKGZ1bmN0aW9uIChkLCBpKSB7XG4gICAgICBjb25zdCBkYXRhUG9pbnRTVkcgPSBkMy5zZWxlY3QodGhpcyk7XG4gICAgICByZW5kZXJTZWxlY3Rpb25QYXRoKGRhdGFQb2ludFNWRywgZCwgaSk7XG4gICAgICByZW5kZXJEYXRhUG9pbnQoZGF0YVBvaW50U1ZHLCBkLCBpKTtcbiAgICB9KTtcbn07XG5cbi8qKlxuICogRHJhd3MgdGhlIGJ1YmJsZSBncmFwaCBvbiB0aGUgY2FudmFzIGVsZW1lbnQuIFRoaXMgY2FsbHMgdGhlIEdyYXBoIEFQSSB0byByZW5kZXIgdGhlIGZvbGxvd2luZyBmaXJzdFxuICogIEdyaWRcbiAqICBBeGVzXG4gKiAgTGVnZW5kXG4gKiAgTGFiZWxzXG4gKiBPbmNlIHRoZXNlIGl0ZW1zIGFyZSByZW5kZXJlZCwgd2Ugd2lsbCBwYXJzZSB0aHJvdWdoIHRoZSBkYXRhIHBvaW50cyBhbmQgcmVuZGVyIHRoZSBidWJibGVzXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2FsZSAtIGQzIHNjYWxlIHRha2luZyBpbnRvIGFjY291bnQgdGhlIGlucHV0IHBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgLSBjb25maWcgb2JqZWN0IGRlcml2ZWQgZnJvbSBpbnB1dCBKU09OXG4gKiBAcGFyYW0ge2QzLnNlbGVjdGlvbn0gY2FudmFzU1ZHIC0gZDMgc2VsZWN0aW9uIG5vZGUgb2YgY2FudmFzIHN2Z1xuICogQHBhcmFtIHtBcnJheX0gZGF0YVRhcmdldCAtIERhdGEgcG9pbnRzXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfSAtIHJldHVybnMgbm90aGluZ1xuICovXG5jb25zdCBkcmF3ID0gKHNjYWxlLCBjb25maWcsIGNhbnZhc1NWRywgZGF0YVRhcmdldCkgPT4ge1xuICBjb25zdCBCdWJibGVTVkcgPSBjYW52YXNTVkdcbiAgICAuYXBwZW5kKCdnJylcbiAgICAuY2xhc3NlZChzdHlsZXMuYnViYmxlR3JhcGhDb250ZW50LCB0cnVlKVxuICAgIC5hdHRyKCdjbGlwLXBhdGgnLCBgdXJsKCMke2NvbmZpZy5jbGlwUGF0aElkfSlgKVxuICAgIC5hdHRyKCdhcmlhLWhpZGRlbicsIGNvbmZpZy5zaG93blRhcmdldHMuaW5kZXhPZihkYXRhVGFyZ2V0LmtleSkgPCAwKVxuICAgIC5hdHRyKCdhcmlhLWRlc2NyaWJlZGJ5JywgZGF0YVRhcmdldC5rZXkpO1xuXG4gIGNvbnN0IGN1cnJlbnRQb2ludHNQYXRoID0gQnViYmxlU1ZHLnNlbGVjdEFsbChcbiAgICAgICAgYC4ke3N0eWxlcy5jdXJyZW50UG9pbnRzR3JvdXB9YCxcbiAgKS5kYXRhKFtkYXRhVGFyZ2V0XSk7XG4gIGN1cnJlbnRQb2ludHNQYXRoXG4gICAgLmVudGVyKClcbiAgICAuYXBwZW5kKCdnJylcbiAgICAuY2xhc3NlZChzdHlsZXMuY3VycmVudFBvaW50c0dyb3VwLCB0cnVlKVxuICAgIC5hdHRyKFxuICAgICAgJ3RyYW5zZm9ybScsXG4gICAgICAgICAgICBgdHJhbnNsYXRlKCR7Z2V0WEF4aXNYUG9zaXRpb24oY29uZmlnKX0sJHtjYWxjdWxhdGVWZXJ0aWNhbFBhZGRpbmcoXG4gICAgICAgICAgICAgIGNvbmZpZyxcbiAgICAgICAgICAgICl9KWAsXG4gICAgKTtcbiAgY3VycmVudFBvaW50c1BhdGhcbiAgICAuZXhpdCgpXG4gICAgLnRyYW5zaXRpb24oKVxuICAgIC5jYWxsKGNvbnN0YW50cy5kM1RyYW5zaXRpb24oY29uZmlnLnNldHRpbmdzRGljdGlvbmFyeS50cmFuc2l0aW9uKSlcbiAgICAucmVtb3ZlKCk7XG5cbiAgY29uc3QgYnViYmxlUG9pbnQgPSBCdWJibGVTVkcuc2VsZWN0KGAuJHtzdHlsZXMuY3VycmVudFBvaW50c0dyb3VwfWApXG4gICAgLnNlbGVjdEFsbChgLiR7c3R5bGVzLnBvaW50fWApXG4gICAgLmRhdGEoZ2V0RGF0YVBvaW50VmFsdWVzKGRhdGFUYXJnZXQpKTtcbiAgZHJhd0J1YmJsZXMoc2NhbGUsIGNvbmZpZywgYnViYmxlUG9pbnQuZW50ZXIoKSwgZGF0YVRhcmdldCk7XG4gIGJ1YmJsZVBvaW50XG4gICAgLmV4aXQoKVxuICAgIC50cmFuc2l0aW9uKClcbiAgICAuY2FsbChjb25zdGFudHMuZDNUcmFuc2l0aW9uKGNvbmZpZy5zZXR0aW5nc0RpY3Rpb25hcnkudHJhbnNpdGlvbikpXG4gICAgLnJlbW92ZSgpO1xufTtcblxuZXhwb3J0IHsgZHJhdywgZHJhd0J1YmJsZXMsIGRlY2lkZVJhZGl1cyB9O1xuIl0sIm5hbWVzIjpbImQzIiwiY2FsY3VsYXRlVmVydGljYWxQYWRkaW5nIiwiZ2V0WEF4aXNYUG9zaXRpb24iLCJjb25zdGFudHMiLCJzdHlsZXMiLCJ1dGlscyIsImdlbmVyYXRlQ29sb3JTaW5nbGVEYXRhc2V0IiwiYnViYmxlU2NhbGUiLCJ0cmFuc2Zvcm1Qb2ludCIsImRhdGFQb2ludEFjdGlvbkhhbmRsZXIiLCJnZXREYXRhUG9pbnRWYWx1ZXMiLCJhcmVXZWlnaHRzRGVmaW5lZCIsImRlY2lkZUNvbG9yIiwiZGF0YVRhcmdldCIsInZhbHVlIiwiaXNEZWZpbmVkIiwiY29sb3IiLCJwYWxldHRlIiwid2VpZ2h0IiwieSIsImRlY2lkZVJhZGl1cyIsImlzVW5kZWZpbmVkIiwiZml4ZWRSYWRpdXMiLCJERUZBVUxUX0JVQkJMRV9SQURJVVNfTUFYIiwiZHJhd0J1YmJsZXMiLCJzY2FsZSIsImNvbmZpZyIsInBvaW50R3JvdXBQYXRoIiwicmVuZGVyRGF0YVBvaW50IiwicGF0aCIsImluZGV4IiwiX2RvY3VtZW50JHF1ZXJ5U2VsZWN0IiwiYnViYmxlUG9pbnQiLCJhcHBlbmQiLCJjbGFzc2VkIiwicG9pbnQiLCJhdHRyIiwiaXNGdW5jdGlvbiIsIm9uQ2xpY2siLCJjb25jYXQiLCJrZXkiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJsZWdlbmRJdGVtIiwiZ2V0QXR0cmlidXRlIiwib24iLCJkIiwiREVGQVVMVF9CVUJCTEVfT1BBQ0lUWSIsInJlbmRlclNlbGVjdGlvblBhdGgiLCJkYXRhUG9pbnRTZWxlY3Rpb24iLCJERUZBVUxUX0JVQkJMRV9TRUxFQ1RPUl9SQURJVVMiLCJwb2ludEdyb3VwIiwiZWFjaCIsImkiLCJkYXRhUG9pbnRTVkciLCJzZWxlY3QiLCJkcmF3IiwiY2FudmFzU1ZHIiwiQnViYmxlU1ZHIiwiYnViYmxlR3JhcGhDb250ZW50IiwiY2xpcFBhdGhJZCIsInNob3duVGFyZ2V0cyIsImluZGV4T2YiLCJjdXJyZW50UG9pbnRzUGF0aCIsInNlbGVjdEFsbCIsImN1cnJlbnRQb2ludHNHcm91cCIsImRhdGEiLCJlbnRlciIsImV4aXQiLCJ0cmFuc2l0aW9uIiwiY2FsbCIsImQzVHJhbnNpdGlvbiIsInNldHRpbmdzRGljdGlvbmFyeSIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/helpers/helpersSingleDataset.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Bubble/index.js":
/*!****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Bubble/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bubble: function() { return /* reexport safe */ _Bubble__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   BubbleMultipleDataset: function() { return /* reexport safe */ _BubbleMultipleDataset__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   BubbleSingleDataset: function() { return /* reexport safe */ _BubbleSingleDataset__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Bubble__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bubble */ \"./packages/carbon-graphs/src/js/controls/Bubble/Bubble.js\");\n/* harmony import */ var _BubbleSingleDataset__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BubbleSingleDataset */ \"./packages/carbon-graphs/src/js/controls/Bubble/BubbleSingleDataset.js\");\n/* harmony import */ var _BubbleMultipleDataset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BubbleMultipleDataset */ \"./packages/carbon-graphs/src/js/controls/Bubble/BubbleMultipleDataset.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThCO0FBQzBCO0FBQ0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9CdWJibGUvaW5kZXguanM/NTgxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnViYmxlIGZyb20gJy4vQnViYmxlJztcbmltcG9ydCBCdWJibGVTaW5nbGVEYXRhc2V0IGZyb20gJy4vQnViYmxlU2luZ2xlRGF0YXNldCc7XG5pbXBvcnQgQnViYmxlTXVsdGlwbGVEYXRhc2V0IGZyb20gJy4vQnViYmxlTXVsdGlwbGVEYXRhc2V0JztcblxuZXhwb3J0IHsgQnViYmxlLCBCdWJibGVTaW5nbGVEYXRhc2V0LCBCdWJibGVNdWx0aXBsZURhdGFzZXQgfTtcbiJdLCJuYW1lcyI6WyJCdWJibGUiLCJCdWJibGVTaW5nbGVEYXRhc2V0IiwiQnViYmxlTXVsdGlwbGVEYXRhc2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Bubble/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/Gantt.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/Gantt.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Construct__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Construct */ \"./packages/carbon-graphs/src/js/core/Construct/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/paddingUtils */ \"./packages/carbon-graphs/src/js/helpers/paddingUtils.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _GanttConfig__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./GanttConfig */ \"./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\");\n/* harmony import */ var _helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./helpers/actionHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/actionHelpers.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Gantt\n * @typedef {object} GanttConfig\n */\n\nvar BASE_CANVAS_WIDTH_PADDING = _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].BASE_CANVAS_WIDTH_PADDING;\n/**\n * Sets the canvas width\n *\n * @private\n * @param {HTMLElement} container - d3 HTML element object which forms the chart container\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasWidth = function setCanvasWidth(container, config) {\n  config.canvasWidth = parseInt(container.style('width'), 10) - (0,_helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(container);\n};\n/**\n * Sets the canvas width. Canvas rests within a container.\n * On resize, the canvas is subjected to resizing but its sibling: Legend isn't.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\n// eslint-disable-next-line no-return-assign\nvar setCanvasHeight = function setCanvasHeight(config) {\n  return config.canvasHeight = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.getYAxisHeight)(config) + (config.padding.bottom * 2 + config.padding.top) * 2;\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_AXES_DATA_LOADED}\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _GanttConfig__WEBPACK_IMPORTED_MODULE_18__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n/**\n * Executes the before init process checklist, needs to be called by parent control.\n * Binds the chart id provided in the input JSON to graph container.\n * Creates tooltip for the label popup.\n *\n * @private\n * @param {Gantt} control - Gantt instance\n * @returns {Gantt} Gantt instance\n */\nvar beforeInit = function beforeInit(control) {\n  control.graphContainer = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(control.config.bindTo);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(control.config);\n  control.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(control.config);\n  (0,_helpers_label__WEBPACK_IMPORTED_MODULE_17__.createTooltipDiv)();\n  return control;\n};\n/**\n * Initializes the necessary Gantt constructor objects\n *\n * @private\n * @param {Gantt} control - Gantt instance\n * @returns {Gantt} Gantt instance\n */\nvar initConfig = function initConfig(control) {\n  control.graphContainer = null;\n  control.config = {\n    axis: {\n      x: {},\n      y: {}\n    },\n    shownTargets: {},\n    actionLegend: [],\n    dateline: [],\n    eventline: [],\n    pan: {}\n  };\n  control.axis = {};\n  control.scale = {};\n  control.svg = null;\n  control.legendSVG = null;\n  control.tracks = [];\n  control.trackConfig = [];\n  control.resizeHandler = null;\n  return control;\n};\n/**\n * Executes the init process checklist, needs to be called by parent control.\n * Needs to be called post calling beforeInit\n *  Sets the canvas width within the graph container\n *  Determines the height for canvas\n *  Calculates Axes width and height\n *  Calculates Axes label width and height, positioning\n *  Creates and sets the d3 scale for the Graph\n *\n * @private\n * @param {Gantt} control - Gantt instance\n * @returns {Gantt} Gantt instance\n */\nvar init = function init(control) {\n  setCanvasWidth(control.graphContainer, control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.calculateAxesSize)(control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.calculateAxesLabelSize)(control.config);\n  setCanvasHeight(control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(control.scale, control.config);\n  return control;\n};\n\n/**\n * Gantt chart construct\n * * Axis - X\n * * X ticks\n * * Content that serves as Tracks (Rows). Tracks are Y axis. Y axis labels are clickable\n *\n * Lifecycle functions include:\n *  * BeforeInit\n *  * Init\n *  * Render\n *  * AfterInit\n *\n * @module Gantt\n * @class Gantt\n */\nvar Gantt = /*#__PURE__*/function (_Construct) {\n  /**\n     * @class\n     * @param {GanttConfig} input - Input JSON instance created using GanttConfig\n     */\n  function Gantt(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Gantt);\n    _this = _callSuper(this, Gantt);\n    initConfig(_this);\n    _this.generate(input);\n    return _this;\n  }\n\n  /**\n     * Draw function that is called by the parent control. This draws the x-axis, grid, legend and\n     * trackLabels for the chart construct.\n     *\n     * @description Since we don't have the concept of z-index in visualization,\n     * the order of rendering should be following:\n     *  * SVG container\n     *  * Grid\n     *  * X-Axis\n     *  * Y-Axis (Track Labels)\n     *  * Legend\n     *  * Data [In our case we have load and unload]\n     * @param {object} input - Input JSON\n     * @returns {HTMLElement} d3 selection node of svg.\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Gantt, _Construct);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Gantt, [{\n    key: \"generate\",\n    value: function generate(input) {\n      var _this2 = this;\n      this.config = loadInput(input);\n      (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_18__.processInput)(input, this.config);\n      beforeInit(this);\n      init(this);\n      var containerSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindTo).append('div').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"].container, true).style('padding-top', this.config.removeContainerPadding && 0).style('padding-bottom', this.config.removeContainerPadding && 0);\n      this.svg = containerSVG.insert('svg', ':first-child').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"].canvas, true).attr('role', 'img').attr('height', this.config.canvasHeight).attr('width', this.config.padding.hasCustomPadding ? this.config.canvasWidth : this.config.canvasWidth - BASE_CANVAS_WIDTH_PADDING);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createDefs)(this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createGrid)(this.axis, this.scale, this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createContentContainer)(this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createAxes)(this.axis, this.scale, this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createGanttContent)(this.config, this.svg);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.dateline)) {\n        (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_10__.createDateline)(this.scale, this.config, this.svg);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.eventline)) {\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_12__.createEventline)(this.scale, this.config, this.svg);\n      }\n      if (this.config.showActionLegend) {\n        this.legendSVG = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_13__.createLegend)(this.config, this.config.bindLegendTo ? _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindLegendTo) : containerSVG);\n        this.config.shownTargets = this.config.actionLegend.map(function (legendItem) {\n          return legendItem.key;\n        });\n        this.config.actionLegend.forEach(function (item) {\n          return (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_19__.renderLegendItems)(_this2.config, (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_19__.prepareLegendEventHandlers)(_this2, _this2.config, _this2.svg, _this2.config.shownTargets), item, _this2.legendSVG);\n        });\n      }\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.attachEventHandlers)(this);\n      return this.svg;\n    }\n\n    /**\n       * Resizes the graph canvas. Uses the clipPath def.\n       * It scales the graph on resize, and translates the graph elements:\n       *  X-Axis\n       *  Grid\n       *  Track Labels\n       *\n       *  @returns {Gantt} - Gantt instance\n       */\n    // eslint-disable-next-line consistent-return\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _this3 = this;\n      if (this.graphContainer) {\n        setCanvasWidth(this.graphContainer, this.config);\n        (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateGraph)(this);\n        this.trackConfig.forEach(function (control) {\n          return control.resize(_this3);\n        });\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateLabelText)(this.scale, this.config, this.svg);\n        return this;\n      }\n    }\n\n    /**\n     * Loads the content into the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * @param {object|array} content - Gantt content to be loaded\n     * @returns {Gantt} - Gantt instance\n     */\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(content) {\n      var _this4 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__.contentHandler)(content, function (i) {\n        var index = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.prepareLoadAtIndex)(_this4.scale, _this4.config, i, _this4.tracks.length);\n        var track = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.createTrack)(i);\n        _this4.trackConfig.splice(index, 0, track);\n        track.load(_this4);\n        _this4.tracks.splice(index, 0, i.key);\n      });\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(this.config);\n      this.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(this.config);\n      setCanvasHeight(this.config);\n      this.resize();\n      this.trackConfig.forEach(function (control) {\n        return control.redraw(_this4);\n      });\n      return this;\n    }\n\n    /**\n     *\n     * Unloads the content from the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * @param {object|array} content - Gantt content to be removed\n     * @returns {Gantt} - Gantt instance\n     */\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent(content) {\n      var _this5 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__.contentHandler)(content, function (i) {\n        var index = _this5.tracks.indexOf(i.key);\n        if (index < 0) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_11__[\"default\"].THROW_MSG_INVALID_OBJECT_PROVIDED);\n        }\n        _this5.trackConfig[index].unload(_this5);\n        _this5.tracks.splice(index, 1);\n        _this5.trackConfig.splice(index, 1);\n      });\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(this.config);\n      this.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(this.config);\n      setCanvasHeight(this.config);\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {Object} graphData - Input object that holds updated values and key\n       *  @returns {Gantt} - Gantt instance\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graphData) {\n      var _this6 = this;\n      console.warn('reflow is deprecated and will be removed a future major release. Please use reflowMultipleDatasets instead.');\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.setXAxisDomain)(this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n      var eventHandlers = (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_19__.prepareLegendEventHandlers)(this, this.config, this.svg, this.config.shownTargets);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      if (graphData && this.tracks.includes(graphData.key)) {\n        var position = this.tracks.findIndex(function (key) {\n          return key === graphData.key;\n        });\n        this.trackConfig[position].reflow(this, graphData);\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_13__.reflowLegend)(this.legendSVG, this.config.actionLegend[position], this, eventHandlers);\n      }\n      if (graphData && graphData.eventline) {\n        this.config.eventline = graphData.eventline;\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_12__.redrawEventlineContent)(this.scale, this.config, this.svg);\n      }\n      this.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(this.config);\n      setCanvasHeight(this.config);\n      this.resize();\n      this.trackConfig.forEach(function (control) {\n        return control.redraw(_this6);\n      });\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {object} graphData - Input object that holds updated values and key pairs\n       *  @returns {Gantt} - Gantt instance\n       */\n  }, {\n    key: \"reflowMultipleDatasets\",\n    value: function reflowMultipleDatasets(graphData) {\n      var _this7 = this;\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.setXAxisDomain)(this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n      var eventHandlers = (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_19__.prepareLegendEventHandlers)(this, this.config, this.svg, this.config.shownTargets);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_21__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      if (graphData && graphData.panData && !_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isEmptyArray(graphData.panData)) {\n        graphData.panData.forEach(function (data) {\n          var position = _this7.tracks.findIndex(function (key) {\n            return key === data.key;\n          });\n          if (position > -1) {\n            _this7.trackConfig[position].reflow(_this7, data);\n            (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_13__.reflowLegend)(_this7.legendSVG, _this7.config.actionLegend[position], _this7, eventHandlers);\n          }\n        });\n      }\n      if (graphData && graphData.eventline) {\n        this.config.eventline = graphData.eventline;\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_12__.redrawEventlineContent)(this.scale, this.config, this.svg);\n      }\n      this.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(this.config);\n      setCanvasHeight(this.config);\n      this.resize();\n      this.trackConfig.forEach(function (control) {\n        return control.redraw(_this7);\n      });\n      return this;\n    }\n\n    /**\n       * Destroys the graph: Container and canvas.\n       *\n       * @returns {Gantt} - Gantt instance\n       */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_17__.destroyTooltipDiv)();\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.detachEventHandlers)(this);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"].canvas));\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_20__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"].container));\n      initConfig(this);\n      return this;\n    }\n  }]);\n}(_core_Construct__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Gantt);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/Gantt.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js":
/*!*********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUniqueKey: function() { return /* binding */ isUniqueKey; },\n/* harmony export */   processInput: function() { return /* binding */ processInput; },\n/* harmony export */   settingsDictionary: function() { return /* binding */ settingsDictionary; },\n/* harmony export */   validateActivity: function() { return /* binding */ validateActivity; },\n/* harmony export */   validateEvent: function() { return /* binding */ validateEvent; },\n/* harmony export */   validateTask: function() { return /* binding */ validateTask; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _locale_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../locale/index */ \"./packages/carbon-graphs/src/js/locale/index.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n/**\n * Validates the newly added task into the graph before rendering\n *\n * @private\n * @param {object} input - Newly added graph tasks\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_TASKS_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_TASKS_START_AND_END_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_TASKS_DURATION_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_TASKS_START_AND_END_TYPE_NOT_VALID}\n * @throws {module:errors.THROW_MSG_TASKS_START_MORE_END}\n * @returns {undefined} - returns nothing\n */\nvar validateData = function validateData(input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_TASKS_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.startDate) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_TASKS_START_AND_END_NOT_PROVIDED);\n  }\n  if ((_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.startDate) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.endDate)) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.duration)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_TASKS_DURATION_NOT_PROVIDED);\n  }\n  if (input.startDate && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(input.startDate) || input.endDate && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_TASKS_START_AND_END_TYPE_NOT_VALID);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getTime(input.startDate) > _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getTime(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_TASKS_START_MORE_END);\n  }\n};\n\n/**\n * Validates the newly added activity into the graph before rendering\n *\n * @private\n * @param {object} input - Newly added graph tasks\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_ACTIVITIES_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_ACTIVITIES_START_AND_END_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_ACTIVITIES_DURATION_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_ACTIVITIES_START_AND_END_TYPE_NOT_VALID}\n * @throws {module:errors.THROW_MSG_ACTIVITIES_START_MORE_END}\n * @returns {undefined} - returns nothing\n */\nvar validateActivityData = function validateActivityData(input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_ACTIVITIES_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.startDate) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_ACTIVITIES_START_AND_END_NOT_PROVIDED);\n  }\n  if ((_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.startDate) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.endDate)) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input.duration)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_ACTIVITIES_DURATION_NOT_PROVIDED);\n  }\n  if (input.startDate && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(input.startDate) || input.endDate && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_ACTIVITIES_START_AND_END_TYPE_NOT_VALID);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getTime(input.startDate) > _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getTime(input.endDate)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_ACTIVITIES_START_MORE_END);\n  }\n};\n\n/**\n * Validates the newly added Event into the graph before rendering\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_NO_DATA_POINTS}\n * @param {object} content - Newly added graph content\n * @returns {undefined} - returns nothing\n */\nvar validateEventData = function validateEventData(content) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(content)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(content.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(content.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_DATA_POINTS);\n  }\n};\n/**\n * Used to set the clamp and transition when panning is enabled or not.\n *\n * @private\n * @param {object} config - config object used by the graph.\n * @returns {undefined} returns nothing\n */\nvar settingsDictionary = function settingsDictionary(config) {\n  return (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__.isPanningModeEnabled)(config) ? {\n    shouldClamp: false,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_DISABLED,\n    shouldCreateDatelineDefs: true\n  } : {\n    shouldClamp: true,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_ENABLED,\n    shouldCreateDatelineDefs: false\n  };\n};\n/**\n * Helper function to set the right padding values based on input JSON.\n *\n * @private\n * @param {object} config - config which needs to be updated\n * @param {object} inputPadding - input padding provided via input JSON.\n * @returns {object} - padding for Gantt\n */\nvar getPadding = function getPadding(config, inputPadding) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(config.padding)) {\n    return {\n      top: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.top, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top),\n      bottom: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.bottom, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom),\n      right: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.right, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right),\n      left: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.left, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.trackLabel),\n      hasCustomPadding: true\n    };\n  }\n  return {\n    top: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top,\n    bottom: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom,\n    right: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right,\n    left: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.trackLabel,\n    hasCustomPadding: false\n  };\n};\n/**\n * Processes the input from the JSON and updates the config object.\n * d3 domain and ranges are stored based on the upper and lower x limits.\n *\n * @private\n * @param {object} input - Input JSON provided by the consumer\n * @param {object} config - config object used by the graph\n * @returns {object} - returns configuration object constructed using Input JSON\n */\nvar processInput = function processInput(input, config) {\n  var axis = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(input.axis);\n  config.clipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__.generateClipPathId)();\n  config.datelineClipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__.generateDatelineClipPathId)();\n  config.bindTo = input.bindTo;\n  config.bindLegendTo = input.bindLegendTo;\n  config.padding = getPadding(config, input.padding);\n  config.legendPadding = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_14__.getLegendPadding)(config, input.legendPadding);\n  config.axis = {\n    x: {},\n    y: {}\n  };\n  config.d3Locale = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.locale, _locale_index__WEBPACK_IMPORTED_MODULE_13__.DEFAULT_LOCALE);\n  config.throttle = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.throttle, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].RESIZE_THROTTLE);\n  config.dateline = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(input.dateline), []);\n  config.eventline = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(input.eventline), []);\n  config.actionLegend = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(input.actionLegend), []);\n  config.settingsDictionary = settingsDictionary(input);\n  config.showActionLegend = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.showActionLegend, false);\n  config.axis.x = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(axis.x, {\n    type: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES,\n    show: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.x.show, true),\n    ticks: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.x.ticks, {}),\n    domain: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getXAxisDomain)(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES, axis.x.lowerLimit, axis.x.upperLimit),\n    rangeRounding: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.x.rangeRounding, true)\n  });\n  config.axis.y = {\n    show: axis.y ? (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.y.show, true) : true,\n    trackCount: 0,\n    trackList: {},\n    rangeRounding: axis.y ? (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.y.rangeRounding, true) : false\n  };\n  config.shownTargets = [];\n  return config;\n};\n\n/**\n * Checks if the keys for data points sets are unique\n *\n * @private\n * @param {Array} dictionary - Collections of graph content\n * @param {string} key - unique key for the newly added content\n * @returns {boolean} false if not unique\n */\nvar isUniqueKey = function isUniqueKey(dictionary, key) {\n  return dictionary.indexOf(key) < 0;\n};\n\n/**\n * API to parse consumer input for Gantt\n *\n * @class GanttConfig\n */\nvar GanttConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function GanttConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GanttConfig);\n    _this = _callSuper(this, GanttConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GanttConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GanttConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       * Checks if the following properties are present:\n       *      bindTo\n       *      axis\n       *      axis.x\n       *\n       * @throws {module:errors.THROW_MSG_NO_BIND}\n       * @throws {module:errors.THROW_MSG_NO_AXES_DATA_LOADED}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_INFO}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_LIMIT_INFO}\n       * @throws {module:errors.THROW_MSG_INVALID_AXIS_TYPE_VALUES}\n       * @returns {GanttConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXES_DATA_LOADED);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.bindTo)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_BIND);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_INFO);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x.upperLimit)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_LIMIT_INFO);\n      }\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(this.input.axis.x.lowerLimit) || !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDate(this.input.axis.x.upperLimit)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_INVALID_AXIS_TYPE_VALUES);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.dateline)) {\n        this.input.dateline.forEach(function (dateline) {\n          (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_9__.validateDateline)(dateline);\n        });\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.eventline)) {\n        this.input.eventline.forEach(function (eventline) {\n          (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_11__.validateEventline)(eventline);\n        });\n      }\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {GanttConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (GanttConfig);\nvar validateTask = validateData;\nvar validateActivity = validateActivityData;\nvar validateEvent = validateEventData;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/Track.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/Track.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateContent: function() { return /* binding */ validateContent; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _GanttConfig__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./GanttConfig */ \"./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\");\n/* harmony import */ var _helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/actionHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/actionHelpers.js\");\n/* harmony import */ var _helpers_activityHelpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/activityHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/activityHelpers.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_eventHelpers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./helpers/eventHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/eventHelpers.js\");\n/* harmony import */ var _helpers_taskHelpers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/taskHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/taskHelpers.js\");\n/* harmony import */ var _helpers_trackHelpers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./helpers/trackHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/trackHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n/**\n * @typedef {object} Track\n * @typedef {object} GraphContent\n * @typedef {object} GanttConfig\n */\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Validates the newly added content into the graph before rendering\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_NON_UNIQUE_PROPERTY}\n * @throws {module:errors.THROW_MSG_TASKS_NOT_PROVIDED}\n * @param {object} content - Newly added graph content\n * @returns {undefined} - returns nothing\n */\nvar validateContent = function validateContent(content) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(content)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(content.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(content.trackLabel) || _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(content.trackLabel.display)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED);\n  }\n};\n/**\n * Checks if the track name is same as the instance track name.\n * We are doing this since tick texts cannot be appended with a unique attribute like\n * the rest of the implementation. D3 directly renders the tick elements along with the\n * text based on the domain array values.\n *\n * @private\n * @param {Track} control - Track instance\n * @param {string} display - current track instance Label value\n * @returns {boolean} true if label value is the same as the tick text, false otherwise\n */\nvar hasMatchingTrackLabel = function hasMatchingTrackLabel(control, display) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(control).datum() === display;\n};\n/**\n * Adds onClick event for each tick.\n * Criteria:\n *  * Text needs to have a unique display value\n *  * Text needs to have a valid function for onClick\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} labelObj - Label object provided by the consumer\n * @returns {object} d3 svg path\n */\nvar addTrackLabelEventHandler = function addTrackLabelEventHandler(canvasSVG, labelObj) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].axisYTrackLabel, \" .tick text\")).each(function (displayVal) {\n    var _this = this;\n    // checks if track name is same as instance of track name\n    if (!(!displayVal || !hasMatchingTrackLabel(this, labelObj.display))) {\n      // eslint-disable-next-line no-unused-expressions\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_8__.shouldTruncateLabel)(labelObj.display) ? _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this).style('cursor', 'pointer').on('click', function () {\n        // If the consumer provides onclick function, it will override default onClick functionality provided by Carbon-graphs\n        // eslint-disable-next-line no-unused-expressions\n        _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDefined(labelObj.onClick) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isFunction(labelObj.onClick) ? labelObj.onClick(labelObj.display, _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(_this)) : (0,_helpers_label__WEBPACK_IMPORTED_MODULE_8__.loadLabelPopup)(labelObj.display, 'y');\n      }) : null;\n    }\n  });\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].deepClone(inputJSON);\n};\n\n/**\n * Track sub-graph part of a Gantt chart, which forms the foreground task\n *\n * @module Track\n * @class Track\n */\nvar Track = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {object} input - Input JSON\n     */\n  function Track(input) {\n    var _this2;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Track);\n    _this2 = _callSuper(this, Track);\n    _this2.config = loadInput(input);\n    _this2.config.actionKeys = [];\n    _this2.config.eventKeys = [];\n    _this2.config.activityKeys = [];\n    _this2.config.taskKeys = [];\n    _this2.trackGroupPath = null;\n    return _this2;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Track, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Track, [{\n    key: \"load\",\n    value: function load(graph) {\n      if (!(0,_GanttConfig__WEBPACK_IMPORTED_MODULE_11__.isUniqueKey)(graph.tracks, this.config.key)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n      }\n      this.trackGroupPath = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createTrackContainer)(graph.config, graph.svg, this.config);\n      /**\n           * To load the gantt track selector, we need to find the track-height, this gets updated only when updateTrackProps gets called.\n           *\n           * We Need to loadGanttTrackSelector prior to all other components, since trackSelector is part of trackGroup and should be layered bottom,\n           * to ensure the clickable functionality.\n           */\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.updateTrackProps)(graph.config, this.config, true);\n      (0,_helpers_trackHelpers__WEBPACK_IMPORTED_MODULE_17__.loadGanttTrackSelector)(graph, this.trackGroupPath, this.config);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.activities)) {\n        (0,_helpers_activityHelpers__WEBPACK_IMPORTED_MODULE_13__.loadActivities)(graph, this.trackGroupPath, this.config.trackLabel, this.config);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.tasks)) {\n        (0,_helpers_taskHelpers__WEBPACK_IMPORTED_MODULE_16__.loadTasks)(graph, this.trackGroupPath, this.config.trackLabel, this.config);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.events)) {\n        (0,_helpers_eventHelpers__WEBPACK_IMPORTED_MODULE_15__.loadEvents)(graph, this.trackGroupPath, this.config.trackLabel, this.config);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.actions)) {\n        (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_12__.loadActions)(graph, this.trackGroupPath, this.config.trackLabel, this.config);\n      }\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.updateTrackProps)(graph.config, this.config);\n      (0,_helpers_trackHelpers__WEBPACK_IMPORTED_MODULE_17__.unloadGanttTrackSelector)(graph, this.trackGroupPath);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.activities)) {\n        (0,_helpers_activityHelpers__WEBPACK_IMPORTED_MODULE_13__.unloadActivities)(graph, this.trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.tasks)) {\n        (0,_helpers_taskHelpers__WEBPACK_IMPORTED_MODULE_16__.unloadTasks)(graph, this.trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.events)) {\n        (0,_helpers_eventHelpers__WEBPACK_IMPORTED_MODULE_15__.unloadEvents)(graph, this.trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.actions)) {\n        (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_12__.unloadActions)(graph, this.trackGroupPath);\n      }\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.removeTrackContainer)(graph.svg, this.config.key);\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.scaleGraph)(graph.scale, graph.config);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.trackGroupPath)) {\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_18__.translateTrackSelector)(graph.scale, graph.config, this.trackGroupPath, this.config);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.activities)) {\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_18__.translateActivities)(graph.scale, graph.config, this.trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.tasks)) {\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_18__.translateTasks)(graph.scale, graph.config, this.trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.actions) || _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.events)) {\n        (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_18__.translateDataPoints)(graph.scale, graph.config, this.trackGroupPath);\n      }\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var _this3 = this;\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(graphData.activities) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.activities)) {\n        graphData.activityKeys = [];\n        graphData.activities.forEach(function (activity) {\n          graphData.activityKeys.push(activity.key);\n          if (_this3.config.activityKeys.includes(activity.key)) {\n            var position = _this3.config.activityKeys.indexOf(activity.key);\n            _this3.config.activities[position].startDate = activity.startDate;\n            _this3.config.activities[position].endDate = activity.endDate;\n          }\n        });\n        this.config.activityKeys.slice(0).forEach(function (key) {\n          if (!graphData.activityKeys.includes(key)) {\n            var position = _this3.config.activityKeys.indexOf(key);\n            _this3.config.activityKeys.splice(position, 1);\n            _this3.config.activities.splice(position, 1);\n          }\n        });\n        var trackGroupPath = graph.svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].trackGroup, \"[aria-describedby=\\\"\").concat(this.config.key, \"\\\"]\"));\n        (0,_helpers_activityHelpers__WEBPACK_IMPORTED_MODULE_13__.reflowActivities)(graph.svg, graph.config, graph.scale, this, trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(graphData.tasks) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.tasks)) {\n        graphData.taskKeys = [];\n        graphData.tasks.forEach(function (task) {\n          graphData.taskKeys.push(task.key);\n          if (_this3.config.taskKeys.includes(task.key)) {\n            var position = _this3.config.taskKeys.indexOf(task.key);\n            _this3.config.tasks[position].startDate = task.startDate;\n            _this3.config.tasks[position].endDate = task.endDate;\n          }\n        });\n        this.config.taskKeys.slice(0).forEach(function (key) {\n          if (!graphData.taskKeys.includes(key)) {\n            var position = _this3.config.taskKeys.indexOf(key);\n            _this3.config.taskKeys.splice(position, 1);\n            _this3.config.tasks.splice(position, 1);\n          }\n        });\n        var _trackGroupPath = graph.svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].trackGroup, \"[aria-describedby=\\\"\").concat(this.config.key, \"\\\"]\"));\n        (0,_helpers_taskHelpers__WEBPACK_IMPORTED_MODULE_16__.reflowTasks)(graph.svg, graph.config, graph.scale, this, _trackGroupPath);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(graphData.events) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.events)) {\n        graphData.eventKeys = [];\n        graphData.events.forEach(function (event) {\n          graphData.eventKeys.push(event.key);\n          if (_this3.config.eventKeys.includes(event.key)) {\n            var position = _this3.config.eventKeys.indexOf(event.key);\n            _this3.config.events[position].values = event.values;\n          }\n        });\n        this.config.eventKeys.slice(0).forEach(function (key) {\n          if (!graphData.eventKeys.includes(key)) {\n            var position = _this3.config.eventKeys.indexOf(key);\n            _this3.config.eventKeys.splice(position, 1);\n            _this3.config.events.splice(position, 1);\n          }\n        });\n        var _trackGroupPath2 = graph.svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].trackGroup, \"[aria-describedby=\\\"\").concat(this.config.key, \"\\\"]\"));\n        (0,_helpers_eventHelpers__WEBPACK_IMPORTED_MODULE_15__.reflowEvents)(graph.config, graph.scale, this, _trackGroupPath2);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(graphData.actions) && _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].notEmpty(this.config.actions)) {\n        graphData.actionKeys = [];\n        graphData.actions.forEach(function (action) {\n          graphData.actionKeys.push(action.key);\n          if (_this3.config.actionKeys.includes(action.key)) {\n            var position = _this3.config.actionKeys.indexOf(action.key);\n            _this3.config.actions[position].values = action.values;\n          }\n        });\n        this.config.actionKeys.slice(0).forEach(function (key) {\n          if (!graphData.actionKeys.includes(key)) {\n            var position = _this3.config.actionKeys.indexOf(key);\n            _this3.config.actionKeys.splice(position, 1);\n            _this3.config.actions.splice(position, 1);\n          }\n        });\n        var _trackGroupPath3 = graph.svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].trackGroup, \"[aria-describedby=\\\"\").concat(this.config.key, \"\\\"]\"));\n        (0,_helpers_actionHelpers__WEBPACK_IMPORTED_MODULE_12__.reflowActions)(graph.config, graph.scale, this, _trackGroupPath3, graph.legendSVG);\n      }\n      this.resize(graph);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      addTrackLabelEventHandler(graph.svg, this.config.trackLabel);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_6__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Track);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/Track.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/actionHelpers.js":
/*!*******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/actionHelpers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   loadActions: function() { return /* binding */ loadActions; },\n/* harmony export */   prepareLegendEventHandlers: function() { return /* binding */ prepareLegendEventHandlers; },\n/* harmony export */   processActionItems: function() { return /* binding */ processActionItems; },\n/* harmony export */   reflowActions: function() { return /* binding */ reflowActions; },\n/* harmony export */   renderLegendItems: function() { return /* binding */ renderLegendItems; },\n/* harmony export */   unloadActions: function() { return /* binding */ unloadActions; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _datapointHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./datapointHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/datapointHelpers.js\");\n/* harmony import */ var _translateHelpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef Gantt\n */\n\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} trackLabel -Track label\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processActionItems = function processActionItems(graphConfig, trackLabel, dataTarget) {\n  var checkX = function checkX(x) {\n    if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isDate(x)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].parseDateTime(x);\n  };\n  var getActionLegendDetails = function getActionLegendDetails(legendItems, key) {\n    var item = legendItems.filter(function (l) {\n      return l.key === key;\n    });\n    if (!item.length) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_UNIQUE_ACTION_KEY_NOT_PROVIDED);\n    }\n    return item[0];\n  };\n  var legendItem = getActionLegendDetails(graphConfig.actionLegend, dataTarget.key);\n  return dataTarget.values.map(function (value) {\n    return {\n      key: dataTarget.key,\n      onClick: dataTarget.onClick,\n      x: checkX(value),\n      y: trackLabel.display,\n      label: legendItem.label,\n      color: legendItem.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_COLOR,\n      shape: legendItem.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.SHAPES.CIRCLE,\n      clickPassThrough: _helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isDefined(graphConfig.clickPassThrough) ? graphConfig.clickPassThrough.actions : false\n    };\n  });\n};\n/**\n * Updates the array parameter, with the key. If the key is present then\n * it removed, else added to the array.\n *\n * @private\n * @param {Array} shownTargets - List of targets shown in the graph\n * @param {object} key - unique data set key\n * @returns {Array} modified shownTarget array\n */\nvar updateShownTarget = function updateShownTarget(shownTargets, key) {\n  var index = shownTargets.indexOf(key);\n  if (index > -1) {\n    shownTargets.splice(index, 1);\n  } else {\n    shownTargets.push(key);\n  }\n  return shownTargets;\n};\n/**\n * Click handler for legend item. Removes the action items from graph when clicked and calls redraw\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, config, canvasSVG) {\n  return function (element, item) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.legendClickHandler)(element);\n    updateShownTarget(config.shownTargets, item.key);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', function () {\n      return !(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('aria-hidden') === 'true');\n    });\n  };\n};\n/**\n * Hover handler for legend item. Blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      return svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point, \"[aria-describedby=\\\"\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n  };\n};\n/**\n * Prepares click and hover handlers for action legend items.\n *\n * @private\n * @param {Gantt} control - gantt chart instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 html element of the canvas\n * @param {Array} shownTargets - graph targets config object\n * @returns {{clickHandler: Function, hoverHandler: Function}} - event handlers for legend items\n */\nvar prepareLegendEventHandlers = function prepareLegendEventHandlers(control, config, canvasSVG, shownTargets) {\n  return {\n    clickHandler: clickHandler(control, config, canvasSVG),\n    hoverHandler: hoverHandler(shownTargets, canvasSVG)\n  };\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar renderLegendItems = function renderLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n/**\n * Validates the newly added content into the graph before rendering\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_NO_DATA_POINTS}\n * @param {object} content - Newly added graph content\n * @returns {undefined} - returns nothing\n */\nvar validateActionContent = function validateActionContent(content) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(content)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(content.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(content.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_NO_DATA_POINTS);\n  }\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadActionInput = function loadActionInput(inputJSON) {\n  validateActionContent(inputJSON);\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].deepClone(inputJSON);\n};\n/**\n * Renders the data point in the provided path element.\n * It uses the consumer opted Shape, color of the data point.\n * Behavior when clicked on the data point etc.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {SVGElement} path - svg Path element\n * @param {object} dataPoint - data point properties such as shape, color and onClick callback function\n * @param {number} index - data point index\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {object} - d3 selection object\n */\nvar renderDataPointPath = function renderDataPointPath(scale, config, path, dataPoint, index, legendSVG) {\n  return path.append(function () {\n    var _legendSVG$select;\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__.getShapeForTarget)(dataPoint)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point,\n      svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__.getColorForTarget)(dataPoint), \";\"),\n      transformFn: (0,_translateHelpers__WEBPACK_IMPORTED_MODULE_10__.transformPoint)(scale, config)(dataPoint),\n      onClickFn: function onClickFn() {\n        (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.dataPointActionHandler)(dataPoint, index, this);\n      },\n      a11yAttributes: {\n        'aria-hidden': legendSVG ? ((_legendSVG$select = legendSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItem, \"[aria-describedby='\").concat(dataPoint.key, \"']\"))) === null || _legendSVG$select === void 0 ? void 0 : _legendSVG$select.attr('aria-current')) === 'false' : 'false',\n        'aria-describedby': dataPoint.key,\n        'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(dataPoint.onClick)\n      },\n      additionalAttributes: {\n        'pointer-events': dataPoint.clickPassThrough && !_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(dataPoint.onClick)\n      }\n    }));\n  });\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 html element of the canvas\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {object} - d3 append object\n */\nvar drawActionDataPoints = function drawActionDataPoints(scale, config, canvasSVG, legendSVG) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].pointGroup, true).each(function (dataPoint, index) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.renderSelectionPath)(scale, config, dataPointSVG, dataPoint, index);\n    renderDataPointPath(scale, config, dataPointSVG, dataPoint, index, legendSVG);\n  });\n};\n/**\n * Creates an element container with data points from the input JSON property: action\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @param {object} trackLabel - Track label\n * @param {object} gantt - input config for creating an action\n * @returns {undefined} - returns nothing\n */\nvar loadActions = function loadActions(graphContext, trackPathSVG, trackLabel, gantt) {\n  return gantt.actions.forEach(function (a, i) {\n    (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.drawDataPoints)(graphContext.scale, graphContext.config, trackPathSVG, processActionItems(graphContext.config, trackLabel, loadActionInput(a)), drawActionDataPoints, false);\n    gantt.actionKeys.splice(i, 0, a.key);\n  });\n};\n\n/**\n * Update activities for the track.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} scale - d3 scale for Graph\n * @param {object} gantt - Graph config object for the content.\n * @param {object} trackGroupPath - Container for the track\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar reflowActions = function reflowActions(config, scale, gantt, trackGroupPath, legendSVG) {\n  gantt.config.actions.forEach(function (action) {\n    validateActionContent(action);\n  });\n  trackGroupPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].currentPointsGroup, \"[event=\\\"false\\\"]\")).remove();\n  gantt.config.actions.forEach(function (action) {\n    (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.drawDataPoints)(scale, config, trackGroupPath, processActionItems(config, gantt.config.trackLabel, loadActionInput(action)), drawActionDataPoints, false, legendSVG);\n  });\n};\n\n/**\n * Selects all the data point groups from the track and removes them\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @returns {Selection} - track container element\n */\nvar unloadActions = function unloadActions(graphContext, trackPathSVG) {\n  return trackPathSVG.selectAll(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].currentPointsGroup)).remove();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/actionHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/activityHelpers.js":
/*!*********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/activityHelpers.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadActivities: function() { return /* binding */ loadActivities; },\n/* harmony export */   reflowActivities: function() { return /* binding */ reflowActivities; },\n/* harmony export */   unloadActivities: function() { return /* binding */ unloadActivities; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_barType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/barType */ \"./packages/carbon-graphs/src/js/helpers/barType.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _GanttConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../GanttConfig */ \"./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _durationHelpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./durationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Processes the input for a activity and converts to an object needed to render a bar\n * Duration is a function that is needed to compute Start or end. If both start and end\n * are present then the duration will be ignored.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} trackLabel -Track label\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processActivities = function processActivities(graphConfig, trackLabel, dataTarget) {\n  var duration = dataTarget.duration ? (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getActivityDuration)(dataTarget.duration) : 0;\n  return {\n    y: trackLabel.display,\n    startDate: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getStartDuration)(duration, dataTarget.startDate, dataTarget.endDate),\n    endDate: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getEndDuration)(duration, dataTarget.startDate, dataTarget.endDate),\n    dependencies: dataTarget.dependencies,\n    color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.COLORS.BLUE,\n    label: dataTarget.label || null,\n    key: dataTarget.key,\n    style: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getActivityStyle)(dataTarget),\n    isHashed: (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_7__.isHashed)(dataTarget.style),\n    clickPassThrough: _helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isDefined(graphConfig.clickPassThrough) ? graphConfig.clickPassThrough.activities : false\n  };\n};\n\n/**\n * Generates arguments for creating activity rectangles\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} data - Current activity data\n * @param {Selection} path - d3 activity bar selection element\n * @returns {object} List of arguments - target element, x, y, width, height.\n */\nvar generatorArgs = function generatorArgs(scale, data, path) {\n  return {\n    path: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(path),\n    x: scale.x(data.startDate),\n    y: scale.y(data.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_ACTIVITY_PADDING.top,\n    width: scale.x(data.endDate) - scale.x(data.startDate) || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH,\n    height: _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_ACTIVITY_HEIGHT\n  };\n};\n\n/**\n * Creates a rect and appends it to the d3 selection element provided in the argument\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {string} style - inline styling for the bar\n * @returns {Selection} d3 selection path\n */\nvar getActivityBar = function getActivityBar(path, x, y, width, height, style) {\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getRect)(path, x, y, width, height).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityBar, true).attr('style', style);\n  return path;\n};\n\n/**\n * Creates a rect and appends it to the d3 selection element provided in the argument.\n * A chunk is a bar with fixed width. Uses: DEFAULT_GANTT_TASK_CHUNK_WIDTH\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {object} style - inline styling for the bar\n * @returns {Selection} d3 selection path\n */\nvar getActivityChunk = function getActivityChunk(path, x, y, width, height, style) {\n  getActivityBar(path, x, y, _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH, height, style);\n  return path;\n};\n\n/**\n * Based on startDate and endDate, we either render a chunk or a normal bar.\n * If the startDate and endDate is same, render a Chunk with 5px width\n * else render a normal bar with width based on start and end parameters provided.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} data - Current activity data\n * @param {Selection} path - d3 activity bar selection element\n * @returns {undefined} - returns nothing\n */\nvar renderActivityGroup = function renderActivityGroup(scale, data, path) {\n  var args = generatorArgs(scale, data, path);\n  ((0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.isAChunk)(data.startDate, data.endDate) ? getActivityChunk : getActivityBar)(args.path, args.x, args.y, args.width, args.height, data.style).attr('pointer-events', function () {\n    return data.clickPassThrough ? 'none' : 'auto';\n  });\n};\n\n/**\n * Creates a patterned bar with forward backslashes\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Selection} defs - d3 selection path for defs element in the graph\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {string} style - style you want to apply for the bar\n * @returns {Selection} d3 selection path\n */\nvar getActivityHashedBar = function getActivityHashedBar(canvasSVG, defs, path, x, y, width, height, style) {\n  var patternId = 'pattern-stripe-gantt-activity';\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isEmpty(defs) || defs.empty()) {\n    canvasSVG.append('defs');\n  }\n  if (canvasSVG.select(\"#\".concat(patternId)).empty()) {\n    defs.append('pattern').attr('id', patternId).attr('patternUnits', 'userSpaceOnUse').attr('patternTransform', 'rotate(135)').attr('width', _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_ACTIVITY_STRIPE_WIDTH).attr('height', height).attr('style', \"fill: \".concat(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_BAR_STRIPE_COLOR, \";\")).append('rect').attr('width', _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_ACTIVITY_STRIPE_DISTANCE).attr('height', height);\n  }\n  // Draw the background rect\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getRect)(path, x, y, width, height).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityBar, true).attr('style', style);\n  // Opacity for bar with hashes\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getRect)(path, x, y, width, height).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityBar, true).attr('style', \"fill: url(#\".concat(patternId, \"); fill-opacity: 0.7;\"));\n  return path;\n};\n\n/**\n * Based on startDate and endDate, we render a hashed bar.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} scale - d3 scale for Graph\n * @param {object} data - Current activity data\n * @param {Selection} path - d3 activity bar selection element\n * @returns {undefined} - returns nothing\n */\nvar renderHashedActivityGroup = function renderHashedActivityGroup(canvasSVG, scale, data, path) {\n  var args = generatorArgs(scale, data, path);\n  getActivityHashedBar(canvasSVG, canvasSVG.select('defs'), args.path, args.x, args.y, args.width, args.height, data.style).attr('pointer-events', function () {\n    return data.clickPassThrough ? 'none' : 'auto';\n  });\n};\n\n/**\n * Renders the activities for a track. Each activity is created based on start and end datetime.\n * Values needs to be in ISO8601 datetime format, along with the unique key for each activity.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} trackLabel - Track label\n * @param {object} activityGroupPath - Container for all the activities.\n * @param {Array} activities - Activities list\n * @returns {undefined} - returns nothing\n */\nvar drawActivities = function drawActivities(canvasSVG, scale, config, trackLabel, activityGroupPath, activities) {\n  var activityPath = activityGroupPath.selectAll('g').data(activities.map(function (a) {\n    return processActivities(config, trackLabel, _helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].deepClone(a));\n  }));\n  activityPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activity, true).attr('aria-selected', false).attr('aria-describedby', function (d) {\n    return d.key;\n  }).each(function (d) {\n    if (d.isHashed) {\n      renderHashedActivityGroup(canvasSVG, scale, d, this);\n    } else {\n      renderActivityGroup(scale, d, this);\n    }\n  });\n  activityPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n\n/**\n * Creates an element container with data points from the input JSON property: tasks\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @param {object} trackLabel - Track label\n * @param {Array} gantt - input config for creating activities\n * @returns {undefined} - returns nothing\n */\nvar loadActivities = function loadActivities(graphContext, trackPathSVG, trackLabel, gantt) {\n  var activityGroupPath = trackPathSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getXAxisXPosition)(graphContext.config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_7__.getXAxisYPosition)(graphContext.config), \")\"));\n  gantt.activities.forEach(function (a, i) {\n    (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_6__.validateActivity)(a);\n    gantt.activityKeys.splice(i, 0, a.key);\n  });\n  drawActivities(graphContext.svg, graphContext.scale, graphContext.config, trackLabel, activityGroupPath, gantt.activities);\n};\n\n/**\n * Selects the activity group from the track and removes them\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @returns {Selection} - track container element\n */\nvar unloadActivities = function unloadActivities(graphContext, trackPathSVG) {\n  return trackPathSVG.select(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityGroup)).remove();\n};\n\n/**\n * Update activities for the track.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} scale - d3 scale for Graph\n * @param {object} gantt - Graph config object for the content.\n * @param {object} trackGroupPath - Container for the track\n * @returns {undefined} - returns nothing\n */\nvar reflowActivities = function reflowActivities(canvasSVG, config, scale, gantt, trackGroupPath) {\n  gantt.config.activities.forEach(function (a) {\n    (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_6__.validateActivity)(a);\n  });\n  var activityPath = trackGroupPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].activityGroup));\n  activityPath.selectAll('g').remove();\n  drawActivities(canvasSVG, scale, config, gantt.config.trackLabel, activityPath, gantt.config.activities);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/activityHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js":
/*!*********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.attachEventHandlers; },\n/* harmony export */   calculateAxesLabelSize: function() { return /* binding */ calculateAxesLabelSize; },\n/* harmony export */   calculateAxesSize: function() { return /* binding */ calculateAxesSize; },\n/* harmony export */   createAxes: function() { return /* binding */ createAxes; },\n/* harmony export */   createContentContainer: function() { return /* binding */ createContentContainer; },\n/* harmony export */   createDefs: function() { return /* binding */ createDefs; },\n/* harmony export */   createGanttContent: function() { return /* binding */ createGanttContent; },\n/* harmony export */   createGrid: function() { return /* binding */ createGrid; },\n/* harmony export */   createTrack: function() { return /* binding */ createTrack; },\n/* harmony export */   createTrackContainer: function() { return /* binding */ createTrackContainer; },\n/* harmony export */   createTrackSelectionContainer: function() { return /* binding */ createTrackSelectionContainer; },\n/* harmony export */   d3RemoveElement: function() { return /* binding */ d3RemoveElement; },\n/* harmony export */   detachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.detachEventHandlers; },\n/* harmony export */   determineHeight: function() { return /* binding */ determineHeight; },\n/* harmony export */   getAxesScale: function() { return /* binding */ getAxesScale; },\n/* harmony export */   getColorForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getColorForTarget; },\n/* harmony export */   getShapeForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getShapeForTarget; },\n/* harmony export */   getXAxisWidth: function() { return /* binding */ getXAxisWidth; },\n/* harmony export */   getXAxisXPosition: function() { return /* reexport safe */ _helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition; },\n/* harmony export */   getXAxisYPosition: function() { return /* binding */ getXAxisYPosition; },\n/* harmony export */   getYAxisYPosition: function() { return /* binding */ getYAxisYPosition; },\n/* harmony export */   isHashed: function() { return /* binding */ isHashed; },\n/* harmony export */   prepareLoadAtIndex: function() { return /* binding */ prepareLoadAtIndex; },\n/* harmony export */   removeTrackContainer: function() { return /* binding */ removeTrackContainer; },\n/* harmony export */   scaleGraph: function() { return /* binding */ scaleGraph; },\n/* harmony export */   translateCanvas: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.translateCanvas; },\n/* harmony export */   updateAxesDomain: function() { return /* binding */ updateAxesDomain; },\n/* harmony export */   updateTrackProps: function() { return /* binding */ updateTrackProps; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/datetimeBuckets */ \"./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _Track__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Track */ \"./packages/carbon-graphs/src/js/controls/Gantt/Track.js\");\n/* harmony import */ var _translateHelpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Computes the Y Axis range by adding the track heights provided by consumer for each track\n * If the track height for 3 tracks are [80, null, 50]\n * then they will be [80, 80+<DEFAULT_TRACK_HEIGHT>, 80+<DEFAULT_TRACK_HEIGHT>+50]\n *\n * @private\n * @param {object} trackList - Y Axis trackList config object\n * @returns {Array} array containing the current range for Y Axis\n */\nvar getYAxisRange = function getYAxisRange(trackList) {\n  return Object.keys(trackList).map(function (o) {\n    return trackList[o].trackHeight;\n  }).map(function (h, index, arr) {\n    return index > 0 ? h + arr.slice(0, index).reduce(function (a, b) {\n      return a + b;\n    }, 0) : h;\n  });\n};\n\n/**\n * Calculates the height for Y and Y2 axes.\n * If dimensions are provided in the input, then they are given priority.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Height for the axes\n */\nvar determineHeight = function determineHeight(config) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(config.axis.y.trackList) ? 0 : parseInt(getYAxisRange(config.axis.y.trackList).pop(), 10);\n};\n/**\n * Updates the track count based on load or unload of content into gantt chart\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {boolean} [isLoad=false] True if load workflow, false if unload\n * @returns {number} current track count within the graph\n */\n// eslint-disable-next-line no-return-assign\nvar updateTrackCount = function updateTrackCount(config) {\n  var isLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return isLoad ? config.axis.y.trackCount += 1 : config.axis.y.trackCount -= 1;\n};\n\n/**\n * Updates the trackList object to include new track info, by converting trackListObject\n * to array, insert new trackObject and convert it back to object.\n *\n * @private\n * @param {object} content - track Content\n * @param {number} trackIndex - index at which track needs to be loaded\n * @param {object} trackListObject - Object which holds list of Tracks\n * @returns {object} Updated object which now holds the new track.\n */\nvar updateTrackList = function updateTrackList(content, trackIndex, trackListObject) {\n  // convert trackListObject to an actual array (its an object)\n  var trackList = Object.keys(trackListObject).map(function (key) {\n    return [key, trackListObject[key]];\n  });\n  trackList.splice(trackIndex, 0, [content.key, {\n    trackHeight: content.dimension ? content.dimension.trackHeight : _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TRACK_HEIGHT,\n    trackLabel: content.trackLabel.display\n  }]);\n  // convert the list back to an object\n  var trackListObj = {};\n  trackList.forEach(function (track) {\n    var _ref = [track[1]];\n    trackListObj[track[0]] = _ref[0];\n  });\n  return trackListObj;\n};\n\n/**\n * Updates the track properties such as label, key and height lists.\n * Required props:\n *  * trackLabel\n *  * key\n *\n *  Optional:\n *  * Height - by default: constants.DEFAULT_GANTT_TRACK_HEIGHT\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {object} content - input JSON provided by consumer\n * @param {boolean} [isLoad=false] True if load workflow, false if unload\n * @returns {undefined} - returns nothing\n */\nvar updateTrackProps = function updateTrackProps(config, content) {\n  var isLoad = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  updateTrackCount(config, isLoad);\n  if (!isLoad) {\n    delete config.axis.y.trackList[content.key];\n  }\n};\n/**\n * Determines the domain for x and y axes.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {object} config - config object derived from input JSON\n */\nvar updateAxesDomain = function updateAxesDomain(config) {\n  config.axis.y.domain = {\n    lowerLimit: 0,\n    upperLimit: config.axis.y.trackCount || 1\n  };\n  return config;\n};\n/**\n * Checks if the track label needs to be truncated and returns the truncated value\n *\n * @private\n * @param {string} label - Track label display property\n * @returns {string} if more than constants.DEFAULT_LABEL_CHARACTER_LIMIT then truncates,\n * normal label otherwise\n */\nvar formatTrackLabel = function formatTrackLabel(label) {\n  return (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.shouldTruncateLabel)(label) ? (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.truncateLabel)(label) : label;\n};\n/**\n * Creates the axis using the scale provided for Y Axis using d3 svg axis\n *\n * @private\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {number} height - Height of the Y Axis to calculate the number of Y Axis ticks\n * @returns {object} d3 object which forms the y-axis scale\n */\nvar prepareYAxis = function prepareYAxis(scale, height) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale).ticks(height / _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_Y_AXIS_SPACING).tickFormat(formatTrackLabel).tickPadding(8);\n};\n\n/**\n * Returns an array containing the current domain for Y Axis.\n * If there are no labels or the graph has no content then the domain is empty array,\n * but if the data is provided then the domain will be 'null' as the first item\n * followed by the content labels. We add the null to ensure that the first track does not\n * coincide with the X Axis.\n *\n * @private\n * @param {object} trackList - Y Axis trackList config object\n * @returns {Array} array containing the current domain for Y Axis\n */\nvar getYAxisDomain = function getYAxisDomain(trackList) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(trackList) ? [] : Object.keys(trackList).map(function (k) {\n    return trackList[k].trackLabel;\n  });\n};\n\n/**\n * Dynamically generate the label width for y axes\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} label width\n */\nvar getYAxisWidth = function getYAxisWidth(config) {\n  if (config.padding.hasCustomPadding) {\n    return config.padding.left;\n  }\n  var scale = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleOrdinal().domain(getYAxisDomain(config.axis.y.trackList)).range([0].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(getYAxisRange(config.axis.y.trackList))));\n  var axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale);\n  var dummy = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select('body').append('div');\n  var svg = dummy.append('svg');\n  var yAxisSVG = svg.append('g').call(axis);\n  var _yAxisSVG$node$getBou = yAxisSVG.node().getBoundingClientRect(),\n    width = _yAxisSVG$node$getBou.width;\n  dummy.remove();\n  return width;\n};\n\n/**\n * Calculates axes sizes, specifically:\n *  X Axis: Height\n *  Y Axis: Width\n *  Padding is provided enough to accommodate around 15 characters.\n *  Beyond which we would need to apply truncation (ellipsis)\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesSize = function calculateAxesSize(config) {\n  config.axisSizes = {};\n  config.axisSizes.x = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisHeight)(config);\n  config.axisSizes.y = getYAxisWidth(config);\n};\n/**\n *  Calculates the label size needed for each axes.\n *  Y Axis: Width\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesLabelSize = function calculateAxesLabelSize(config) {\n  config.axisLabelWidths = {};\n  config.axisLabelWidths.y = config.padding.left;\n};\n/**\n * X Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisYPosition = function getXAxisYPosition(config) {\n  return (config.padding.top + config.padding.bottom) * 2;\n};\n/**\n * X Axis's width that will hold equally spaced ticks\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} X Axis width\n */\nvar getXAxisWidth = function getXAxisWidth(config) {\n  return config.canvasWidth - config.axisSizes.y - config.axisLabelWidths.y - getXAxisYPosition(config);\n};\n/**\n * Y Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - derived config from input json.\n * @returns {number} Position for the axis\n */\nvar getYAxisYPosition = function getYAxisYPosition(config) {\n  return getXAxisYPosition(config);\n};\n/**\n * Prepares X,Y and Y2 Axes according to their scale and available container width and height\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} - Scaled axes object\n */\nvar getAxesScale = function getAxesScale(axis, scale, config) {\n  axis.x = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.prepareXAxis)(scale.x, config.axis.x.ticks.values, getXAxisWidth(config), (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getAxisTickFormat)(config.d3Locale, config.axis.x.ticks.format, config.axis.x.type), _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.AXES_ORIENTATION.X.TOP);\n  axis.y = prepareYAxis(scale.y, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getYAxisHeight)(config));\n  return axis;\n};\n/**\n * Creates and sets the d3 scale for the Graph. Once the scale is created\n * we can create the axes. To create a d3 scale, we need domain and range.\n * To create an axis we need scale, orientation and tick values, if needed\n *\n * The scale function uses d3.linear.nice which rounds the values in the axes.\n * i.e. [0.20147987687960267, 0.996679553296417] will get translated to [0.2, 1]\n *\n * The scale function uses d3.linear.clamp which \"clamps\" the scale so that any\n * input provided will clamp between the domain.\n * i.e. Before, If you have domain 0 to 20 (input lower and upper bounds) and range 0 to 100 (Width in px).\n * When input 20 is provided then the scale returns the px positioning as 200, which would put the point outside the graph.\n * Instead we clamp it within the graph as an upper bound using clamp. Now, it will return 100px.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar scaleGraph = function scaleGraph(scale, config) {\n  scale.x = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleTime().domain([config.axis.x.domain.lowerLimit, config.axis.x.domain.upperLimit]).range([0, getXAxisWidth(config)]).clamp(config.settingsDictionary.shouldClamp);\n  scale.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleOrdinal().domain(getYAxisDomain(config.axis.y.trackList)).range([0].concat((0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(getYAxisRange(config.axis.y.trackList))));\n  if (config.axis.x.rangeRounding) {\n    scale.x.nice();\n  }\n};\n/**\n * Added defs element for the canvas. This currently holds the clip paths for the entire chart.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} return nothing\n */\nvar createDefs = function createDefs(config, canvasSVG) {\n  var defsElement = canvasSVG.append('defs');\n  defsElement.append('clipPath').attr('id', config.clipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisYPosition(config)).attr('width', getXAxisWidth(config)).attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getYAxisHeight)(config));\n  if (config.settingsDictionary.shouldCreateDatelineDefs && config.dateline.length > 0) {\n    defsElement.append('clipPath').attr('id', config.datelineClipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisYPosition(config)).attr('width', getXAxisWidth(config)).attr('height', 0);\n  }\n};\n\n/**\n * Function to create the vertical-grid with a specific style and config.\n *\n * @private\n * @param {object} gridSVG - d3 object of the grid\n * @param {object} axis - Axis scaled according to input parameters\n * @param {string} style - Style with which, grid needs to be created.\n * @param {object} config - config required for translating vertical grid.\n * @returns {undefined} - Doesn't return anything.\n */\nvar createVGridHandler = function createVGridHandler(gridSVG, axis, style, config) {\n  gridSVG.append('g').classed(style, true).call((0,_translateHelpers__WEBPACK_IMPORTED_MODULE_11__.translateVerticalGrid)(axis, config));\n};\n\n/**\n * Create the d3 grid - horizontal and vertical and append into the canvas.\n * Only performed if the flags for showHGrid and showVGrid are enabled\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createGrid = function createGrid(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  var gridSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].grid, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config), \",\").concat(getXAxisYPosition(config), \")\"));\n  gridSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].gridH, true).call((0,_translateHelpers__WEBPACK_IMPORTED_MODULE_11__.translateHorizontalGrid)(axis, config));\n  (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__.createVGrid)(gridSVG, axis, config, createVGridHandler);\n};\n\n/**\n * Create the d3 Axes - X, Y and Y2 and append into the canvas.\n * If axis.x.show, axis.y.show or axis.y2.show is set to false:\n * then the axis will be hidden\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createAxes = function createAxes(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__.prepareHAxis)(scale, axis, config, _helpers_axis__WEBPACK_IMPORTED_MODULE_2__.prepareHorizontalAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.AXES_ORIENTATION.X.TOP);\n  canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axis, true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisX, true).attr('aria-hidden', !config.axis.x.show).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config), \", \").concat(getXAxisYPosition(config), \")\")).call(axis.x).call(_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.resetD3FontSize);\n  canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axis, true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisY, true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisYTrackLabel, true).attr('aria-hidden', !config.axis.y.show).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getYAxisXPosition)(config), \",\").concat(getXAxisYPosition(config), \")\")).call(axis.y).call(_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.resetD3FontSize);\n};\n\n/**\n * Creates a container for graph content (evident when there are no boundary ticks)\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createContentContainer = function createContentContainer(config, canvasSVG) {\n  return canvasSVG.append('rect').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].contentContainer, true).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getXAxisYPosition(config)).attr('width', getXAxisWidth(config)).attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_2__.getYAxisHeight)(config));\n};\n\n/**\n * Creates a container for gantt chart track content\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createTrackSelectionContainer = function createTrackSelectionContainer(config, canvasSVG) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ganttTrackSelectorGroup, true);\n};\n/**\n * Creates a container for gantt chart content\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createGanttContent = function createGanttContent(config, canvasSVG) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ganttChartContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\"));\n};\n/**\n * Prepares the appropriate index value for inserting the track, and scaling the graph, if the trackContent has an index.\n * If no index is provided, we return the size of the trackList to insert at the end.\n * If the index is too large than the current track length, we insert it at end. If not, we insert at the index provided.\n * If the loading index is below 0, we throw an error.\n *\n * @private\n * @param {object} scale - d3 scale\n * @param {object} config - config object derived from input JSON\n * @param {object} content - track content which needs to be loaded\n * @param {number} length - length of all tracks\n * @throws module:errors.THROW_MSG_INVALID_LOAD_CONTENT_AT_INDEX\n * @returns {number} - index where we would insert the new track content\n */\nvar prepareLoadAtIndex = function prepareLoadAtIndex(scale, config, content, length) {\n  (0,_Track__WEBPACK_IMPORTED_MODULE_10__.validateContent)(content);\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(content) && _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(content.loadAtIndex)) {\n    if (content.loadAtIndex < 0) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_INVALID_LOAD_CONTENT_AT_INDEX);\n    }\n    var index = content.loadAtIndex;\n    config.axis.y.trackList = updateTrackList(content, index, config.axis.y.trackList);\n    scaleGraph(scale, config);\n    return index;\n  }\n  config.axis.y.trackList = updateTrackList(content, length, config.axis.y.trackList);\n  return length;\n};\n/**\n * Creates a new Track instance\n *\n * @private\n * @param {object} content - input JSON for creating a track\n * @returns {Track} track instance\n */\nvar createTrack = function createTrack(content) {\n  return new _Track__WEBPACK_IMPORTED_MODULE_10__[\"default\"](content);\n};\n/**\n * Creates a container for track contents\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} trackConfig - track's config object\n * @returns {Selection} d3 svg path\n */\nvar createTrackContainer = function createTrackContainer(config, canvasSVG, trackConfig) {\n  return canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].ganttChartContent)).append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].trackGroup, true).attr('aria-labelledby', trackConfig.trackLabel.display).attr('aria-describedby', trackConfig.key);\n};\n/**\n * Removes the container for track contents\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - Unique identifier of the track.\n * @returns {Selection} - d3 svg path\n */\nvar removeTrackContainer = function removeTrackContainer(canvasSVG, key) {\n  return canvasSVG.select(\"g[aria-describedby=\\\"\".concat(key, \"\\\"]\")).remove();\n};\n\n/**\n * Checks if hashing style is available.\n *\n * @private\n * @param {object} style - all stlyings which can be applied.\n * @returns {boolean} - indicating if hashed styling can be applied.\n */\nvar isHashed = function isHashed(style) {\n  return !(_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(style) || !style.isHashed);\n};\n\n/**\n * Removes the element with provided selector using d3\n *\n * @private\n * @param {Selection|object} el - d3 selection element\n * @param {string} selector - attribute to query the element, typically a class or id\n * @param {boolean} [isBatchSelect] - enables `selectAll` rather than default `select`\n * @returns {undefined} - returns nothing\n */\nvar d3RemoveElement = function d3RemoveElement(el, selector) {\n  var isBatchSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!el) {\n    return;\n  }\n  if (isBatchSelect) {\n    el.selectAll(selector).remove();\n  } else {\n    el.select(selector).remove();\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/datapointHelpers.js":
/*!**********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/datapointHelpers.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataPointActionHandler: function() { return /* binding */ dataPointActionHandler; },\n/* harmony export */   drawDataPoints: function() { return /* binding */ drawDataPoints; },\n/* harmony export */   renderSelectionPath: function() { return /* binding */ renderSelectionPath; },\n/* harmony export */   renderSelectionPathForEvents: function() { return /* binding */ renderSelectionPathForEvents; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/shapeSVG */ \"./packages/carbon-graphs/src/js/helpers/shapeSVG.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _translateHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Renders the action items for a track. The data points provided are of ISO8601 datetime format\n * They are dependent on a unique key which needs to match the legend id's provided when initializing\n * the gantt chart.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} ganttContentContainerPath - Container for gantt chart's contents (Tracks)\n * @param {object} dataTarget - Data point values and their properties for each action item\n * @param {Function} drawDataPointsHandler - call back function to draw points with options.\n * @param {boolean} event - Data point is an event or not.\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar drawDataPoints = function drawDataPoints(scale, config, ganttContentContainerPath, dataTarget, drawDataPointsHandler, event, legendSVG) {\n  var allPointsPath = ganttContentContainerPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config), \", \").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_8__.getXAxisYPosition)(config), \")\")).attr('event', event);\n  var pointPath = allPointsPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point)).data(dataTarget);\n  if (legendSVG) {\n    drawDataPointsHandler(scale, config, pointPath.enter(), legendSVG);\n  } else {\n    drawDataPointsHandler(scale, config, pointPath.enter());\n  }\n  pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n\n/**\n * Toggles the selection of a data point, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dataPointSelection));\n  selectedPointNode.attr('aria-hidden', !(selectedPointNode.attr('aria-hidden') === 'true'));\n  return selectedPointNode;\n};\n\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      return selectedTarget.attr('aria-hidden', true);\n    }, value.key, index, value, selectedTarget);\n  });\n};\n\n/**\n * Renders the circle svg element which shows up when clicked on the data point.\n * It is hidden by default and toggled visible onClick.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {SVGElement} path - svg circle element\n * @param {object} dataPoint - data point properties such as shape, color and onClick callback function\n * @param {number} index - data point index\n * @returns {object} - d3 selection object\n */\nvar renderSelectionPath = function renderSelectionPath(scale, config, path, dataPoint, index) {\n  return path.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_5__.getSVGObject)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES.CIRCLE, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_PLOT_SELECTION_SCALE)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dataPointSelection,\n      svgStyles: '',\n      transformFn: (0,_translateHelpers__WEBPACK_IMPORTED_MODULE_9__.transformPoint)(scale, config)(dataPoint),\n      onClickFn: function onClickFn() {\n        dataPointActionHandler(dataPoint, index, this);\n      },\n      a11yAttributes: {\n        'aria-hidden': true,\n        'aria-describedby': dataPoint.key,\n        'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(dataPoint.onClick)\n      }\n    }));\n  });\n};\n\n/**\n * Renders the circle svg element for event which shows up when clicked on the data point.\n * It is hidden by default and toggled visible onClick.\n *\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {SVGElement} path - svg circle element\n * @param {object} dataPoint - data point properties such as shape, color and onClick callback function\n * @param {number} index - data point index\n * @returns {object} - d3 selection object\n */\nvar renderSelectionPathForEvents = function renderSelectionPathForEvents(scale, config, path, dataPoint, index) {\n  return path.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_5__.getSVGObjectForEvent)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES.CIRCLE, dataPoint.shape.options, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_PLOT_SELECTION_SCALE_FOR_EVENTS)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dataPointSelection,\n      svgStyles: '',\n      transformFn: (0,_translateHelpers__WEBPACK_IMPORTED_MODULE_9__.transformPoint)(scale, config)(dataPoint),\n      onClickFn: function onClickFn() {\n        dataPointActionHandler(dataPoint, index, this);\n      },\n      a11yAttributes: {\n        'aria-hidden': true,\n        'aria-describedby': dataPoint.key,\n        'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(dataPoint.onClick)\n      }\n    }));\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/datapointHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js":
/*!*********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculatePercentage: function() { return /* binding */ calculatePercentage; },\n/* harmony export */   getActivityDuration: function() { return /* binding */ getActivityDuration; },\n/* harmony export */   getActivityStyle: function() { return /* binding */ getActivityStyle; },\n/* harmony export */   getDuration: function() { return /* binding */ getDuration; },\n/* harmony export */   getEndDuration: function() { return /* binding */ getEndDuration; },\n/* harmony export */   getStartDuration: function() { return /* binding */ getStartDuration; },\n/* harmony export */   getTaskStyle: function() { return /* binding */ getTaskStyle; },\n/* harmony export */   isAChunk: function() { return /* binding */ isAChunk; }\n/* harmony export */ });\n/* harmony import */ var _helpers_barType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/barType */ \"./packages/carbon-graphs/src/js/helpers/barType.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n/**\n * Returns the appropriate bar based on the task style settings.\n * For Percentage Bar: Since we have multiple rectangle for a percentage\n * bar, we dont want to apply settings based on style property.\n * For Normal Bar and chunk, we apply the settings below in the\n * `rect` element style attribute.\n *\n * @private\n * @param {object} data - data associated to the task\n * @returns {string} A style constant\n */\nvar getTaskStyle = function getTaskStyle() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_0__.getBarStyle)(data.style, {\n    color: data.color\n  });\n};\n\n/**\n * Returns the appropriate bar based on the activity style settings.\n * For Normal Bar we apply the settings below in the\n * `rect` element style attribute.\n *\n * @private\n * @param {object} data - data associated to the task\n * @returns {string} A style constant\n */\nvar getActivityStyle = function getActivityStyle() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var color = data.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.COLORS.BLUE;\n  var currentStyle = \"fill: \".concat(color, \"; fill-opacity: \").concat(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_ACTIVITY_OPACITY, \"; stroke-width: 1px; stroke: \").concat(color);\n\n  // If style property is not provided then we use treat it as filled.\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(data.style)) {\n    return currentStyle;\n  }\n  if (data.style.isHashed === true) {\n    currentStyle = \"fill: \".concat(data.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_ACTIVITY_BAR_HASH_COLOR, \"; fill-opacity: \").concat(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_ACTIVITY_OPACITY, \";\");\n  }\n  return currentStyle;\n};\n/**\n * Executes the function sent by consumer to get the duration.\n * This duration is used to compute start or end if one of them is not provided\n *\n * @private\n * @throws {module:errors.THROW_MSG_TASKS_DURATION_NOT_FUNCTION}\n * @throws {module:errors.THROW_MSG_TASKS_DURATION_NOT_VALID}\n * @param {Function} duration - Duration function which returns a Date as a number\n * @returns {number} a datetime number\n */\nvar getDuration = function getDuration(duration) {\n  if (duration && !_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(duration)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_TASKS_DURATION_NOT_FUNCTION);\n  }\n  var durationTime = duration();\n  if (typeof durationTime !== 'number') {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_TASKS_DURATION_NOT_VALID);\n  }\n  return durationTime;\n};\n\n/**\n * Executes the function sent by consumer to get the duration.\n * This duration is used to compute start or end if one of them is not provided\n *\n * @private\n * @throws {module:errors.THROW_MSG_TASKS_DURATION_NOT_FUNCTION}\n * @throws {module:errors.THROW_MSG_TASKS_DURATION_NOT_VALID}\n * @param {Function} duration - Duration function which returns a Date as a number\n * @returns {number} a datetime number\n */\nvar getActivityDuration = function getActivityDuration(duration) {\n  if (duration && !_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(duration)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_ACTIVITIES_DURATION_NOT_FUNCTION);\n  }\n  var durationTime = duration();\n  if (typeof durationTime !== 'number') {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_ACTIVITIES_DURATION_NOT_VALID);\n  }\n  return durationTime;\n};\n/**\n * Calculates the start date using the duration provided and end datetime\n *\n * @private\n * @param {number} duration - duration date as a number\n * @param {string} start - start date string\n * @param {string} end - end date string\n * @returns {Date} start, if start datetime is provided, otherwise calculated datetime\n */\nvar getStartDuration = function getStartDuration() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var start = arguments.length > 1 ? arguments[1] : undefined;\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(start) ? _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parseDateTime(_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTime(end) - duration) : _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parseDateTime(start);\n};\n/**\n * Calculates the end date using the duration provided and start datetime\n *\n * @private\n * @param {number} duration - duration date as a number\n * @param {string} start - start date string\n * @param {string} end - end date string\n * @returns {Date} end, if end datetime is provided, otherwise calculated datetime\n */\nvar getEndDuration = function getEndDuration() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var start = arguments.length > 1 ? arguments[1] : undefined;\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(end) ? _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parseDateTime(_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTime(start) + duration) : _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].parseDateTime(end);\n};\n/**\n *\n * Checks if the bar is a chunk (Fixed width bar) or otherwise.\n * It is a chunk if the startDate and endDate is the same.\n *\n * @private\n * @param {string} start - start date string\n * @param {string} end - end date string\n * @returns {boolean} true if chunk, false otherwise\n */\nvar isAChunk = function isAChunk(start, end) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTime(end) - _helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTime(start) === 0;\n};\n/**\n * Calculates the percentage of pixels based on start and end scales.\n *\n * @private\n * @param {number} start - Start date scaled in pixels\n * @param {number} end - End date scaled in pixels\n * @param {number} percent - Percent complete\n * @returns {number} Width for the completion bar in Pixels\n */\nvar calculatePercentage = function calculatePercentage(start, end) {\n  var percent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n  return percent * (end - start) / 100;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/eventHelpers.js":
/*!******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/eventHelpers.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadEvents: function() { return /* binding */ loadEvents; },\n/* harmony export */   reflowEvents: function() { return /* binding */ reflowEvents; },\n/* harmony export */   unloadEvents: function() { return /* binding */ unloadEvents; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _GanttConfig__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../GanttConfig */ \"./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\");\n/* harmony import */ var _datapointHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./datapointHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/datapointHelpers.js\");\n/* harmony import */ var _translateHelpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Renders the data point in the provided path element.\n * It uses the consumer opted Shape, color of the data point.\n * Behavior when clicked on the data point etc.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {SVGElement} path - svg Path element\n * @param {object} dataPoint - data point properties such as shape, color and onClick callback function\n * @param {number} index - data point index\n * @returns {object} - d3 selection object\n */\nvar renderDataPointPath = function renderDataPointPath(scale, config, path, dataPoint, index) {\n  return path.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_7__.getShapeForTarget)(dataPoint)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].point,\n      svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_7__.getColorForTarget)(dataPoint), \";\"),\n      transformFn: (0,_translateHelpers__WEBPACK_IMPORTED_MODULE_10__.transformPoint)(scale, config)(dataPoint),\n      onClickFn: function onClickFn() {\n        (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.dataPointActionHandler)(dataPoint, index, this);\n      },\n      a11yAttributes: {\n        'aria-hidden': false,\n        'aria-describedby': dataPoint.key,\n        'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isFunction(dataPoint.onClick)\n      },\n      additionalAttributes: {\n        'pointer-events': dataPoint.clickPassThrough && !_helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isFunction(dataPoint.onClick)\n      }\n    }));\n  });\n};\n\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @callback drawEventDataPoints\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 html element of the canvas\n * @returns {undefined} - returns nothing\n */\nvar drawEventDataPoints = function drawEventDataPoints(scale, config, canvasSVG) {\n  canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].pointGroup, true).each(function (dataPoint, index) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isFunction(dataPoint.onClick)) {\n      (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.renderSelectionPathForEvents)(scale, config, dataPointSVG, dataPoint, index);\n    }\n    renderDataPointPath(scale, config, dataPointSVG, dataPoint, index);\n  });\n};\n\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we can\n * use them when rendering the data points of events.\n *\n * @private\n * @param {object} config - Gantt config derived from input JSON.\n * @param {object} trackLabel - Track label\n * @param {object} dataTarget  - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processEvents = function processEvents(config, trackLabel, dataTarget) {\n  var checkX = function checkX(x) {\n    if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDate(x)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].parseDateTime(x);\n  };\n  return dataTarget.values.map(function (value) {\n    return {\n      key: dataTarget.key,\n      onClick: dataTarget.onClick,\n      x: checkX(value),\n      y: trackLabel.display,\n      label: dataTarget.label,\n      color: dataTarget.color || '',\n      shape: dataTarget.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.SHAPES.CIRCLE,\n      clickPassThrough: _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.clickPassThrough) ? config.clickPassThrough.events : false\n    };\n  });\n};\n\n/**\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - input json for event.\n * @returns {object} config object containing consumer data.\n */\nvar loadEventInput = function loadEventInput(inputJSON) {\n  (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_8__.validateEvent)(inputJSON);\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(inputJSON);\n};\n\n/**\n * Update activities for the track.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} scale - d3 scale for Graph\n * @param {object} gantt - Graph config object for the content.\n * @param {object} trackGroupPath - Container for the track\n * @returns {undefined} - returns nothing\n */\nvar reflowEvents = function reflowEvents(config, scale, gantt, trackGroupPath) {\n  gantt.config.events.forEach(function (event) {\n    (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_8__.validateEvent)(event);\n  });\n  trackGroupPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].currentPointsGroup, \"[event=\\\"true\\\"]\")).remove();\n  gantt.config.events.forEach(function (event) {\n    (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.drawDataPoints)(scale, config, trackGroupPath, processEvents(config, gantt.config.trackLabel, loadEventInput(event)), drawEventDataPoints, true);\n  });\n};\n\n/**\n * Creates an element container with data points from the input JSON property: events\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @param {object} trackLabel - Track label\n * @param {Array} gantt - input config for creating events\n * @returns {undefined} - returns nothing\n */\nvar loadEvents = function loadEvents(graphContext, trackPathSVG, trackLabel, gantt) {\n  gantt.events.forEach(function (event, i) {\n    (0,_datapointHelpers__WEBPACK_IMPORTED_MODULE_9__.drawDataPoints)(graphContext.scale, graphContext.config, trackPathSVG, processEvents(graphContext.config, trackLabel, loadEventInput(event)), drawEventDataPoints, true);\n    gantt.eventKeys.splice(i, 0, event.key);\n  });\n};\n\n/**\n * Selects all the event groups from the track and removes them\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @returns {Selection} - track container element\n */\nvar unloadEvents = function unloadEvents(graphContext, trackPathSVG) {\n  return trackPathSVG.selectAll(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].currentPointsGroup)).remove();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/eventHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/taskHelpers.js":
/*!*****************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/taskHelpers.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatorArgs: function() { return /* binding */ generatorArgs; },\n/* harmony export */   loadTasks: function() { return /* binding */ loadTasks; },\n/* harmony export */   processTask: function() { return /* binding */ processTask; },\n/* harmony export */   reflowTasks: function() { return /* binding */ reflowTasks; },\n/* harmony export */   renderHashedTaskGroup: function() { return /* binding */ renderHashedTaskGroup; },\n/* harmony export */   renderPercentageBarGroup: function() { return /* binding */ renderPercentageBarGroup; },\n/* harmony export */   renderSelectionIndicator: function() { return /* binding */ renderSelectionIndicator; },\n/* harmony export */   renderTaskGroup: function() { return /* binding */ renderTaskGroup; },\n/* harmony export */   unloadTasks: function() { return /* binding */ unloadTasks; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_barType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/barType */ \"./packages/carbon-graphs/src/js/helpers/barType.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _GanttConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../GanttConfig */ \"./packages/carbon-graphs/src/js/controls/Gantt/GanttConfig.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _durationHelpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./durationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Toggles the selection of a task, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the task clicked\n * @returns {Array} d3 html element of the task\n */\nvar toggleTaskSelection = function toggleTaskSelection(target) {\n  var taskNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target);\n  var selectionTaskNode = taskNode.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskBarSelection));\n  taskNode.attr('aria-selected', !(taskNode.attr('aria-selected') === 'true'));\n  selectionTaskNode.attr('aria-hidden', !(selectionTaskNode.attr('aria-hidden') === 'true'));\n  return taskNode;\n};\n/**\n * Handler for a task click action. If the content property is present for the task\n * then the callback is executed other wise it is NOP.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar taskClickActionHandler = function taskClickActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleTaskSelection(target).call(function (d3TargetNode) {\n    return value.onClick(function () {\n      var d3SelectionNode = d3TargetNode.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskBarSelection));\n      d3SelectionNode.attr('aria-hidden', !(d3SelectionNode.attr('aria-hidden') === 'true'));\n      d3TargetNode.attr('aria-selected', false);\n    }, value.key, index, value, d3TargetNode);\n  });\n};\n\n/**\n * Processes the input for a task and converts to an object needed to render a bar\n * Duration is a function that is needed to compute Start or end. If both start and end\n * are present then the duration will be ignored.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} trackLabel -Track label\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processTask = function processTask(graphConfig, trackLabel, dataTarget) {\n  var duration = dataTarget.duration ? (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getDuration)(dataTarget.duration) : 0;\n  return {\n    onClick: dataTarget.onClick,\n    y: trackLabel.display,\n    startDate: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getStartDuration)(duration, dataTarget.startDate, dataTarget.endDate),\n    endDate: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getEndDuration)(duration, dataTarget.startDate, dataTarget.endDate),\n    percentage: dataTarget.percentage,\n    dependencies: dataTarget.dependencies,\n    color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__.COLORS.BLUE,\n    label: dataTarget.label || null,\n    key: dataTarget.key,\n    style: (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.getTaskStyle)(dataTarget),\n    isHashed: (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_7__.isHashed)(dataTarget.style),\n    clickPassThrough: _helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isDefined(graphConfig.clickPassThrough) ? graphConfig.clickPassThrough.tasks : false\n  };\n};\n/**\n * Generates arguments for creating task rectangles\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} taskData - Current task data\n * @param {Selection} taskPath - d3 task bar selection element\n * @returns {object} List of arguments - target element, x, y, width, height\n */\nvar generatorArgs = function generatorArgs(scale, taskData, taskPath) {\n  return {\n    path: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(taskPath),\n    x: scale.x(taskData.startDate),\n    y: scale.y(taskData.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TASK_PADDING.top,\n    width: scale.x(taskData.endDate) - scale.x(taskData.startDate) || _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH,\n    height: _helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_GANTT_TASK_HEIGHT\n  };\n};\n/**\n * Renders the selection indicator for a task bar. Its hidden by default, displays when\n * a task is clicked\n *\n * @private\n * @param {object} indicatorArgs - arguments needed for generating rect for selection indicator\n * @returns {undefined} - returns nothing\n */\nvar renderSelectionIndicator = function renderSelectionIndicator(indicatorArgs) {\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getRect)(indicatorArgs.path, indicatorArgs.x, indicatorArgs.y, indicatorArgs.width, indicatorArgs.height).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskBarSelection, true).attr('rx', 3).attr('ry', 3).attr('aria-hidden', true);\n};\n/**\n * Renders the percentage bar group for the task. This consists of\n * * Percentage bar\n * * Selection indicator for the percentage Bar\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} taskData - Current task data\n * @param {number} index - Current task data index\n * @param {Selection} taskPath - d3 task bar selection element\n * @returns {undefined} - returns nothing\n */\nvar renderPercentageBarGroup = function renderPercentageBarGroup(scale, taskData, index, taskPath) {\n  var args = generatorArgs(scale, taskData, taskPath);\n  // Create Percentage Task\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getPercentageBar)(args.path, args.x, args.y, args.width, args.height, (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.calculatePercentage)(scale.x(taskData.startDate), scale.x(taskData.endDate), taskData.percentage), taskData.color).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(taskData.onClick)).attr('pointer-events', function () {\n    return taskData.clickPassThrough && !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(taskData.onClick) ? 'none' : 'auto';\n  }).on('click', function () {\n    return taskClickActionHandler(taskData, index, taskPath);\n  });\n};\n/**\n * Based on startDate and endDate, we either render a chunk or a normal bar.\n * If the startDate and endDate is same, render a Chunk with 5px width\n * else render a normal bar with width based on start and end parameters provided.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} taskData - Current task data\n * @param {number} index - Current task data index\n * @param {Selection} taskPath - d3 task bar selection element\n * @returns {undefined} - returns nothing\n */\nvar renderTaskGroup = function renderTaskGroup(scale, taskData, index, taskPath) {\n  var args = generatorArgs(scale, taskData, taskPath);\n  ((0,_durationHelpers__WEBPACK_IMPORTED_MODULE_8__.isAChunk)(taskData.startDate, taskData.endDate) ? _helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getChunk : _helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getBar)(args.path, args.x, args.y, args.width, args.height, taskData.style).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(taskData.onClick)).attr('pointer-events', function () {\n    return taskData.clickPassThrough && !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(taskData.onClick) ? 'none' : 'auto';\n  }).on('click', function () {\n    return taskClickActionHandler(taskData, index, taskPath);\n  });\n};\n\n/**\n * Based on startDate and endDate, we render a hashed bar.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} scale - d3 scale for Graph\n * @param {object} data - Current activity data\n * @param {number} index - Current task data index\n * @param {Selection} path - d3 activity bar selection element\n * @returns {undefined} - returns nothing\n */\nvar renderHashedTaskGroup = function renderHashedTaskGroup(canvasSVG, scale, data, index, path) {\n  var args = generatorArgs(scale, data, path);\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_2__.getHashedBar)(canvasSVG, canvasSVG.select('defs'), args.path, args.x, args.y, args.width, args.height, data.style).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(data.onClick)).attr('pointer-events', function () {\n    return data.clickPassThrough && !_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isFunction(data.onClick) ? 'none' : 'auto';\n  }).on('click', function () {\n    return taskClickActionHandler(data, index, path);\n  });\n};\n\n/**\n * Renders the tasks for a track. Each task is created based on start and end datetime.\n * Values needs to be in ISO8601 datetime format, along with the unique key for each task.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} trackLabel - Track label\n * @param {object} taskGroupPath - Container for all the tasks\n * @param {Array} tasks - Tasks list\n * @returns {undefined} - returns nothing\n */\nvar drawTasks = function drawTasks(canvasSVG, scale, config, trackLabel, taskGroupPath, tasks) {\n  var taskPath = taskGroupPath.selectAll('g').data(tasks.map(function (a) {\n    return processTask(config, trackLabel, _helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].deepClone(a));\n  }));\n  taskPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].task, true).attr('aria-selected', false).attr('aria-describedby', function (d) {\n    return d.key;\n  }).each(function (d, i) {\n    // Create Selection indicator for Task\n    var args = generatorArgs(scale, d, this);\n    renderSelectionIndicator(args);\n    if (d.percentage) {\n      renderPercentageBarGroup(scale, d, i, this);\n    } else if (d.isHashed) {\n      renderHashedTaskGroup(canvasSVG, scale, d, i, this);\n    } else {\n      renderTaskGroup(scale, d, i, this);\n    }\n  });\n  taskPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n\n/**\n * Update tasks for the track.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} scale - d3 scale for Graph\n * @param {object} gantt - Graph config object for the content.\n * @param {object} trackGroupPath - Container for the track\n * @returns {undefined} - returns nothing\n */\nvar reflowTasks = function reflowTasks(canvasSVG, config, scale, gantt, trackGroupPath) {\n  gantt.config.tasks.forEach(function (a) {\n    (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_6__.validateTask)(a);\n  });\n  var taskPath = trackGroupPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskGroup));\n  taskPath.selectAll('g').remove();\n  drawTasks(canvasSVG, scale, config, gantt.config.trackLabel, taskPath, gantt.config.tasks);\n};\n\n/**\n * Creates an element container with data points from the input JSON property: tasks\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @param {object} trackLabel - Track label\n * @param {Array} gantt - input config for creating tasks\n * @returns {undefined} - returns nothing\n */\nvar loadTasks = function loadTasks(graphContext, trackPathSVG, trackLabel, gantt) {\n  var taskGroupPath = trackPathSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getXAxisXPosition)(graphContext.config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_7__.getXAxisYPosition)(graphContext.config), \")\"));\n  gantt.tasks.forEach(function (a, i) {\n    (0,_GanttConfig__WEBPACK_IMPORTED_MODULE_6__.validateTask)(a);\n    gantt.taskKeys.splice(i, 0, a.key);\n  });\n  drawTasks(graphContext.svg, graphContext.scale, graphContext.config, trackLabel, taskGroupPath, gantt.tasks);\n};\n/**\n * Selects the task group from the track and removes them\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPathSVG - Track container element\n * @returns {Selection} - track container element\n */\nvar unloadTasks = function unloadTasks(graphContext, trackPathSVG) {\n  return trackPathSVG.select(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_4__[\"default\"].taskGroup)).remove();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/taskHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/trackHelpers.js":
/*!******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/trackHelpers.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatorArgs: function() { return /* binding */ generatorArgs; },\n/* harmony export */   loadGanttTrackSelector: function() { return /* binding */ loadGanttTrackSelector; },\n/* harmony export */   unloadGanttTrackSelector: function() { return /* binding */ unloadGanttTrackSelector; }\n/* harmony export */ });\n/* harmony import */ var _helpers_barType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/barType */ \"./packages/carbon-graphs/src/js/helpers/barType.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n\n\n\n\n\n\n\n\n/**\n * Generates arguments for creating track rectangles\n *\n * @private\n * @param {object} config - config object derived from input JSON.\n * @param {object} scale - d3 scale for Graph\n * @param {Selection} ganttSelectorGroupPath - d3 track bar selection element\n * @param {object} trackConfig - config for the track\n * @returns {object} List of arguments - target element, x, y, width, height\n */\nvar generatorArgs = function generatorArgs(config, scale, ganttSelectorGroupPath, trackConfig) {\n  return {\n    path: ganttSelectorGroupPath,\n    x: _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_TRACK_SELECTION.x,\n    y: scale.y(trackConfig.trackLabel.display) + _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_TRACK_SELECTION.y,\n    width: (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_4__.getXAxisWidth)(config) - _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_TRACK_SELECTION.width,\n    height: config.axis.y.trackList[trackConfig.key].trackHeight - _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_GANTT_TRACK_SELECTION.height\n  };\n};\n\n/**\n * Toggles the selection of a track, executes on click of a track.\n *\n * @private\n * @param {object} target - DOM element of the track clicked\n * @param {string} key - track key\n * @returns {Array} d3 html element of the track.\n */\nvar toggleTrackSelection = function toggleTrackSelection(target, key) {\n  var selectionTrackNode = target.select(\"[aria-describedby='\".concat(key, \"']\"));\n  selectionTrackNode.attr('aria-selected', !(selectionTrackNode.attr('aria-selected') === 'true'));\n  return selectionTrackNode;\n};\n\n/**\n * Handler for a track click action. If the content property is present for the track\n * then the callback is executed other wise it is NOP.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} path - DOM object of the  clicked track.\n * @param {object} trackConfig - Config of the track derived from\n * @returns {undefined} - returns nothing\n */\nvar trackClickActionHandler = function trackClickActionHandler(path, trackConfig) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(trackConfig.onClick)) {\n    return;\n  }\n  toggleTrackSelection(path, trackConfig.key).call(function (d3TargetNode) {\n    return trackConfig.onClick(function () {\n      var isSelected = d3TargetNode.attr('aria-selected') === 'true';\n      d3TargetNode.attr('aria-selected', !isSelected);\n    }, trackConfig.key, trackConfig, d3TargetNode);\n  });\n};\n\n/**\n * Renders the selection indicator for a track bar.\n *\n * @private\n * @param {object} indicatorArgs - arguments needed for generating rect for selection indicator\n * @param {object} trackConfig - config dervied from input track JSON.\n * @returns {undefined} - returns nothing\n */\nvar renderSelectionIndicator = function renderSelectionIndicator(indicatorArgs, trackConfig) {\n  (0,_helpers_barType__WEBPACK_IMPORTED_MODULE_0__.getRect)(indicatorArgs.path, indicatorArgs.x, indicatorArgs.y, indicatorArgs.width, indicatorArgs.height).attr('aria-selected', false).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ganttTrackBarSelection, true).attr('aria-describedby', trackConfig.key).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(trackConfig.onClick)).on('click', function () {\n    return trackClickActionHandler(indicatorArgs.path, trackConfig);\n  });\n};\n\n/**\n * Creates a container for gantt chart content\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPath - Track container element\n * @param {object} trackConfig - track's config object\n * @returns {undefined} - returns nothing\n */\nvar loadGanttTrackSelector = function loadGanttTrackSelector(graphContext, trackPath, trackConfig) {\n  var ganttTrackSelectorGroupPath = trackPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ganttTrackSelectorGroup, true).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(graphContext.config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_4__.getXAxisYPosition)(graphContext.config), \")\"));\n  renderSelectionIndicator(generatorArgs(graphContext.config, graphContext.scale, ganttTrackSelectorGroupPath, trackConfig), trackConfig);\n};\n\n/**\n * Selects the trackSelector group and removes them\n *\n * @private\n * @param {object} graphContext - Gantt instance\n * @param {object} trackPath - Track container element\n * @returns {Selection} - track container element\n */\nvar unloadGanttTrackSelector = function unloadGanttTrackSelector(graphContext, trackPath) {\n  return trackPath.select(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ganttTrackSelectorGroup)).remove();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/trackHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js":
/*!**********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translateActivities: function() { return /* binding */ translateActivities; },\n/* harmony export */   translateAxes: function() { return /* binding */ translateAxes; },\n/* harmony export */   translateDataPoints: function() { return /* binding */ translateDataPoints; },\n/* harmony export */   translateGraph: function() { return /* binding */ translateGraph; },\n/* harmony export */   translateHorizontalGrid: function() { return /* binding */ translateHorizontalGrid; },\n/* harmony export */   translateLabelText: function() { return /* binding */ translateLabelText; },\n/* harmony export */   translateTasks: function() { return /* binding */ translateTasks; },\n/* harmony export */   translateTrackSelector: function() { return /* binding */ translateTrackSelector; },\n/* harmony export */   translateVerticalGrid: function() { return /* binding */ translateVerticalGrid; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/datetimeBuckets */ \"./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/creationHelpers.js\");\n/* harmony import */ var _durationHelpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./durationHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/durationHelpers.js\");\n/* harmony import */ var _trackHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./trackHelpers */ \"./packages/carbon-graphs/src/js/controls/Gantt/helpers/trackHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar TRACK_LABEL_TEXT_CLASS = \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisYTrackLabel, \" .tick text\");\n/**\n * Returns the track label position in D3 scale's domain\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {string} yVal - Current track label\n * @returns {number} Track label index\n */\nvar getLabelIndexFromDomain = function getLabelIndexFromDomain(scale, yVal) {\n  return scale.y.domain().indexOf(yVal);\n};\n/**\n *\n * Validates track label to get the Y Co-ordinate before figuring out the translation\n * Cases include:\n * When TrackLabel is not present in the domain\n * When TrackList is empty i.e. No content is loaded yet\n * When domain has more items than trackList. i.e. This is a result of using transition\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {string} yVal - Current track label\n * @param {number} index - label index in domain\n * @returns {boolean} true if y co-ordinate transform translate is not needed, false otherwise\n */\nvar isTrackLabelOutsideDomain = function isTrackLabelOutsideDomain(scale, config, yVal, index) {\n  return index < 0 || _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(config.axis.y.trackList) || scale.y.domain().length > Object.keys(config.axis.y.trackList).length;\n};\n/**\n * Returns the Y co-ordinate translate value for Y axis transform based on its domain. Since the\n * Y Axis for gantt is a text and not conventional number system. We need to\n * Calculate the pixel region for that label and get the current d3 range value.\n *\n * @private\n * @description Use this to move the contents to the center of the track\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {string} yVal - Current track label\n * @returns {number} y co-ordinate transform translate\n */\nvar getTransformYCoordinate = function getTransformYCoordinate(scale, config, yVal) {\n  var index = getLabelIndexFromDomain(scale, yVal);\n  if (!scale || isTrackLabelOutsideDomain(scale, config, yVal, index)) {\n    return 0;\n  }\n  var getCurrentTrackHeightList = function getCurrentTrackHeightList(trackList) {\n    return Object.keys(trackList).map(function (o) {\n      return trackList[o].trackHeight;\n    });\n  };\n  var currentHeight = getCurrentTrackHeightList(config.axis.y.trackList);\n  return currentHeight[index] / 2;\n};\n/**\n * Returns the X co-ordinate translate value for Y axis transform based on its scale\n *\n * @private\n * @param {object} [scale] - d3 scale for Graph\n * @param {string} [xVal] - current x Axis date value\n * @returns {number} x co-ordinate transform translate\n */\nvar getTransformXCoordinate = function getTransformXCoordinate(scale, xVal) {\n  return !scale ? 0 : scale.x(xVal);\n};\n/**\n * Uses the scale to move track content to the correct track position and center it relative to the track\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {string} yVal - Current track label\n * @returns {number} y co-ordinate transform translate\n */\nvar getTransformYCoordinateWithScale = function getTransformYCoordinateWithScale(scale, config, yVal) {\n  var offset = !scale ? 0 : scale.y(yVal);\n  var yPosBasedOnHeight = getTransformYCoordinate(scale, config, yVal);\n  return offset + yPosBasedOnHeight;\n};\n/**\n * Returns the Transform string for a given d3 domain. This can be used to translate the\n * graph/track elements\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {function(*=): string} Transform property of translate\n */\nvar getTrackLabelTransformProperty = function getTrackLabelTransformProperty(scale, config) {\n  return function (trackName) {\n    return \"translate(\".concat(getTransformXCoordinate(), \", \").concat(getTransformYCoordinate(scale, config, trackName), \")\");\n  };\n};\n/**\n * Updates clipPath rectangle width and height on resize.\n * `clipPath` updates are necessary since the clip-path URL needs to get\n * the necessary parameters on resize so that data points are not cut off\n *\n * @description\n * Calling getDatelineIndicatorHeight() will trigger a page reflow and resizing the page might cause Layout Thrashing.\n * We understand this and deem it necessary to calculate the indicator height when a new dataset/set of contents are loaded during Panning.\n * Furthermore, this function is called only when panning is enabled and there is a dateline defs element is present.\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateDefs = function translateDefs(config, canvasSVG) {\n  canvasSVG.select(\"clipPath#\".concat(config.clipPathId)).selectAll('rect').attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisHeight)(config)).attr('width', (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisWidth)(config));\n  if (config.settingsDictionary.shouldCreateDatelineDefs && config.dateline.length > 0) {\n    var datelineIndicatorHeight = Math.floor((0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_3__.getDatelineIndicatorHeight)() / 2);\n    canvasSVG.select(\"clipPath#\".concat(config.datelineClipPathId)).selectAll('rect').attr('height', config.height + datelineIndicatorHeight).attr('width', (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisWidth)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Y_AXIS, (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getYAxisYPosition)(config) - datelineIndicatorHeight);\n  }\n};\n/**\n * Updates the x, y and y2 (if enabled) positions on resize\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateAxes = function translateAxes(axis, scale, config, canvasSVG) {\n  (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getAxesScale)(axis, scale, config);\n  (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__.prepareHAxis)(scale, axis, config, _helpers_axis__WEBPACK_IMPORTED_MODULE_1__.prepareHorizontalAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.AXES_ORIENTATION.X.TOP);\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisX)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisXPosition)(config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisYPosition)(config), \")\")).call(axis.x);\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisY)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisXPosition)(config), \", \").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getYAxisYPosition)(config), \")\")).call(axis.y);\n};\n\n/**\n * Translates the vertical grid on the canvas, grids are only applicable to standard\n * X and Y Axis.\n * We decide using the ticks that are present in the X Axis and have the grid lines for every tick except the bounds.\n * When we resize, the ticks change based on the container real estate and we add/remove the grids respectively.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 svg path\n */\nvar translateVerticalGrid = function translateVerticalGrid(axis, config) {\n  var xAxisGrid;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(config.axis.x.ticks.values)) {\n    var ticks = config.axis.x.ticks.values;\n    xAxisGrid = axis.x.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.processTickValues)(ticks)).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisHeight)(config) * -1, 0, 0).tickFormat('');\n  } else {\n    xAxisGrid = axis.x.tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisHeight)(config) * -1, 0, 0).tickFormat('');\n  }\n  return xAxisGrid;\n};\n/**\n * Translates the horizontal grid on the canvas, grids are only applicable to standard\n * X and Y Axis.\n * We decide using the ticks that are present in the Y Axis and have the grid lines for every tick except the bounds.\n * When we resize, the ticks change based on the container real estate and we add/remove the grids respectively.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 svg path\n */\nvar translateHorizontalGrid = function translateHorizontalGrid(axis, config) {\n  return axis.y.tickSize((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisWidth)(config) * -1, 0, 0).tickFormat('');\n};\n\n/**\n * Function to create the vertical-grid with a specific style and config.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} axis - Axis scaled according to input parameters\n * @param {string} style - Style with which, grid needs to be created.\n * @param {object} config - config required for translating vertical grid.\n * @returns {undefined} - Doesn't return anything.\n */\nvar translateVGridHandler = function translateVGridHandler(canvasSVG, axis, style, config) {\n  canvasSVG.select(\".\".concat(style)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).call(translateVerticalGrid(axis, config));\n};\n\n/**\n * Updates the horizontal and vertical grid sizes/positions on resize\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateGrid = function translateGrid(axis, scale, config, canvasSVG) {\n  (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getAxesScale)(axis, scale, config);\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].grid)).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisXPosition)(config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisYPosition)(config), \")\"));\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].gridH)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).call(translateHorizontalGrid(axis, config));\n  (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_4__.translateVGrid)(canvasSVG, axis, config, translateVGridHandler);\n};\n\n/**\n * Translates the rectangle which forms the container for graph content\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar translateContentContainer = function translateContentContainer(config, canvasSVG) {\n  return canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].contentContainer)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('width', (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getXAxisWidth)(config)).attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisHeight)(config));\n};\n/**\n * Translates label to center of each track. Normally a tick text is aligned to the grid/tick,\n * but we want to move it to the center position to better associate it to the track.\n * We take the domain and range, calculate the index of the current text data in the domain and then use\n * the range value to get the pixel position of the tick.\n * With the current position and previous tick position, we can find out the middle area for\n * repositioning the text.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateLabelText = function translateLabelText(scale, config, canvasSVG) {\n  return canvasSVG.selectAll(TRACK_LABEL_TEXT_CLASS).attr('transform', getTrackLabelTransformProperty(scale, config));\n};\n/**\n * Transforms the point in the gantt graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @returns {Function} - translate string for d3 transform function\n */\nvar transformPoint = function transformPoint(scale, config) {\n  return function (value) {\n    return function (scaleFactor) {\n      return \"translate(\".concat(getTransformXCoordinate(scale, value.x), \",\").concat(getTransformYCoordinateWithScale(scale, config, value.y), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms points for a data point set in the gantt graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {Array} trackPath - d3 object of track element\n * @param {string} style - CSS style representing the data points\n * @returns {object} d3 select object\n */\nvar translatePoints = function translatePoints(scale, config, trackPath, style) {\n  return trackPath.selectAll(style).each(function (d) {\n    var pointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    pointSVG.select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPoint(scale, config)(d)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_7__.getTransformScale)(this));\n    });\n  });\n};\n/**\n * Translates graph based on the current positioning on resize. We\n * don't need to resize the entire graph, in our case we just need to transform:\n *  The canvas height and width\n *  The axes x and y co-ordinates\n *  The grid x and y co-ordinates\n *  The labels x and y co-ordinates\n *\n *  @private\n *  @param {object} control - Graph instance\n *  @returns {undefined} - returns nothing\n */\nvar translateGraph = function translateGraph(control) {\n  (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.translateCanvas)(control.config, control.svg);\n  translateDefs(control.config, control.svg);\n  translateAxes(control.axis, control.scale, control.config, control.svg);\n  translateGrid(control.axis, control.scale, control.config, control.svg);\n  translateContentContainer(control.config, control.svg);\n  (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_3__.translateDateline)(control.scale, control.config, control.svg, _creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getYAxisYPosition);\n  (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_5__.translateEventline)(control.scale, control.config, control.svg, _creationHelpers__WEBPACK_IMPORTED_MODULE_10__.getYAxisYPosition);\n};\n/**\n * Called on resize, translates the data point values.\n * This includes:\n *  Points\n *  Selected point indicators\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {Array} trackPath - d3 object of track\n * @returns {undefined} - returns nothing\n */\nvar translateDataPoints = function translateDataPoints(scale, config, trackPath) {\n  translatePoints(scale, config, trackPath, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].point));\n  translatePoints(scale, config, trackPath, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dataPointSelection));\n};\n/**\n * Translates task bars when resized.\n *\n * @description When translating the width of a bar:\n * If its a percentage bar then we would need to translate multiple bars\n * Since we have 2 rectangles in a percentage bar, one which shows how much percentage\n * has been finished and the other is the total length of the task time taken, we would need\n * to process this separately based on the style.\n * The Completion Bar will need to be translated based on the percentage provided,\n * however the other bar will be subjected to normal translation.\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {Selection} path - d3 object of track\n * @param {object} config - graph config needed for panning feature\n * @returns {undefined} - returns nothing\n */\nvar translateTaskBar = function translateTaskBar(scale, path, config) {\n  return path.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', function (val) {\n    return scale.x(val.startDate);\n  }).attr('y', function (val) {\n    return scale.y(val.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_PADDING.top;\n  }).attr('width', function (val) {\n    if (val.percentage) {\n      return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].taskBarCompletion) ? (0,_durationHelpers__WEBPACK_IMPORTED_MODULE_11__.calculatePercentage)(scale.x(val.startDate), scale.x(val.endDate), val.percentage) : scale.x(val.endDate) - scale.x(val.startDate);\n    }\n    // Otherwise, its either a chunk or bar\n    return scale.x(val.endDate) - scale.x(val.startDate) || _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH;\n  });\n};\n/**\n * Translates activity bars when resized.\n *\n * @description When translating the width of a bar:\n * Bar will be subjected to normal translation.\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {Selection} path - d3 object of track\n * @param {object} config - graph config needed for panning feature\n * @returns {undefined} - returns nothing\n */\nvar translateActivityBar = function translateActivityBar(scale, path, config) {\n  return path.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', function (val) {\n    return scale.x(val.startDate);\n  }).attr('y', function (val) {\n    return scale.y(val.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_ACTIVITY_PADDING.top;\n  }).attr('width', function (val) {\n    return scale.x(val.endDate) - scale.x(val.startDate) || _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_ACTIVITY_CHUNK_WIDTH;\n  });\n};\n/**\n * Translates task selection indicators when resized.\n * This is also called on initial creation, sets the positioning for\n * x, y, width and height attributes based on current task bar positioning.\n * If the current task is from Unit 3 to Unit 7 then we position the selection\n * indicator from 3 to 7 and add some padding to the indicator so that it provides\n * an illusion of enclosing the task\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {Selection} path - d3 object of track\n * @param {object} config - graph config needed for panning feature\n * @returns {undefined} - returns nothing\n */\nvar translateTaskIndicator = function translateTaskIndicator(scale, path, config) {\n  var padding = Math.floor(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_SELECTION_PADDING / 2);\n  var positionAdjustment = Math.floor(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_SELECTION_PADDING / 4);\n  path.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', function (val) {\n    return scale.x(val.startDate) - positionAdjustment;\n  }).attr('y', function (val) {\n    return scale.y(val.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_PADDING.top - positionAdjustment;\n  }).attr('width', function (val) {\n    return (scale.x(val.endDate) - scale.x(val.startDate) || _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH) + padding;\n  }).attr('height', _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_GANTT_TASK_HEIGHT + padding);\n};\n/**\n * Translates tasks based on container width.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {Selection} trackPath - d3 object of track\n * @returns {Selection} - d3 Track selection\n */\nvar translateTasks = function translateTasks(scale, config, trackPath) {\n  return trackPath.selectAll(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].task)).selectAll('rect').each(function () {\n    var path = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    if (path.classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].taskBarSelection)) {\n      translateTaskIndicator(scale, path, config);\n    } else {\n      translateTaskBar(scale, path, config);\n    }\n  });\n};\n/**\n * Translates track selector based on container width.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - base config derived from input JSON.\n * @param {object} trackPathSVG - Track container element\n * @param {object} trackConfig - config derived from input track JSON.\n * @returns {undefined} - returns nothing.\n */\nvar translateTrackSelector = function translateTrackSelector(scale, config, trackPathSVG, trackConfig) {\n  var ganttTrackSelectorGroupPath = trackPathSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].ganttTrackSelectorGroup));\n  ganttTrackSelectorGroupPath.select('rect').each(function () {\n    var path = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    var args = (0,_trackHelpers__WEBPACK_IMPORTED_MODULE_12__.generatorArgs)(config, scale, path, trackConfig);\n    path.transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('y', args.y).attr('width', args.width).attr('height', args.height);\n  });\n};\n/**\n * Translates activities based on container width.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {Selection} trackPath - d3 object of track\n * @returns {Selection} - d3 Track selection\n */\nvar translateActivities = function translateActivities(scale, config, trackPath) {\n  return trackPath.selectAll(\"g.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].activity)).selectAll(\"rect.\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].activityBar)).each(function () {\n    translateActivityBar(scale, _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), config);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/helpers/translateHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Gantt/index.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Gantt/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Gantt__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Gantt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Gantt */ \"./packages/carbon-graphs/src/js/controls/Gantt/Gantt.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9HYW50dC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvbnRyb2xzL0dhbnR0L2luZGV4LmpzPzQzOTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbnR0IGZyb20gJy4vR2FudHQnO1xuXG5leHBvcnQgeyBHYW50dCBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiR2FudHQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Gantt/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Graph/Graph.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Graph/Graph.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Construct__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Construct */ \"./packages/carbon-graphs/src/js/core/Construct/index.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _GraphConfig__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./GraphConfig */ \"./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../helpers/paddingUtils */ \"./packages/carbon-graphs/src/js/helpers/paddingUtils.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Graph\n * @typedef {object} GraphConfig\n */\n\nvar BASE_CANVAS_WIDTH_PADDING = _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].BASE_CANVAS_WIDTH_PADDING;\n/**\n * Sets the canvas width\n *\n * @private\n * @param {HTMLElement} container - d3 HTML element object which forms the chart container\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasWidth = function setCanvasWidth(container, config) {\n  config.canvasWidth = parseInt(container.style('width'), 10) - (0,_helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(container);\n};\n\n/**\n * Sets the canvas width. Canvas rests within a container.\n * On resize, the canvas is subjected to resizing but its sibling: Legend isn't.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasHeight = function setCanvasHeight(config) {\n  // Increase the canvas height only when either the x-axis label is specified\n  // and showLabel is set to true or x-axis show is set to true\n  if (config.showLabel && !!config.axis.x.label || config.axis.x.show) {\n    config.canvasHeight = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getYAxisHeight)(config) + (config.padding.bottom + config.padding.top + config.axisLabelHeights.x) * 2;\n  } else {\n    config.canvasHeight = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getYAxisHeight)(config) + config.padding.bottom + config.padding.top + config.axisLabelHeights.x;\n  }\n};\n/**\n * Checks if the min max range of the values have changed or otherwise\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {string} yAxis - y or y2\n * @returns {boolean} true if min-max range changed\n */\nvar isRangeModified = function isRangeModified(config) {\n  var yAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Y_AXIS;\n  return config.axis[yAxis].dataRange.isRangeModified;\n};\n\n/**\n * Executes the before init process checklist, needs to be called by parent control.\n *  Binds the chart id provided in the input JSON to graph container.\n *  Calculates the axes data ranges.\n *  Updates the axes domains.\n *  Creates tooltip for the label popup.\n *\n * @private\n * @param {Graph} control - Graph instance\n * @returns {Graph} Graph instance\n */\nvar beforeInit = function beforeInit(control) {\n  control.graphContainer = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(control.config.bindTo);\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)({}, '', control.config);\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isDefined(control.config.axis.x.allowCalibration) && control.config.axis.x.allowCalibration) {\n    console.warn('allowCalibration for x-axis is a new feature that is currently a work in progress and may have stability issues. Use it at your own risk.');\n    (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)({}, _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].X_AXIS, control.config);\n  }\n  var isInvalidTickLabelRotations = !_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isDefined(control.config.axis.x.ticks.tickLabelsRotation) || !_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].validTickLabelRotations.has(control.config.axis.x.ticks.tickLabelsRotation);\n  if (isInvalidTickLabelRotations) {\n    control.config.axis.x.ticks.tickLabelsRotation = 0;\n    console.warn(\"\".concat(control.config.axis.x.ticks.tickLabelsRotation, \" is an invalid value for tickLabelsRotation. Valid values are: 0, -45. Resorting to the default value of 0\"));\n  }\n  (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(control.config);\n  (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateXAxisDomain)(control.config);\n  (0,_helpers_label__WEBPACK_IMPORTED_MODULE_13__.createTooltipDiv)();\n  return control;\n};\n\n/**\n * Initializes the necessary Graph constructor objects\n *\n * @private\n * @param {Graph} control - Graph instance\n * @returns {Graph} Graph instance\n */\nvar initConfig = function initConfig(control) {\n  control.graphContainer = null;\n  control.config = {\n    axis: {\n      x: {},\n      y: {},\n      y2: {}\n    },\n    shownTargets: {},\n    dateline: [],\n    eventline: [],\n    pan: {}\n  };\n  control.axis = {\n    axisInfoRow: {\n      x: {}\n    }\n  };\n  control.scale = {};\n  control.svg = null;\n  control.legendSVG = null;\n  control.axesLabelShapeGroup = {};\n  control.content = [];\n  control.contentConfig = [];\n  control.contentKeys = [];\n  control.resizeHandler = null;\n  return control;\n};\n\n/**\n * Executes the init process checklist, needs to be called by parent control.\n * Needs to be called post calling beforeInit\n *  Sets the canvas width within the graph container\n *  Determines the height for canvas\n *  Calculates Axes width and height\n *  Calculates Axes label width and height, positioning\n *  Creates and sets the d3 scale for the Graph\n *\n * @private\n * @param {Graph} control - Graph instance\n * @returns {Graph} Graph instance\n */\nvar init = function init(control) {\n  control.config.height = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.determineHeight)(control.config, control.config.dimension);\n  setCanvasWidth(control.graphContainer, control.config);\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.calculateAxesSize)(control.config);\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.calculateAxesLabelSize)(control.config);\n  setCanvasHeight(control.config);\n  (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(control.scale, control.config);\n  return control;\n};\n\n/**\n * A common API used to plot everything except the datapoints and legend themselves.\n * * Axes - X, Y and optional Y2 axis\n * * Grid - Horizontal and vertical\n * * X,Y,Y2 Axis ticks\n * * Axes Labels\n *\n * Lifecycle functions include:\n *  * BeforeInit\n *  * Init\n *  * Render\n *  * AfterInit\n *\n * @module Graph\n * @class Graph\n */\nvar Graph = /*#__PURE__*/function (_Construct) {\n  /**\n     * @class\n     * @param {GraphConfig} input - Input JSON instance created using GraphConfig\n     */\n  function Graph(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Graph);\n    _this = _callSuper(this, Graph);\n    initConfig(_this);\n    _this.generate(input);\n    return _this;\n  }\n\n  // TODO: update generate to return an instance of the graph object and utilize getGraphSVG\n  // wherever it is called.\n\n  /**\n   * Draw function that is called by the parent control. This draws the Axes, grid, legend and\n   * labels for the chart construct.\n   *\n   * @description Returns the selection node of the svg.\n   * @returns {d3.selection} d3 selection node of svg.\n   */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Graph, _Construct);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Graph, [{\n    key: \"getGraphSVG\",\n    value: function getGraphSVG() {\n      return this.svg;\n    }\n\n    /**\n       * Draw function that is called by the parent control. This draws the Axes, grid, legend and\n       * labels for the chart construct.\n       *\n       * @description Since we don't have the concept of z-index in visualization,\n       * the order of rendering should be following:\n       *  * SVG container\n       *  * Reference ranges\n       *  * Grid\n       *  * X-Axis\n       *  * Y-Axes\n       *  * Labels\n       *  * Legend\n       *  * Reference line when Y Axis shows/pads negative values\n       *  * Data [In our case we have load and unload]\n       * @param {object} input - Input JSON\n       * @returns {d3.selection} d3 selection node of svg.\n       */\n  }, {\n    key: \"generate\",\n    value: function generate(input) {\n      this.config = new _GraphConfig__WEBPACK_IMPORTED_MODULE_15__[\"default\"]().setInput(input).validateInput().cloneInput().processInput().getConfig();\n      beforeInit(this);\n      init(this);\n      var containerSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindTo).append('div').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"].container, true).style('padding-top', this.config.removeContainerPadding && 0).style('padding-bottom', this.config.removeContainerPadding && 0);\n      this.svg = containerSVG.insert('svg', ':first-child').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"].canvas, true).attr('role', 'img').attr('height', this.config.canvasHeight).attr('width', this.config.padding.hasCustomPadding ? this.config.canvasWidth : this.config.canvasWidth - BASE_CANVAS_WIDTH_PADDING);\n      if (this.config.opaqueBackground) {\n        _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"].container)).style('background-color', _helpers_constants__WEBPACK_IMPORTED_MODULE_9__.COLORS.WHITE);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.createDefs)(this.config, this.svg);\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_12__.createRegionContainer)(this.config, this.svg);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.createGrid)(this.axis, this.scale, this.config, this.svg);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.createContentContainer)(this.config, this.svg);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isUndefined(this.config.axis.x.allowCalibration) || !this.config.axis.x.allowCalibration) {\n        (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.createAxes)(this.axis, this.scale, this.config, this.svg);\n      }\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.createXAxisInfoRow)(this.axis, this.scale, this.config, this.svg);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.createLabel)(this.config, this.svg, this);\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.createAxisReferenceLine)(this.axis, this.scale, this.config, this.svg);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.dateline) && this.config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_9__.AXIS_TYPE.TIME_SERIES) {\n        (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_17__.createDateline)(this.scale, this.config, this.svg);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.eventline) && this.config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_9__.AXIS_TYPE.TIME_SERIES) {\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_19__.createEventline)(this.scale, this.config, this.svg);\n      }\n      if (this.config.showLegend) {\n        /*\n              If the consumer doesn't wish to show legend item then they can pass blank.\n              The legend item wont be rendered at that point.\n              The consumer can also choose to render legend into another container\n              using \"bindLegendTo\" property\n              */\n        this.legendSVG = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_11__.createLegend)(this.config, this.config.bindLegendTo ? _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindLegendTo) : containerSVG);\n      }\n      if (this.config.showNoDataText) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.drawNoDataView)(this.config, this.svg);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.attachEventHandlers)(this);\n      return this.svg;\n    }\n\n    /**\n       * Resizes the graph canvas. Uses the clipPath def.\n       * It scales the graph on resize, and translates the graph elements:\n       *  Axes\n       *  Grid\n       *  Labels\n       *\n       *  @returns {Graph} - Graph instance\n       */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _this2 = this;\n      // Check if graphContainer is present and then resize the graph\n      if (this.graphContainer) {\n        (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.calculateAxesLabelSize)(this.config);\n        setCanvasWidth(this.graphContainer, this.config);\n        setCanvasHeight(this.config);\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.translateGraph)(this);\n        this.content.forEach(function (control) {\n          return control.resize(_this2);\n        });\n      }\n      return this;\n    }\n\n    /**\n     * Performs the needed tasks to add content to this graph\n     * @param {object} content - a single content object.\n     * @returns nothing\n     */\n  }, {\n    key: \"processContent\",\n    value: function processContent(content) {\n      (0,_GraphConfig__WEBPACK_IMPORTED_MODULE_15__.validateContent)(this.content, content);\n      this.content.push(content);\n      this.contentConfig.push(content.config);\n      this.contentKeys.push(content.config.key);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.setAxisPadding)(this.config.axisPadding, content);\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)(content, content.config.yAxis, this.config, this.content);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isDefined(this.config.axis.x.allowCalibration) && this.config.axis.x.allowCalibration) {\n        (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)(content, _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].X_AXIS, this.config, this.content);\n        if (isRangeModified(this.config, _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].X_AXIS)) {\n          (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateXAxisDomain)(this.config, content);\n        }\n      }\n      if (this.config.allowCalibration && isRangeModified(this.config, content.config.yAxis)) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(this.config, content);\n      }\n      content.load(this);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.dateline) && this.config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_9__.AXIS_TYPE.TIME_SERIES) {\n        (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_17__.redrawDatelineContent)(this.scale, this.config, this.svg);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.config.eventline) && this.config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_9__.AXIS_TYPE.TIME_SERIES) {\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_19__.redrawEventlineContent)(this.scale, this.config, this.svg);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(content.config.values)) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.removeNoDataView)(this.svg);\n      }\n      return this;\n    }\n\n    /**\n     * Loads the content into the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * @param {object|array} content - Graph content\n     * @returns {Graph} - Graph instance\n     */\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(content) {\n      var _this3 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_7__.contentHandler)(content, function (i) {\n        _this3.processContent(i);\n      });\n      this.resize();\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isDefined(this.config.axis.x.allowCalibration) && this.config.axis.x.allowCalibration) {\n        (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.createAxes)(this.axis, this.scale, this.config, this.svg);\n      }\n      return this;\n    }\n\n    /**\n     * Unloads the content from the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * Input can be either a GraphContent instance or\n     * just an object containing a `key` of the content to be removed\n     *\n     * @param {object|array} input - Graph content to be removed\n     * @returns {Graph} - Graph instance\n     */\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent(input) {\n      var _this4 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_7__.contentHandler)(input, function (i) {\n        var index = _this4.contentKeys.indexOf(i.key || i.config.key);\n        if (index < 0) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_INVALID_OBJECT_PROVIDED);\n        }\n        _this4.content[index].unload(_this4);\n        _this4.content.splice(index, 1);\n        _this4.contentConfig.splice(index, 1);\n        _this4.contentKeys.splice(index, 1);\n        if (_this4.config.showNoDataText && _this4.content.every(function (content) {\n          return _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isEmpty(content.config.values);\n        })) {\n          (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.drawNoDataView)(_this4.config, _this4.svg);\n        }\n      });\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {Object} graphData - Input object that holds updated values and key pair and labels\n       * @returns {Graph} - Graph instance\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graphData) {\n      var _this5 = this;\n      console.warn('reflow is deprecated and will be removed a future major release. Please use reflowMultipleDatasets instead.');\n      if (graphData && graphData.values) {\n        var position = this.contentKeys.findIndex(function (key) {\n          return key === graphData.key;\n        });\n        if (position > -1) {\n          if (this.content[position].type === 'Bar' && graphData.values.length > 0) {\n            this.config.axis.x.ticks.values = [];\n            graphData.values.forEach(function (v) {\n              return _this5.config.axis.x.ticks.values.push(v.x);\n            });\n          }\n          this.content[position].reflow(this, graphData);\n          (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.setAxisPadding)(this.config.axisPadding, this.content[position]);\n          (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)(this.content[position], this.content[position].config.yAxis, this.config, this.content);\n          if (this.config.allowCalibration && isRangeModified(this.config, this.content[position].config.yAxis)) {\n            (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(this.config, this.content[position]);\n          }\n          if (this.config.showNoDataText && this.content.every(function (content) {\n            return _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isEmpty(content.config.values);\n          })) {\n            (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.drawNoDataView)(this.config, this.svg);\n            (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_17__.redrawDatelineContent)(this.scale, this.config, this.svg);\n          } else if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(this.content[position].config.values)) {\n            // Removes existing No Data View, when legend hold values\n            (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.removeNoDataView)(this.svg);\n          }\n        }\n      }\n      if (graphData && graphData.eventline) {\n        this.config.eventline = graphData.eventline;\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_19__.redrawEventlineContent)(this.scale, this.config, this.svg);\n      }\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.setXAxisDomain)(this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.translateContentContainer)(this.config, this.svg);\n      if (graphData && this.config.showLabel) {\n        this.config.axis.x.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.xLabel) || this.config.axis.x.label;\n        this.config.axis.y.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.yLabel) || this.config.axis.y.label;\n        this.config.axis.y2.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.y2Label) || this.config.axis.y2.label;\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.handleLabelClickFunctionDuringReflow)(this.config);\n      }\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {Object} graphData - Input object that holds updated values and key pairs and labels\n       * @returns {Graph} - Graph instance\n       */\n  }, {\n    key: \"reflowMultipleDatasets\",\n    value: function reflowMultipleDatasets(graphData) {\n      var _this6 = this;\n      if (graphData && graphData.panData && !_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isEmptyArray(graphData.panData)) {\n        graphData.panData.forEach(function (data) {\n          if (data.values) {\n            var position = _this6.contentKeys.findIndex(function (key) {\n              return key === data.key;\n            });\n            if (position > -1) {\n              if (_this6.content[position].type === 'Bar' && data.values.length > 0) {\n                _this6.config.axis.x.ticks.values = [];\n                data.values.forEach(function (v) {\n                  return _this6.config.axis.x.ticks.values.push(v.x);\n                });\n              }\n              _this6.content[position].reflow(_this6, data);\n              (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.setAxisPadding)(_this6.config.axisPadding, _this6.content[position]);\n              (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.getAxesDataRange)(_this6.content[position], _this6.content[position].config.yAxis, _this6.config, _this6.content);\n              if (_this6.config.allowCalibration && isRangeModified(_this6.config, _this6.content[position].config.yAxis)) {\n                (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.updateAxesDomain)(_this6.config, _this6.content[position]);\n              }\n              if (_this6.config.showNoDataText && _this6.content.every(function (content) {\n                return _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].isEmpty(content.config.values);\n              })) {\n                (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.drawNoDataView)(_this6.config, _this6.svg);\n                (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_17__.redrawDatelineContent)(_this6.scale, _this6.config, _this6.svg);\n              } else if (_helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].notEmpty(_this6.content[position].config.values)) {\n                // Removes existing No Data View, when legend hold values\n                (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.removeNoDataView)(_this6.svg);\n              }\n            }\n          }\n        });\n      }\n      if (graphData && graphData.eventline) {\n        this.config.eventline = graphData.eventline;\n        (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_19__.redrawEventlineContent)(this.scale, this.config, this.svg);\n      }\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.setXAxisDomain)(this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.scaleGraph)(this.scale, this.config);\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_8__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      if (graphData && this.config.showLabel) {\n        this.config.axis.x.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.xLabel) || this.config.axis.x.label;\n        this.config.axis.y.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.yLabel) || this.config.axis.y.label;\n        this.config.axis.y2.label = _helpers_utils__WEBPACK_IMPORTED_MODULE_16__[\"default\"].sanitize(graphData.y2Label) || this.config.axis.y2.label;\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.handleLabelClickFunctionDuringReflow)(this.config);\n      }\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Destroys the graph: Container and canvas.\n       *\n       * @returns {Graph} - Graph instance\n       */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.detachEventHandlers)(this);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_13__.destroyTooltipDiv)();\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"].canvas));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_20__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_14__[\"default\"].container));\n      initConfig(this);\n      return this;\n    }\n  }]);\n}(_core_Construct__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Graph);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Graph/Graph.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js":
/*!*********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUniqueKey: function() { return /* binding */ isUniqueKey; },\n/* harmony export */   settingsDictionary: function() { return /* binding */ settingsDictionary; },\n/* harmony export */   validateContent: function() { return /* binding */ validateContent; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _locale_index__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../locale/index */ \"./packages/carbon-graphs/src/js/locale/index.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\nvar initialAxisInfo = {\n  ticks: {},\n  show: false,\n  domain: {\n    lowerLimit: 0,\n    upperLimit: 0\n  }\n};\n\n/**\n * Helper function to set the right padding values based on input JSON.\n *\n * @private\n * @param {object} config - config which needs to be updated\n * @param {object} inputPadding - input padding provided via input JSON.\n * @returns {object} - padding for Graph\n */\nvar getPadding = function getPadding(config, inputPadding) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(config.padding)) {\n    return {\n      top: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputPadding.top, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top),\n      bottom: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputPadding.bottom, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom),\n      right: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputPadding.right, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right),\n      left: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputPadding.left, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.left),\n      hasCustomPadding: true\n    };\n  }\n  return {\n    top: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top,\n    bottom: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom,\n    right: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right,\n    left: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.left,\n    hasCustomPadding: false\n  };\n};\n\n/**\n * Used to set the clamp and transition when panning is enabled or not.\n *\n * @private\n * @param {object} config - config object used by the graph.\n * @returns {undefined} returns nothing\n */\nvar settingsDictionary = function settingsDictionary(config) {\n  return (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__.isPanningModeEnabled)(config) ? {\n    shouldClamp: false,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_DISABLED,\n    shouldCreateDatelineDefs: true\n  } : {\n    shouldClamp: true,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_ENABLED,\n    shouldCreateDatelineDefs: false\n  };\n};\n\n/**\n * Checks if the keys for data points sets are unique\n *\n * @private\n * @param {Array} dictionary - Collections of graph content\n * @param {string} key - unique key for the newly added content\n * @returns {boolean} false if not unique\n */\nvar isUniqueKey = function isUniqueKey(dictionary, key) {\n  return !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(dictionary.map(function (i) {\n    return i.config.key;\n  }), key);\n};\n\n/**\n * Validates the newly added content into the graph before rendering\n *\n * @private\n * @param {Array} content - Current set of graph contents, already rendered\n * @param {object} input - Newly added graph content\n * @returns {undefined} - returns nothing\n */\nvar validateContent = function validateContent(content, input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (!isUniqueKey(content, input.config.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NON_UNIQUE_PROPERTY);\n  }\n};\n\n/**\n * API to parse consumer input for Graph\n *\n * @class GraphConfig\n */\nvar GraphConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function GraphConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GraphConfig);\n    _this = _callSuper(this, GraphConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(GraphConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GraphConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       * Checks if the following properties are present:\n       *      bindTo\n       *      axis\n       *      axis.x\n       *      If axis.x.type is provided then it should be either default or timeseries\n       *      axis.y\n       *      Y axis label is mandatory and X axis is optional\n       *\n       * @throws {module:errors.THROW_MSG_NO_BIND}\n       * @throws {module:errors.THROW_MSG_INVALID_TYPE}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_INFO}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_LIMIT_INFO}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_LABEL_INFO}\n       * @returns {GraphConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXES_DATA_LOADED);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.bindTo)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_BIND);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_INFO);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.axis.x.type) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(Object.values(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE), this.input.axis.x.type)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_INVALID_TYPE);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x.upperLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y.upperLimit)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_LIMIT_INFO);\n      }\n      if ((0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showXLabel, true) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.x.label)) {\n        // eslint-disable-next-line no-console\n        console.warn('A label for the x-axis is expected to be provided to meet accessibility standards. This label will become required starting in terra-graphs version 3.0.0. \"showXLabel\" can be set to false to hide the label for situations where the label should not be displayed.');\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y.label)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_LABEL_INFO);\n      }\n      if ((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.hasY2Axis)(this.input.axis)) {\n        if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y2.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y2.upperLimit)) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_LIMIT_INFO);\n        }\n        if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(this.input.axis.y2.label)) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_NO_AXIS_LABEL_INFO);\n        }\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.dateline) && this.input.axis.x.type !== _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_INVALID_TYPE);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.dateline) && this.input.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES) {\n        this.input.dateline.forEach(function (dateline) {\n          (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_9__.validateDateline)(dateline);\n        });\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.eventline) && this.input.axis.x.type !== _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_10__[\"default\"].THROW_MSG_INVALID_TYPE);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].notEmpty(this.input.eventline) && this.input.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES) {\n        this.input.eventline.forEach(function (eventline) {\n          (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_11__.validateEventline)(eventline);\n        });\n      }\n      return this;\n    }\n\n    // TODO: cloning may bloat up the the graph config object by adding additional properties.\n    // This may also be an unecessary or redundant step as processInput adds in default values\n    // if any are missing. A spike needs to be done to confirm if this step is unecessary and\n    // can be removed.\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {GraphConfig} instance object\n       */\n  }, {\n    key: \"cloneInput\",\n    value: function cloneInput() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(this.input);\n      return this;\n    }\n\n    // TODO: this method needs to be added to the baseConfig class as part of the class template\n\n    /**\n    * Processes the input from the JSON and updates the config object.\n    * d3 domain and ranges are stored based on the upper and lower x, y and y2 limits.\n    *\n    * @returns {GraphConfig} instance object\n    */\n  }, {\n    key: \"processInput\",\n    value: function processInput() {\n      var axis = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(this.input.axis);\n      var getYAxesDomain = function getYAxesDomain(conf, yAxis, axisObj) {\n        var showAxis = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        conf.axis[yAxis].ticks = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axisObj[yAxis].ticks, {});\n        conf.axis[yAxis].show = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axisObj[yAxis].show, showAxis);\n        conf.axis[yAxis].domain = {\n          lowerLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getNumber(axisObj[yAxis].lowerLimit),\n          upperLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getNumber(axisObj[yAxis].upperLimit)\n        };\n        conf.axis[yAxis].rangeRounding = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axisObj[yAxis].rangeRounding, true);\n        conf.axis[yAxis].suppressTrailingZeros = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axisObj[yAxis].suppressTrailingZeros, false);\n        return conf;\n      };\n\n      // Sets default value if undefined. Otherwise adds the input value.\n\n      this.config.clipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__.generateClipPathId)();\n      this.config.datelineClipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__.generateDatelineClipPathId)();\n      this.config.bindTo = this.input.bindTo;\n      this.config.bindLegendTo = this.input.bindLegendTo;\n      this.config.axis = axis;\n      this.config.dateline = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(this.input.dateline), []);\n      this.config.eventline = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].deepClone(this.input.eventline), []);\n      this.config.padding = getPadding(this.config, this.input.padding);\n      this.config.locale = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.locale, _locale_index__WEBPACK_IMPORTED_MODULE_13__.DEFAULT_LOCALE);\n      this.config.d3Locale = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.locale, _locale_index__WEBPACK_IMPORTED_MODULE_13__.DEFAULT_LOCALE);\n      this.config.showNoDataText = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showNoDataText, true);\n      this.config.throttle = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.throttle, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].RESIZE_THROTTLE);\n      this.config.settingsDictionary = settingsDictionary(this.input);\n      this.config.showLabel = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showLabel, true);\n      this.config.showXLabel = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showXLabel, true);\n      this.config.showLegend = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showLegend, true);\n      this.config.showShapes = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showShapes, true);\n      this.config.showHGrid = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showHGrid, true);\n      this.config.showVGrid = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.showVGrid, true);\n      this.config.dimension = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.dimension, {});\n      this.config.allowCalibration = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.allowCalibration, true);\n      this.config.removeContainerPadding = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.removeContainerPadding, false);\n      this.config.legendPadding = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_14__.getLegendPadding)(this.config, this.input.legendPadding);\n      this.config.opaqueBackground = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(this.input.opaqueBackground, false);\n\n      // Additional X Axis properties defined on top of input axis\n      this.config.axis.x.type = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.type, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.DEFAULT);\n      this.config.axis.x.ticks = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.ticks, {});\n      this.config.axis.x.show = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.show, true);\n      this.config.axis.x.orientation = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.orientation, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXES_ORIENTATION.X.BOTTOM);\n      this.config.axis.x.domain = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getXAxisDomain)(this.config.axis.x.type, this.config.axis.x.lowerLimit, this.config.axis.x.upperLimit);\n      this.config.axis.x.rangeRounding = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.rangeRounding, true);\n      this.config.axis.x.suppressTrailingZeros = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.suppressTrailingZeros, false);\n      this.config.axis.x.allowCalibration = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.x.allowCalibration, false);\n      if ((0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__.isPanningModeEnabled)(this.input)) {\n        this.config.axis.x.allowCalibration = false;\n      }\n\n      // Additional Y & Y2 Axis properties defined on top of input axis\n      if (this.input.axis.y) {\n        getYAxesDomain(this.config, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y_AXIS, axis, true);\n      } else {\n        this.config.axis.y = initialAxisInfo;\n      }\n      if (this.input.axis.y2) {\n        getYAxesDomain(this.config, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y2_AXIS, axis);\n      } else {\n        this.config.axis.y2 = initialAxisInfo;\n      }\n      this.config.shownTargets = [];\n      this.config.hasCriticality = false;\n      this.config.shouldHideAllRegion = false;\n      // axisPadding is needed for case by case basis. Example: for bar graphs, we toggle padding using this variable\n      this.config.axisPadding = {\n        y: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.y.padDomain, true),\n        y2: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(axis.y2.padDomain, true)\n      };\n      this.config.axisInfoRowLabelHeight = 0; // specific only to  Bar Graphs (when axis info row labels are used in Bar Graphs)\n      this.config.axis.y.isConsumerProvidedFormat = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(this.config.axis.y.ticks.format);\n      this.config.axis.y2.isConsumerProvidedFormat = _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(this.config.axis.y2.ticks.format);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (GraphConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js":
/*!*************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachEventHandlers: function() { return /* binding */ attachEventHandlers; },\n/* harmony export */   createContentContainer: function() { return /* binding */ createContentContainer; },\n/* harmony export */   createDefs: function() { return /* binding */ createDefs; },\n/* harmony export */   createGrid: function() { return /* binding */ createGrid; },\n/* harmony export */   createLabel: function() { return /* binding */ createLabel; },\n/* harmony export */   d3RemoveElement: function() { return /* binding */ d3RemoveElement; },\n/* harmony export */   detachEventHandlers: function() { return /* binding */ detachEventHandlers; },\n/* harmony export */   determineHeight: function() { return /* binding */ determineHeight; },\n/* harmony export */   drawNoDataView: function() { return /* binding */ drawNoDataView; },\n/* harmony export */   getAxisInfoRowLabelHeight: function() { return /* binding */ getAxisInfoRowLabelHeight; },\n/* harmony export */   getColorForTarget: function() { return /* binding */ getColorForTarget; },\n/* harmony export */   getShapeForTarget: function() { return /* binding */ getShapeForTarget; },\n/* harmony export */   handleLabelClickFunctionDuringReflow: function() { return /* binding */ handleLabelClickFunctionDuringReflow; },\n/* harmony export */   padDomain: function() { return /* binding */ padDomain; },\n/* harmony export */   removeNoDataView: function() { return /* binding */ removeNoDataView; },\n/* harmony export */   scaleGraph: function() { return /* binding */ scaleGraph; },\n/* harmony export */   setAxisPadding: function() { return /* binding */ setAxisPadding; },\n/* harmony export */   translateAxes: function() { return /* reexport safe */ _helpers_axis__WEBPACK_IMPORTED_MODULE_3__.translateAxes; },\n/* harmony export */   translateCanvas: function() { return /* binding */ translateCanvas; },\n/* harmony export */   translateContentContainer: function() { return /* binding */ translateContentContainer; },\n/* harmony export */   translateDefs: function() { return /* binding */ translateDefs; },\n/* harmony export */   translateGraph: function() { return /* binding */ translateGraph; },\n/* harmony export */   translateGrid: function() { return /* binding */ translateGrid; },\n/* harmony export */   translateLabel: function() { return /* binding */ translateLabel; },\n/* harmony export */   translateSVGElement: function() { return /* binding */ translateSVGElement; },\n/* harmony export */   translateVerticalGrid: function() { return /* binding */ translateVerticalGrid; },\n/* harmony export */   updateAxesDomain: function() { return /* binding */ updateAxesDomain; },\n/* harmony export */   updateXAxisDomain: function() { return /* binding */ updateXAxisDomain; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_BaseConfig_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/BaseConfig/index */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/datetimeBuckets */ \"./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_dateline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../helpers/dateline */ \"./packages/carbon-graphs/src/js/helpers/dateline.js\");\n/* harmony import */ var _helpers_eventline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../helpers/eventline */ \"./packages/carbon-graphs/src/js/helpers/eventline.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar BASE_CANVAS_WIDTH_PADDING = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].BASE_CANVAS_WIDTH_PADDING;\nvar DEFAULT_HEIGHT = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_HEIGHT;\n\n/**\n * Checks if axis info row labels are present and updates the canvas height\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} - axis info row label height\n */\nvar getAxisInfoRowLabelHeight = function getAxisInfoRowLabelHeight(config) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isDefined(config.axisInfoRowLabelHeight) ? config.axisInfoRowLabelHeight : 0;\n};\n\n/**\n * Updates the height and width of the canvas on resize\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar translateCanvas = function translateCanvas(config, canvasSVG) {\n  return canvasSVG.attr('height', config.canvasHeight + getAxisInfoRowLabelHeight(config)).attr('width', config.padding.hasCustomPadding ? config.canvasWidth : config.canvasWidth - BASE_CANVAS_WIDTH_PADDING);\n};\n\n/**\n * Updates clipPath rectangle width and height on resize.\n * `clipPath` updates are necessary since the clip-path URL needs to get\n * the necessary parameters on resize so that data points are not cut off\n *\n * @description\n * Calling getDatelineIndicatorHeight() will trigger a page reflow and resizing the page might cause Layout Thrashing.\n * We understand this and deem it necessary to calculate the indicator height when a new dataset/set of contents are loaded during Panning.\n * Furthermore, this function is called only when panning is enabled and there is a dateline defs element is present.\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateDefs = function translateDefs(config, canvasSVG) {\n  canvasSVG.select(\"clipPath#\".concat(config.clipPathId)).selectAll('rect').attr('height', config.height).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, config.axis.x.orientation && (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config));\n  if (config.settingsDictionary.shouldCreateDatelineDefs && config.dateline.length > 0) {\n    var datelineIndicatorHeight = Math.floor((0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_9__.getDatelineIndicatorHeight)() / 2);\n    canvasSVG.select(\"clipPath#\".concat(config.datelineClipPathId)).selectAll('rect').attr('height', config.height + datelineIndicatorHeight).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, config.axis.x.orientation && (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config) - datelineIndicatorHeight);\n  }\n};\n/**\n * Translates the horizontal grid on the canvas, grids are only applicable to standard\n * X and Y Axis.\n * We decide using the ticks that are present in the Y Axis and have the grid lines for every tick except the bounds.\n * When we resize, the ticks change based on the container real estate and we add/remove the grids respectively.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 svg path\n */\nvar translateHorizontalGrid = function translateHorizontalGrid(axis, config) {\n  var yAxisGrid;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(config.axis.y.ticks.values)) {\n    var ticks = config.axis.y.ticks.values;\n    yAxisGrid = axis.y.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.processTickValues)(ticks)).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config) * -1, 0, 0).tickFormat('');\n  } else {\n    yAxisGrid = axis.y.tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config) * -1, 0, 0).tickFormat('');\n  }\n  return yAxisGrid;\n};\n/**\n * Translates the vertical grid on the canvas, grids are only applicable to standard\n * X and Y Axis.\n * We decide using the ticks that are present in the X Axis and have the grid lines for every tick except the bounds.\n * When we resize, the ticks change based on the container real estate and we add/remove the grids respectively.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 svg path\n */\nvar translateVerticalGrid = function translateVerticalGrid(axis, config) {\n  var xAxisGrid;\n  var tickSizeMultiplicand = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.isXAxisOrientationTop)(config.axis.x.orientation) ? _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TICK_ORIENTATION.TOP : _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TICK_ORIENTATION.BOTTOM;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(config.axis.x.ticks.values)) {\n    var ticks = config.axis.x.ticks.values;\n    if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(config.axis.x.domain)) {\n      xAxisGrid = axis.x.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.processTickValues)(ticks)).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) * tickSizeMultiplicand, 0, 0).tickFormat('');\n    } else if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isDate(ticks)) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(config.axis.x.domain.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isUndefined(config.axis.x.domain.upperLimit)) {\n        xAxisGrid = axis.x.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.processTickValues)(ticks)).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) * tickSizeMultiplicand, 0, 0).tickFormat('');\n      } else {\n        var filteredTickValues = ticks.filter(function (value) {\n          var date = new Date(value);\n          return date >= config.axis.x.domain.lowerLimit && date <= config.axis.x.domain.upperLimit;\n        });\n        xAxisGrid = axis.x.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.processTickValues)(filteredTickValues)).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) * tickSizeMultiplicand, 0, 0).tickFormat('');\n      }\n    } else {\n      xAxisGrid = axis.x.tickValues((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.processTickValues)(ticks.filter(function (value) {\n        return value >= config.axis.x.domain.lowerLimit && value <= config.axis.x.domain.upperLimit;\n      }))).tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) * tickSizeMultiplicand, 0, 0).tickFormat('');\n    }\n  } else {\n    xAxisGrid = axis.x.tickSize((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) * tickSizeMultiplicand, 0, 0).tickFormat('');\n  }\n  return xAxisGrid;\n};\n\n/**\n * Function to translate the vertical-grid with a specific style and config.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} axis - Axis scaled according to input parameters\n * @param {string} style - Style with which, grid needs to be created.\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing.\n */\nvar translateVGridHandler = function translateVGridHandler(canvasSVG, axis, style, config) {\n  canvasSVG.select(\".\".concat(style)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).call(translateVerticalGrid(axis, config));\n};\n\n/**\n * Updates the horizontal and vertical grid sizes/positions on resize\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateGrid = function translateGrid(axis, scale, config, canvasSVG) {\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getAxesScale)(axis, scale, config);\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].grid)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config), \")\"));\n  if (config.showHGrid) {\n    canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].gridH)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).call(translateHorizontalGrid(axis, config));\n  }\n  if (config.showVGrid) {\n    (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_5__.translateVGrid)(canvasSVG, axis, config, translateVGridHandler);\n  }\n};\n\n/**\n * Translates the rectangle which forms the container for graph content\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar translateContentContainer = function translateContentContainer(config, canvasSVG) {\n  return canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].contentContainer)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config)).attr('height', config.height).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, config.axis.x.orientation && (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config));\n};\n/**\n * calculates the character limit of label with respect to axis length.\n *\n * @private\n * @param {string} config - config object derived from input JSON\n * @returns {object} character limit for both and y-axis\n */\nvar getAxesLabelCharacterLimits = function getAxesLabelCharacterLimits(config) {\n  return {\n    /*\n       *  We can fit 1 Uppercase character for every ≈7px. To fit ellipses with truncated text, we can assign 8px per character for y and y2-axis.\n       *  And if we use 8px per character, there will be some space left on x-axis. Inorder to use maximum space on x-axis,\n       *  we can assign less than 8px(22/3 i.e ≈7.3) per character in x-axis.\n       *\n       */\n    xAxisLimit: (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config) / 7.33,\n    yAndY2AxisLimit: config.height / 8\n  };\n};\n/**\n * Adds onClick event for each label in Axes.\n * Criteria:\n *  * Text needs to have a valid function for onClick\n *  * Label should exceed the calculated character limit with respect to axis length\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} className - class name of axis\n * @param {object} axisObj - axis object provided by the consumer\n * @param {number} charLimit - character limit of label in axis\n * @param {string} axisType - type of axis\n * @returns {object} d3 svg path\n */\nvar addLabelEventHandler = function addLabelEventHandler(canvasSVG, className, axisObj, charLimit, axisType) {\n  return canvasSVG.selectAll(\".\".concat(className, \" text\")).each(function () {\n    var _this = this;\n    // eslint-disable-next-line no-unused-expressions\n    (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.shouldTruncateLabel)(axisObj.label, charLimit) ? _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this).style('cursor', 'pointer').on('click', function () {\n      // eslint-disable-next-line no-unused-expressions\n      _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isDefined(axisObj.onLabelClick) && _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isFunction(axisObj.onLabelClick) ? axisObj.onLabelClick(axisObj.label, _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(_this)) : (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.loadLabelPopup)(axisObj.label, axisType);\n    }) : null;\n  });\n};\n\n/**\n * Removes label click event if label is small during reflow.\n *\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar handleLabelClickFunctionDuringReflow = function handleLabelClickFunctionDuringReflow(config) {\n  var axesLabelCharLimits = getAxesLabelCharacterLimits(config);\n  var selectLabelTextElement = function selectLabelTextElement(className) {\n    return document.querySelector(\".\".concat(className, \" text\"));\n  };\n  var updateOnClickForAxis = function updateOnClickForAxis(axisLabel, axisLimit, axisStyles) {\n    var labelHasOnClick = selectLabelTextElement(axisStyles) === null ? false : _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isFunction(_d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(selectLabelTextElement(axisStyles)).on('click'));\n    if (axisLabel && !(0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.shouldTruncateLabel)(axisLabel, axisLimit) && labelHasOnClick) {\n      _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(selectLabelTextElement(axisStyles)).on('click', null).style('cursor', 'auto');\n    }\n  };\n  updateOnClickForAxis(config.axis.x.label, axesLabelCharLimits.xAxisLimit, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX);\n  updateOnClickForAxis(config.axis.y.label, axesLabelCharLimits.yAndY2AxisLimit, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY);\n  updateOnClickForAxis(config.axis.y2.label, axesLabelCharLimits.yAndY2AxisLimit, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2);\n};\n/**\n * Updates the x, y, y2 axes label positions on resize\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateLabel = function translateLabel(config, canvasSVG) {\n  var axesLabelCharLimits = getAxesLabelCharacterLimits(config);\n  if (config.axis.x.label) {\n    canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS), \")\"));\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX, \" text\")).each(function () {\n      _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this).text((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.formatLabel)(config.axis.x.label, axesLabelCharLimits.xAxisLimit));\n    });\n    addLabelEventHandler(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX, config.axis.x, axesLabelCharLimits.xAxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS);\n  }\n  if (config.axis.y.label) {\n    canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelXPosition)(config), \", \").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS), \")\"));\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY, \" text\")).each(function () {\n      _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this).text((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.formatLabel)(config.axis.y.label, axesLabelCharLimits.yAndY2AxisLimit));\n    });\n    addLabelEventHandler(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY, config.axis.y, axesLabelCharLimits.yAndY2AxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS);\n  }\n  if ((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.hasY2Axis)(config.axis)) {\n    canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getY2AxisLabelXPosition)(config), \", \").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS), \")\"));\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2, \" text\")).each(function () {\n      _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select(this).text((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.formatLabel)(config.axis.y2.label, axesLabelCharLimits.yAndY2AxisLimit));\n    });\n    addLabelEventHandler(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2, config.axis.y2, axesLabelCharLimits.yAndY2AxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS);\n  }\n};\n/**\n * Pads the domain with some buffer that gets calculated based on input values.\n * Pad percentage is 5%\n *\n * @private\n * @param {object} domain - Lower and upper bounds for the axes. Currently only being performed for Y and Y2 axes\n * @param {boolean} isPaddingNeeded - represents if axis needs padding\n * @returns {object} - Bound adjusted (Padded) lower and upper bounds for the axes\n */\nvar padDomain = function padDomain(domain) {\n  var isPaddingNeeded = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var lowerBound = domain.lowerLimit;\n  var upperBound = domain.upperLimit;\n  var domainRange = Math.abs(upperBound - lowerBound);\n  var domainStretch = domainRange * (50 / 1000);\n  return {\n    lowerLimit: lowerBound - (isPaddingNeeded ? domainStretch : 0),\n    upperLimit: upperBound + (isPaddingNeeded ? domainStretch : 0)\n  };\n};\n/**\n * Determines the domain for x, y and y2 axes. For Y axis and Y2 axis,\n * the end points are calculated based on the ranges provided. This is done so that the axes are\n * padded on both ends properly.\n * For X Axis no such processing is provided. This decision was made due to the resize happening\n * horizontally rather than vertical resize. To alleviate processing cost we depend on x axis's end points directly.\n * If the consumer needs to pad the X Axis then they can provide the range with sufficient padding.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {object} [input] - array of target objects\n * @returns {object} config - config object derived from input JSON\n */\nvar updateAxesDomain = function updateAxesDomain(config) {\n  var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(input)) {\n    return config;\n  }\n  config.outlierStretchFactor = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.determineOutlierStretchFactorYAxes)(config);\n  var yAxis = input.config.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS;\n  var halfDomain = (config.axis[yAxis].domain.upperLimit - config.axis[yAxis].domain.lowerLimit) / 2;\n  var midPoint = (config.axis[yAxis].domain.upperLimit + config.axis[yAxis].domain.lowerLimit) / 2;\n  var newDomain = {\n    lowerLimit: midPoint - halfDomain * config.outlierStretchFactor.lowerLimit,\n    upperLimit: midPoint + halfDomain * config.outlierStretchFactor.upperLimit\n  };\n  config.axis[yAxis].domain = padDomain(newDomain, config.axisPadding[yAxis]);\n  return config;\n};\n/**\n * Determines the domain for the x axis.\n * the end points are calculated based on the ranges provided. This is done so that the axes are\n * padded on both ends properly.\n * For X Axis no such processing is provided. This decision was made due to the resize happening\n * horizontally rather than vertical resize. To alleviate processing cost we depend on x axis's end points directly.\n * If the consumer needs to pad the X Axis then they can provide the range with sufficient padding.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {object} [input] - array of target objects\n * @returns {object} config - config object derived from input JSON\n */\nvar updateXAxisDomain = function updateXAxisDomain(config) {\n  var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(input) || !config.axis.x.allowCalibration) {\n    return config;\n  }\n\n  // if the x-axis type is timeseries then convert to epoc date so it is a number for calculations\n  if (config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES) {\n    config.axis.x.domain.upperLimit = _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getEpocFromDateString(config.axis.x.domain.upperLimit);\n    config.axis.x.domain.lowerLimit = _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getEpocFromDateString(config.axis.x.domain.lowerLimit);\n    // Note: config.axis.x.dataRange.max and min are already numbers.\n    // In the case of a timeseries x-axis, they are the epoc representation\n    // of a date. Which is why only config.axis.x.domain.upperLimit and lowerLimit\n    // are converted to epoc.\n  }\n  config.axis.x.outlierStretchFactor = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.determineOutlierStretchFactorXAxis)(config);\n  var halfDomain = (config.axis.x.domain.upperLimit - config.axis.x.domain.lowerLimit) / 2;\n  var midPoint = (config.axis.x.domain.upperLimit + config.axis.x.domain.lowerLimit) / 2;\n  var newDomain = {\n    lowerLimit: midPoint - halfDomain * config.axis.x.outlierStretchFactor.lowerLimit,\n    upperLimit: midPoint + halfDomain * config.axis.x.outlierStretchFactor.upperLimit\n  };\n  if (newDomain.upperLimit === config.axis.x.dataRange.max || newDomain.lowerLimit === config.axis.x.dataRange.min) {\n    config.axisPadding.x = true;\n  } else {\n    config.axisPadding.x = (0,_core_BaseConfig_index__WEBPACK_IMPORTED_MODULE_2__.getDefaultValue)(config.axisPadding.x, false);\n  }\n  config.axis.x.domain = padDomain(newDomain, config.axisPadding.x);\n\n  // if the x-axis type is timeseries then convert the updated epoc date back to a date object\n  if (config.axis.x.type === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES) {\n    config.axis.x.domain.upperLimit = _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getDateFromEpoc(config.axis.x.domain.upperLimit);\n    config.axis.x.domain.lowerLimit = _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getDateFromEpoc(config.axis.x.domain.lowerLimit);\n    // Note: config.axis.x.domain.upperLimit and lowerLimit are converted back to a Date object\n    // because that is how it is used in the rest of the code. Outside of this method,\n    // config.axis.x.dataRange.max and min are not utilized which is why converting them\n    // back to a date object is redundant.\n  }\n  return config;\n};\n/**\n * Added defs element for the canvas. This currently holds the clip paths for the entire chart.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createDefs = function createDefs(config, canvasSVG) {\n  var defsElement = canvasSVG.append('defs');\n  defsElement.append('clipPath').attr('id', config.clipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config)).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config)).attr('height', config.height);\n  if (config.settingsDictionary.shouldCreateDatelineDefs && config.dateline.length > 0) {\n    defsElement.append('clipPath').attr('id', config.datelineClipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, 0).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config)).attr('height', 0);\n  }\n};\n\n/**\n * Function to create the vertical-grid with a specific style and config.\n *\n * @private\n * @param {object} gridSVG - d3 object of the grid\n * @param {object} axis - Axis scaled according to input parameters\n * @param {string} style - Style with which, grid needs to be created.\n * @param {object} config - config required for translating vertical grid.\n * @returns {undefined} - Doesn't return anything.\n */\nvar createVGridHandler = function createVGridHandler(gridSVG, axis, style, config) {\n  gridSVG.append('g').classed(style, true).call(translateVerticalGrid(axis, config));\n};\n\n/**\n * Create the d3 grid - horizontal and vertical and append into the canvas.\n * Only performed if the flags for showHGrid and showVGrid are enabled\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createGrid = function createGrid(axis, scale, config, canvasSVG) {\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getAxesScale)(axis, scale, config);\n  var gridSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].grid, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config), \")\"));\n  if (config.showHGrid) {\n    gridSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].gridH, true).call(translateHorizontalGrid(axis, config));\n  }\n  if (config.showVGrid) {\n    (0,_helpers_datetimeBuckets__WEBPACK_IMPORTED_MODULE_5__.createVGrid)(gridSVG, axis, config, createVGridHandler);\n  }\n};\n\n/**\n * Create the d3 Labels - X, Y and Y2 and append into the canvas.\n * Only if showLabel is enabled. X Axis is 0 deg rotated, Y Axis is rotated 90 deg\n * Y2 Axis is rotated -90 deg along its horizontal axis.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} control - Graph instance\n * @returns {undefined} - returns nothing\n */\nvar createLabel = function createLabel(config, canvasSVG, control) {\n  if (config.showLabel) {\n    var axesLabelCharLimits = getAxesLabelCharacterLimits(config);\n    if (config.showXLabel && config.axis.x.label) {\n      var labelPath = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS), \")\"));\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.buildAxisLabel)(labelPath, _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sanitize(config.axis.x.label), axesLabelCharLimits.xAxisLimit);\n      addLabelEventHandler(labelPath, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX, config.axis.x, axesLabelCharLimits.xAxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS);\n    }\n    if (config.axis.y.label) {\n      var _labelPath = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelXPosition)(config), \", \").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS), \")\"));\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.buildAxisLabel)(_labelPath, _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sanitize(config.axis.y.label), axesLabelCharLimits.yAndY2AxisLimit);\n      addLabelEventHandler(_labelPath, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY, config.axis.y, axesLabelCharLimits.yAndY2AxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS);\n    }\n    if ((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.hasY2Axis)(config.axis)) {\n      var _labelPath2 = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getY2AxisLabelXPosition)(config), \", \").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS), \")\"));\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.buildAxisLabel)(_labelPath2, _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sanitize(config.axis.y2.label), axesLabelCharLimits.yAndY2AxisLimit);\n      addLabelEventHandler(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelY2, config.axis.y2, axesLabelCharLimits.yAndY2AxisLimit, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS);\n      /*\n             * Label shapes are only applicable when we have a Y2 Axis\n             * */\n      control.axesLabelShapeGroup = (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.buildYAxisLabelShapeContainer)(config, canvasSVG)), _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS, (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.buildY2AxisLabelShapeContainer)(config, canvasSVG));\n    }\n  }\n};\n/**\n * Creates a container for graph content (evident when there are no boundary ticks)\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createContentContainer = function createContentContainer(config, canvasSVG) {\n  return canvasSVG.append('rect').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].contentContainer, true).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config));\n};\n\n/**\n * Creates and sets the d3 scale for the Graph. Once the scale is created\n * we can create the axes. To create a d3 scale, we need domain and range.\n * To create an axis we need scale, orientation and tick values, if needed\n *\n * The scale function uses d3.linear.nice which rounds the values in the axes.\n * i.e. [0.20147987687960267, 0.996679553296417] will get translated to [0.2, 1]\n *\n * The scale function uses d3.linear.clamp which \"clamps\" the scale so that any\n * input provided will clamp between the domain.\n * i.e. Before, If you have domain 0 to 20 (input lower and upper bounds) and range 0 to 100 (Width in px).\n * When input 20 is provided then the scale returns the px positioning as 200, which would put the point outside the graph.\n * Instead we clamp it within the graph as an upper bound using clamp. Now, it will return 100px.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar scaleGraph = function scaleGraph(scale, config) {\n  scale.x = (0,_core_BaseConfig_index__WEBPACK_IMPORTED_MODULE_2__.getScale)(config.axis.x.type).domain([config.axis.x.domain.lowerLimit, config.axis.x.domain.upperLimit]).range((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisRange)(config)).clamp(config.axis.x.allowCalibration);\n  scale.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain([config.axis.y.domain.lowerLimit, config.axis.y.domain.upperLimit]).range((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisRange)(config)).clamp(config.allowCalibration);\n  if (config.axis.x.rangeRounding) {\n    scale.x.nice();\n  }\n  if (config.allowCalibration && config.axis.y.rangeRounding) {\n    scale.y.nice();\n  }\n  if ((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.hasY2Axis)(config.axis)) {\n    scale.y2 = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain([config.axis.y2.domain.lowerLimit, config.axis.y2.domain.upperLimit]).range((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisRange)(config)).clamp(config.allowCalibration);\n    if (config.allowCalibration && config.axis.y2.rangeRounding) {\n      scale.y2.nice();\n    }\n  }\n};\n\n/**\n * Translates no data view rectangle and the label\n * based on the current positioning on resize.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} svg - d3 selection node of svg.\n *  @returns {undefined} - returns nothing\n */\nvar translateNoDataView = function translateNoDataView(config, svg) {\n  svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataOverlay)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) / _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].NO_DATA_VIEW_PROPORTION).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config));\n  svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataLabel)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('x', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelXPosition)(config)).attr('y', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config) + _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].NO_DATA_LABEL_PADDING);\n};\n\n/**\n * Translates graph based on the current positioning on resize. We\n * don't need to resize the entire graph, in our case we just need to transform:\n *  The canvas height and width\n *  The axes x and y co-ordinates\n *  The grid x and y co-ordinates\n *  The labels x and y co-ordinates\n *\n *  @private\n *  @param {object} control - Graph instance\n *  @returns {undefined} - returns nothing\n */\nvar translateGraph = function translateGraph(control) {\n  translateCanvas(control.config, control.svg);\n  translateDefs(control.config, control.svg);\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.translateAxes)(control.axis, control.scale, control.config, control.svg);\n  translateGrid(control.axis, control.scale, control.config, control.svg);\n  translateContentContainer(control.config, control.svg);\n  translateLabel(control.config, control.svg);\n  (0,_helpers_label__WEBPACK_IMPORTED_MODULE_6__.translateLabelShapeContainer)(control.config, control.axesLabelShapeGroup);\n  (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.translateAxisReferenceLine)(control.axis, control.scale, control.config, control.svg);\n  (0,_helpers_dateline__WEBPACK_IMPORTED_MODULE_9__.translateDateline)(control.scale, control.config, control.svg, _helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisYPosition);\n  (0,_helpers_eventline__WEBPACK_IMPORTED_MODULE_10__.translateEventline)(control.scale, control.config, control.svg, _helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisYPosition);\n  translateNoDataView(control.config, control.svg);\n};\n/**\n * Calculates the height for Y and Y2 axes.\n * If dimensions are provided in the input, then they are given priority.\n * NOTE: For height calculations, we are providing contingency for values that are\n * outside the range of y and y2 axes upper and lower bounds. This is called an outlier stretch factor.\n * When default height is used then this stretch factor is applied and they wont be applicable when\n * an input of dimension.height is provided\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {number} dimension - number in pixels for height\n * @returns {number} Height for the axes\n */\nvar determineHeight = function determineHeight(config, dimension) {\n  if (dimension.height) {\n    return dimension.height;\n  }\n  var verticalPadding = config.padding.top + config.padding.bottom;\n  var halfHeight = (DEFAULT_HEIGHT - verticalPadding) / 2;\n  config.outlierStretchFactor = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.determineOutlierStretchFactorYAxes)(config);\n  return halfHeight * config.outlierStretchFactor.upperLimit + halfHeight * config.outlierStretchFactor.lowerLimit;\n};\n/**\n * Returns the shape property from the data point.\n * If the shape is not provided then the default shape is Circle.\n *\n * @private\n * @param {object} dataPoint - Data point containing x, y co-ordinate points, color and shape.\n * @returns {string} provided shape or a circle.\n */\nvar getShapeForTarget = function getShapeForTarget(dataPoint) {\n  return dataPoint.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES.CIRCLE;\n};\n/**\n * Returns the color property from the data point.\n * If the shape is not provided then the default color is #1C1F21 {black}.\n *\n * @private\n * @param {object} dataPoint - Data point containing x, y co-ordinate points, color and shape.\n * @returns {string} provided shape or a circle.\n */\nvar getColorForTarget = function getColorForTarget(dataPoint) {\n  return dataPoint.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_COLOR;\n};\n/**\n * Attach event handlers for Line graph.\n * requestAnimationFrame will be used if consumer doesn't need\n * to throttle the graph resize. Which will result in a smoother animation\n * If the throttle is needed then use `throttle` property in the input JSON\n *\n * @private\n * @param {object} control - Graph instance\n * @returns {undefined} - returns nothing\n */\nvar attachEventHandlers = function attachEventHandlers(control) {\n  var resizeTimeout = 0;\n  var boundResize = control.resize.bind(control);\n  var setRequestAnimationFrame = function setRequestAnimationFrame() {\n    return window.requestAnimationFrame(boundResize);\n  };\n  var getConfig = function getConfig(config) {\n    return function () {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.timeout(setRequestAnimationFrame, config.throttle);\n    };\n  };\n  var resizeCallback = getConfig(control.config);\n  window.addEventListener('resize', resizeCallback, true);\n  control.resizeHandler = resizeCallback;\n};\n/**\n * Detach event handlers currently set for Line graph\n *\n * @private\n * @param {object} control - Graph instance\n * @returns {undefined} - returns nothing\n */\nvar detachEventHandlers = function detachEventHandlers(control) {\n  window.removeEventListener('resize', control.resizeHandler, true);\n};\n/**\n * Removes the element with provided selector using d3\n *\n * @private\n * @param {Selection|object} el - d3 selection element\n * @param {string} selector - attribute to query the element, typically a class or id\n * @param {boolean} [isBatchSelect] - enables `selectAll` rather than default `select`\n * @returns {undefined} - returns nothing\n */\nvar d3RemoveElement = function d3RemoveElement(el, selector) {\n  var isBatchSelect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!el) {\n    return;\n  }\n  if (isBatchSelect) {\n    el.selectAll(selector).remove();\n  } else {\n    el.select(selector).remove();\n  }\n};\n/**\n * This toggles padding for y and y2 axis based on loaded content.\n * Checks if axisPadding is set to true or false inside input config.\n * If set to false, padding is turned off for that yAxis\n *\n * @private\n * @param {object} axisPadding - object representing padding values for y and y2\n * @param {object} config - input content's config object\n * @returns {undefined} - returns nothing\n */\nvar setAxisPadding = function setAxisPadding(axisPadding, _ref) {\n  var config = _ref.config;\n  var yAxis = config.yAxis ? config.yAxis : _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS;\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].notEmpty(config.axisPadding)) {\n    axisPadding[yAxis] = config.axisPadding;\n  }\n};\n/**\n * Removes the No Data View from the node\n *\n * @private\n * @param {d3.selection} svg - d3 selection node of svg.\n * @returns {undefined} - returns nothing\n */\nvar removeNoDataView = function removeNoDataView(svg) {\n  d3RemoveElement(svg, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataContainer));\n};\n/**\n * Append No Data View to the graph node.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} svg - d3 selection node of svg.\n * @returns {d3.selection} d3 selection node of svg.\n */\nvar drawNoDataView = function drawNoDataView(config, svg) {\n  removeNoDataView(svg);\n  var noDataViewHeight = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config) / _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].NO_DATA_VIEW_PROPORTION;\n  var noDataViewContainer = svg.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataContainer, true);\n  noDataViewContainer.append('rect').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataOverlay, true).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config) + noDataViewHeight).attr('height', noDataViewHeight).attr('width', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisWidth)(config));\n  noDataViewContainer.append('text').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].noDataLabel, true).attr('x', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisLabelXPosition)(config)).attr('y', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisLabelYPosition)(config) + _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].NO_DATA_LABEL_PADDING).append('tspan').text(config.locale.noData);\n  return svg;\n};\n\n/**\n * Translate a SVG element so it's within the canvas\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} style - element to translate\n * @param {object} config - config object derived from input JSON\n * @returns {undefined}\n */\nvar translateSVGElement = function translateSVGElement(canvasSVG, style, config) {\n  canvasSVG.select(\".\".concat(style)).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.calculateVerticalPadding)(config), \")\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Graph/index.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Graph/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Graph__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graph */ \"./packages/carbon-graphs/src/js/controls/Graph/Graph.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9HcmFwaC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvbnRyb2xzL0dyYXBoL2luZGV4LmpzPzA5OWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdyYXBoIGZyb20gJy4vR3JhcGgnO1xuXG5leHBvcnQgeyBHcmFwaCBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiR3JhcGgiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Graph/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Line/Line.js":
/*!*************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Line/Line.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Line/helpers/helpers.js\");\n/* harmony import */ var _LineConfig__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./LineConfig */ \"./packages/carbon-graphs/src/js/controls/Line/LineConfig.js\");\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Line\n * @typedef {object} GraphContent\n * @typedef {object} LineConfig\n */\n\n/**\n * Calculates the min and max values for the x axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the x axis\n */\nvar calculateValuesRangeXAxis = function calculateValuesRangeXAxis(values) {\n  // null values are filtered out first\n  var xAxisValuesList = values.filter(function (i) {\n    return i.x !== null && i.x !== undefined;\n  }).map(function (i) {\n    // if the x-axis is a timeseries, then convert it to an epoc int\n    // for easier calculations\n    if (typeof i.x === 'string' || i.x instanceof Date) {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].getEpocFromDateString(i.x);\n    }\n    return i.x;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList))\n  };\n};\n/**\n * Calculates the min and max values for the y or y2 axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the y or y2 axis\n */\nvar calculateValuesRangeYAxis = function calculateValuesRangeYAxis(values) {\n  // null values are filtered out first\n  var yAxisValuesList = values.filter(function (i) {\n    return i.y !== null && i.y !== undefined;\n  }).map(function (i) {\n    return i.y;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(yAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(yAxisValuesList))\n  };\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} LineConfig config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _LineConfig__WEBPACK_IMPORTED_MODULE_15__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n\n/**\n * A Line graph is a graph used to represent a collection of data\n * points connected by a line along the X and Y Axis.\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module Line\n * @class Line\n */\nvar Line = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {LineConfig} input - Input JSON instance created using GraphConfig\n     */\n  function Line(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Line);\n    _this = _callSuper(this, Line);\n    _this.config = loadInput(input);\n    _this.type = 'Line';\n    _this.config.yAxis = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__.getDefaultValue)(_this.config.yAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y_AXIS);\n    _this.valuesRange = {};\n    _this.valuesRange.x = calculateValuesRangeXAxis(_this.config.values);\n    _this.valuesRange[_this.config.yAxis] = calculateValuesRangeYAxis(_this.config.values);\n    _this.dataTarget = {};\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Line, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Line, [{\n    key: \"load\",\n    value: function load(graph) {\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(this.dataTarget.values)) {\n        if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(this.dataTarget.valueRegionSubset)) {\n          (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.createValueRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)), this.dataTarget.valueRegionSubset, \"region_\".concat(this.dataTarget.key), this.config.yAxis, this.dataTarget.interpolationType);\n        } else if (_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].notEmpty(this.dataTarget.regions)) {\n          (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.createRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)), this.dataTarget.regions, \"region_\".concat(this.dataTarget.key), this.config.yAxis);\n        }\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.removeRegion)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)), this.dataTarget);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.removeLabelShapeItem)(graph.axesLabelShapeGroup[this.config.yAxis], this.dataTarget, graph.config);\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(this.dataTarget.values) && graph.config.shownTargets.indexOf(this.dataTarget.key) > -1) {\n        if (_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].notEmpty(this.dataTarget.regions) || !_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(this.dataTarget.valueRegionSubset)) {\n          if ((0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.isSingleTargetDisplayed)(graph.config.shownTargets, graph.content)) {\n            graph.config.shouldHideAllRegion = false;\n          } else {\n            graph.config.shouldHideAllRegion = !(0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.areRegionsIdentical)(graph.svg);\n          }\n        } else {\n          graph.config.shouldHideAllRegion = true;\n        }\n      }\n      if (graph.config.shouldHideAllRegion) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.hideAllRegions)(graph.svg);\n      }\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.translateRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup), this.dataTarget.valueRegionSubset), this.dataTarget.yAxis, !_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(this.dataTarget.valueRegionSubset), this.dataTarget.interpolationType);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.translateLineGraph)(graph.scale, graph.svg, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      this.config.values = graphData.values;\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.processDataPoints)(graph.config, this.config);\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var lineGraph = graph.content.filter(function (line) {\n        return line.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(lineGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.reflowLegend)(graph.legendSVG, lineGraph[0].config, graph, eventHandlers);\n      }\n      var lineSVG = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].line)).data([this.dataTarget]);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.drawDataLines)(graph.scale, graph.config, lineSVG.enter());\n      lineSVG.exit().remove();\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.updateShapesDuringReflow)(graph, graphData, this);\n      if (graph.config.showShapes) {\n        var currentPointsPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].pointGroup)).data(this.dataTarget);\n        currentPointsPath.exit().remove();\n        var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].currentPointsGroup)).selectAll(\"[class*=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].point, \"\\\"]\")).data((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.getDataPointValues)(this.dataTarget).filter(function (d) {\n          return d.y !== null && d.y !== undefined;\n        }));\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.drawDataPoints)(graph.scale, graph.config, pointPath.enter(), graph.legendSVG);\n        pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      }\n      this.valuesRange[this.config.yAxis] = calculateValuesRangeYAxis(this.config.values);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_6__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Line);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Line/Line.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Line/LineConfig.js":
/*!*******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Line/LineConfig.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n/**\n * API to parse consumer input for Line graph\n *\n * @class LineConfig\n */\nvar LineConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function LineConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, LineConfig);\n    _this = _callSuper(this, LineConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * Returns the config object\n     *\n     * @returns {object} config object\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(LineConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(LineConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @param {object} inputJSON - Input JSON\n       * @returns {LineConfig} instance object\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object.\n       *\n       * @returns {LineConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.validateBaseInput)(this.input);\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {LineConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (LineConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9MaW5lL0xpbmVDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FBQUssV0FBQUMsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsV0FBQUQsQ0FBQSxHQUFBSixpRkFBQSxDQUFBSSxDQUFBLEdBQUFMLDRGQUFBLENBQUFJLENBQUEsRUFBQUcseUJBQUEsS0FBQUMsT0FBQSxDQUFBQyxTQUFBLENBQUFKLENBQUEsRUFBQUMsQ0FBQSxRQUFBTCxpRkFBQSxDQUFBRyxDQUFBLEVBQUFNLFdBQUEsSUFBQUwsQ0FBQSxDQUFBTSxLQUFBLENBQUFQLENBQUEsRUFBQUUsQ0FBQTtBQUFBLFNBQUFDLDBCQUFBLGNBQUFILENBQUEsSUFBQVEsT0FBQSxDQUFBQyxTQUFBLENBQUFDLE9BQUEsQ0FBQUMsSUFBQSxDQUFBUCxPQUFBLENBQUFDLFNBQUEsQ0FBQUcsT0FBQSxpQ0FBQVIsQ0FBQSxhQUFBRyx5QkFBQSxZQUFBQSwwQkFBQSxhQUFBSCxDQUFBO0FBRXlEO0FBQzlCOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEsSUFLTWUsVUFBVSwwQkFBQUMsV0FBQTtFQUNkO0FBQ0Y7QUFDQTtFQUNFLFNBQUFELFdBQUEsRUFBYztJQUFBLElBQUFFLEtBQUE7SUFBQXZCLGlGQUFBLE9BQUFxQixVQUFBO0lBQ1pFLEtBQUEsR0FBQWxCLFVBQUEsT0FBQWdCLFVBQUE7SUFDQUUsS0FBQSxDQUFLQyxNQUFNLEdBQUcsSUFBSTtJQUNsQkQsS0FBQSxDQUFLRSxLQUFLLEdBQUcsSUFBSTtJQUFDLE9BQUFGLEtBQUE7RUFDcEI7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFbkIsMkVBQUEsQ0FBQWlCLFVBQUEsRUFBQUMsV0FBQTtFQUFBLE9BQUFyQiw4RUFBQSxDQUFBb0IsVUFBQTtJQUFBSyxHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBQyxVQUFBLEVBQVk7TUFDVixPQUFPLElBQUksQ0FBQ0osTUFBTTtJQUNwQjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFMRTtJQUFBRSxHQUFBO0lBQUFDLEtBQUEsRUFNQSxTQUFBRSxTQUFTQyxTQUFTLEVBQUU7TUFDbEIsSUFBSSxDQUFDTCxLQUFLLEdBQUdLLFNBQVM7TUFDdEIsT0FBTyxJQUFJO0lBQ2I7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFO0lBQUFKLEdBQUE7SUFBQUMsS0FBQSxFQUtBLFNBQUFJLGNBQUEsRUFBZ0I7TUFDZFosbUVBQWlCLENBQUMsSUFBSSxDQUFDTSxLQUFLLENBQUM7TUFDN0IsT0FBTyxJQUFJO0lBQ2I7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFO0lBQUFDLEdBQUE7SUFBQUMsS0FBQSxFQUtBLFNBQUFLLE1BQUEsRUFBUTtNQUNOLElBQUksQ0FBQ1IsTUFBTSxHQUFHSixzREFBSyxDQUFDYSxTQUFTLENBQUMsSUFBSSxDQUFDUixLQUFLLENBQUM7TUFDekMsT0FBTyxJQUFJO0lBQ2I7RUFBQztBQUFBLEVBaERzQlAsd0RBQVU7QUFtRG5DLCtEQUFlRyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29udHJvbHMvTGluZS9MaW5lQ29uZmlnLmpzP2IzMWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQmFzZUNvbmZpZywgeyB2YWxpZGF0ZUJhc2VJbnB1dCB9IGZyb20gJy4uLy4uL2NvcmUvQmFzZUNvbmZpZyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vaGVscGVycy91dGlscyc7XG5cbi8qKlxuICogQVBJIHRvIHBhcnNlIGNvbnN1bWVyIGlucHV0IGZvciBMaW5lIGdyYXBoXG4gKlxuICogQGNsYXNzIExpbmVDb25maWdcbiAqL1xuY2xhc3MgTGluZUNvbmZpZyBleHRlbmRzIEJhc2VDb25maWcge1xuICAvKipcbiAgICAgKiBAaW5oZXJpdGRvY1xuICAgICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gbnVsbDtcbiAgICB0aGlzLmlucHV0ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbmZpZyBvYmplY3RcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbmZpZyBvYmplY3RcbiAgICAgKi9cbiAgZ2V0Q29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZztcbiAgfVxuXG4gIC8qKlxuICAgICAqIFNldHMgdGhlIGlucHV0IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGlucHV0SlNPTiAtIElucHV0IEpTT05cbiAgICAgKiBAcmV0dXJucyB7TGluZUNvbmZpZ30gaW5zdGFuY2Ugb2JqZWN0XG4gICAgICovXG4gIHNldElucHV0KGlucHV0SlNPTikge1xuICAgIHRoaXMuaW5wdXQgPSBpbnB1dEpTT047XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICAgKiBWYWxpZGF0ZXMgYW5kIHZlcmlmaWVzIHRoZSBpbnB1dCBKU09OIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtMaW5lQ29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgdmFsaWRhdGVJbnB1dCgpIHtcbiAgICB2YWxpZGF0ZUJhc2VJbnB1dCh0aGlzLmlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgICAqIENsb25lcyB0aGUgaW5wdXQgSlNPTiBpbnRvIHRoZSBjb25maWcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7TGluZUNvbmZpZ30gaW5zdGFuY2Ugb2JqZWN0XG4gICAgICovXG4gIGNsb25lKCkge1xuICAgIHRoaXMuY29uZmlnID0gdXRpbHMuZGVlcENsb25lKHRoaXMuaW5wdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IExpbmVDb25maWc7XG4iXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfZ2V0UHJvdG90eXBlT2YiLCJfaW5oZXJpdHMiLCJfY2FsbFN1cGVyIiwidCIsIm8iLCJlIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiQmFzZUNvbmZpZyIsInZhbGlkYXRlQmFzZUlucHV0IiwidXRpbHMiLCJMaW5lQ29uZmlnIiwiX0Jhc2VDb25maWciLCJfdGhpcyIsImNvbmZpZyIsImlucHV0Iiwia2V5IiwidmFsdWUiLCJnZXRDb25maWciLCJzZXRJbnB1dCIsImlucHV0SlNPTiIsInZhbGlkYXRlSW5wdXQiLCJjbG9uZSIsImRlZXBDbG9uZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Line/LineConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Line/helpers/helpers.js":
/*!************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Line/helpers/helpers.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   createLine: function() { return /* binding */ createLine; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawDataLines: function() { return /* binding */ drawDataLines; },\n/* harmony export */   drawDataPoints: function() { return /* binding */ drawDataPoints; },\n/* harmony export */   getDataPointValues: function() { return /* binding */ getDataPointValues; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   processDataPoints: function() { return /* binding */ processDataPoints; },\n/* harmony export */   toggleDataPointSelection: function() { return /* binding */ toggleDataPointSelection; },\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translateLineGraph: function() { return /* binding */ translateLineGraph; },\n/* harmony export */   translateLines: function() { return /* binding */ translateLines; },\n/* harmony export */   translatePoints: function() { return /* binding */ translatePoints; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../helpers/shapeSVG */ \"./packages/carbon-graphs/src/js/helpers/shapeSVG.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef Line\n */\n\n/**\n * Returns the internal values subset which is the array that was created from the input JSON.\n * This array has information for each data point w.r.t shape, colors and on click callback along with\n * x and y co-ordinates.\n *\n * @private\n * @param {object} target - Object containing the subsets\n * @returns {Array} List of data point subsets\n */\nvar getDataPointValues = function getDataPointValues(target) {\n  return target.internalValuesSubset;\n};\n\n/**\n * Creates a d3 svg line\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {Array} d - Data point set containing data point value objects\n * @returns {object} d3 line object\n */\nvar createLine = function createLine(scale, d) {\n  var newLine = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.line().defined(function (value) {\n    return value.y !== null && value.y !== undefined;\n  }).x(function (value) {\n    return scale.x(value.x);\n  }).y(function (value) {\n    return scale[value.yAxis](value.y);\n  }).curve(d.interpolationType);\n  return newLine(getDataPointValues(d));\n};\n/**\n * Transforms the point in the Line graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @returns {Function} - translate function for d3 transform\n */\nvar transformPoint = function transformPoint(scale) {\n  return function (value) {\n    return function (scaleFactor) {\n      var getX = function getX(val) {\n        return scale.x(val.x);\n      };\n      var getY = function getY(val) {\n        return scale[val.yAxis](val.y);\n      };\n      return \"translate(\".concat(getX(value), \",\").concat(getY(value), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms lines for a data point set in the Line graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 select object\n */\nvar translateLines = function translateLines(scale, canvasSVG, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].lineGraphContent, \" .\").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].line)).select('path').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('d', function (value) {\n    return createLine(scale, value);\n  });\n};\n/**\n * Transforms points for a data point set in the Line graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} cls - selector for the data point translation\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 select object\n */\nvar translatePoints = function translatePoints(scale, canvasSVG, cls, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].lineGraphContent, \" .\").concat(cls)).each(function (d) {\n    var pointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    pointSVG.select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPoint(scale)(d)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__.getTransformScale)(this));\n    });\n  });\n};\n/**\n * Toggles the selection of a data point, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection));\n  selectedPointNode.attr('aria-hidden', !(selectedPointNode.attr('aria-hidden') === 'true'));\n  return selectedPointNode;\n};\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      selectedTarget.attr('aria-hidden', true);\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Called on resize, translates the data point values.\n * This includes:\n *  Lines\n *  Points\n *  Selected point indicators\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar translateLineGraph = function translateLineGraph(scale, canvasSVG, config) {\n  (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.translateSVGElement)(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentLinesGroup, config);\n  (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.translateSVGElement)(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup, config);\n  translateLines(scale, canvasSVG, config);\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, config);\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection, config);\n};\n/**\n * Draws lines using the data point values.\n * Lines are created using d3 svg line with linear interpolation.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} lineGroupSVG - d3 html element of the line group\n * @returns {undefined} - returns nothing\n */\nvar drawDataLines = function drawDataLines(scale, config, lineGroupSVG) {\n  return lineGroupSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].line, true).append('path').attr('d', function (value) {\n    return createLine(scale, value);\n  }).attr('style', function (value) {\n    return \"stroke: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getColorForTarget)(value), \"; stroke-dasharray: \").concat(value.style.strokeDashArray, \";\");\n  }).attr('aria-hidden', false).attr('aria-describedby', function (target) {\n    return target.key;\n  });\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroupPath - d3 html element of the points group\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar drawDataPoints = function drawDataPoints(scale, config, pointGroupPath, legendSVG) {\n  var renderDataPointPath = function renderDataPointPath(path, value, index) {\n    return path.append(function () {\n      var _legendSVG$select;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(value)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point,\n        svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getColorForTarget)(value), \";\"),\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': legendSVG ? ((_legendSVG$select = legendSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby='\").concat(value.key, \"']\"))) === null || _legendSVG$select === void 0 ? void 0 : _legendSVG$select.attr('aria-current')) === 'false' : 'false',\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    return path.append(function () {\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__.getSVGObject)(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE, _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_PLOT_SELECTION_SCALE)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection,\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': true,\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  var renderCriticalityPath = function renderCriticalityPath(path, value, index, cls) {\n    return path.append(function () {\n      var _document$querySelect;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(value)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \" \").concat(cls),\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) === 'false',\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  pointGroupPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    if (d.isCritical) {\n      config.hasCriticality = true;\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityOuterPoint);\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityInnerPoint);\n    }\n    renderDataPointPath(dataPointSVG, d, i);\n  });\n};\n/**\n * Draws the Line graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the lines and points\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget, legendSVG) {\n  var lineSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].lineGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var lineGroupSVG = lineSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentLinesGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.calculateVerticalPadding)(config), \")\"));\n  var linePath = lineGroupSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].line)).data([dataTarget]);\n  drawDataLines(scale, config, linePath.enter());\n  linePath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  if (dataTarget.showShapes) {\n    var currentPointsPath = lineSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup)).data([dataTarget]);\n    currentPointsPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.calculateVerticalPadding)(config), \")\"));\n    currentPointsPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n    var pointPath = lineSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point)).data(getDataPointValues(dataTarget).filter(function (d) {\n      return d.y !== null && d.y !== undefined;\n    }));\n    drawDataPoints(scale, config, pointPath.enter(), legendSVG);\n    pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  }\n};\n\n/**\n * Extracts regions inside value and prepare a list of value region\n *\n * @param {object} dataTarget - Data points object\n * @param {Function} getXDataValues - checks if the value is valid and extract value for x-axis\n *\n * @returns {Array} value region subset\n */\nvar getValueRegionSubset = function getValueRegionSubset(dataTarget, getXDataValues) {\n  var valueRegionSubset = [];\n  var valueRegions = [];\n  var valueRegion = {\n    color: undefined,\n    values: []\n  };\n  var previousColor;\n  dataTarget.values.forEach(function (value) {\n    if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(value.region) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(value.region.start) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(value.region.end)) {\n      // If the color is different, then move it to new region set\n      if (previousColor !== value.region.color) {\n        if (valueRegion.values.length > 0) {\n          valueRegionSubset.push(valueRegion);\n        }\n        valueRegion = {\n          color: value.region.color,\n          values: []\n        };\n      }\n      previousColor = value.region.color;\n      valueRegion.color = value.region.color;\n      valueRegion.values.push({\n        x: getXDataValues(value.x),\n        start: value.region.start,\n        end: value.region.end\n      });\n    } else {\n      valueRegionSubset.push(valueRegion);\n      previousColor = undefined;\n      valueRegion = {\n        color: undefined,\n        values: []\n      };\n    }\n  });\n  valueRegionSubset.push(valueRegion);\n\n  // Prepare final value regions list\n  valueRegionSubset.forEach(function (region) {\n    // Consider only the regions with values\n    if (region.values.length > 0) {\n      valueRegions.push(region);\n      // Add start and end of a valueRegion to new valueRegion,\n      // This is to cover the start and end data value with region.\n      if (region.values.length > 1) {\n        valueRegions.push({\n          color: region.color,\n          values: region.values.slice(0, 1)\n        });\n        valueRegions.push({\n          color: region.color,\n          values: region.values.slice(region.values.length - 1)\n        });\n      }\n    }\n  });\n  return valueRegions;\n};\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  var type = graphConfig.axis.x.type;\n  var getXDataValues = function getXDataValues(x) {\n    if (!(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.isValidAxisType)(x, type)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_6__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.parseTypedValue)(x, type);\n  };\n  // Update the interpolation type\n  dataTarget.interpolationType = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.getInterpolationType)(dataTarget.type);\n  dataTarget.style = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.getDefaultValue)(dataTarget.style, {});\n  dataTarget.style = {\n    strokeDashArray: (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_14__.getStrokeDashArray)(dataTarget.style)\n  };\n  dataTarget.showShapes = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.getDefaultValue)(dataTarget.showShapes, graphConfig.showShapes);\n  dataTarget.legendOptions = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.getDefaultLegendOptions)(graphConfig, dataTarget);\n  graphConfig.shownTargets.push(dataTarget.key);\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    return {\n      onClick: dataTarget.onClick,\n      isCritical: value.isCritical || false,\n      x: getXDataValues(value.x),\n      y: value.y,\n      color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_COLOR,\n      label: dataTarget.label || {},\n      shape: dataTarget.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE,\n      yAxis: dataTarget.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y_AXIS,\n      key: dataTarget.key\n    };\n  });\n  dataTarget.valueRegionSubset = getValueRegionSubset(dataTarget, getXDataValues);\n  return dataTarget;\n};\n/**\n * Handler for Request animation frame, executes on resize.\n * * Order of execution\n * * Shows/hides the regions\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {function()} callback function handler for RAF\n */\nvar onAnimationHandler = function onAnimationHandler(graphContext, config, canvasSVG) {\n  return function () {\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.processRegions)(graphContext, config, canvasSVG);\n  };\n};\n/**\n * Click handler for legend item. Removes the line from graph when clicked\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {Line} control - Line instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendClickHandler)(element);\n    var legendSelected = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element));\n    updateShownTarget(config.shownTargets, item);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', true);\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    window.requestAnimationFrame(onAnimationHandler(graphContext, config, canvasSVG));\n  };\n};\n/**\n * Hover handler for legend item. Highlights current line and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \"[aria-describedby=\\\"\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].blur, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n    // Highlight the line of the item hovered on\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\"svg[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n\n    // Highlight region(s) of the item hovered on, only if the content is currently displayed\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.regionLegendHoverHandler)(graphTargets, canvasSVG, item.key, state);\n  };\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n/**\n * CLear the graph data points and lines currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Line/helpers/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Line/index.js":
/*!**************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Line/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Line__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Line */ \"./packages/carbon-graphs/src/js/controls/Line/Line.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9MaW5lL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29udHJvbHMvTGluZS9pbmRleC5qcz9lNGY2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaW5lIGZyb20gJy4vTGluZSc7XG5cbmV4cG9ydCB7IExpbmUgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbIkxpbmUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Line/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/PairedResult/PairedResult.js":
/*!*****************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/PairedResult/PairedResult.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js\");\n/* harmony import */ var _helpers_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/selectionIndicatorHelpers */ \"./packages/carbon-graphs/src/js/controls/PairedResult/helpers/selectionIndicatorHelpers.js\");\n/* harmony import */ var _PairedResultConfig__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./PairedResultConfig */ \"./packages/carbon-graphs/src/js/controls/PairedResult/PairedResultConfig.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} PairedResult\n * @typedef {object} GraphContent\n * @typedef {object} PairedResultConfig\n */\n\n/**\n * Calculates the min and max values for the x axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points\n */\nvar calculateValuesRangeXAxis = function calculateValuesRangeXAxis(values) {\n  var xAxisValuesList = values.map(function (i) {\n    return Object.keys(i).map(function (j) {\n      // if the x-axis is a timeseries, then convert it to an epoc int\n      // for easier calculations\n      if (typeof i[j].x === 'string' || i[j].x instanceof Date) {\n        return _helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].getEpocFromDateString(i[j].x);\n      }\n      return i[j].x;\n    });\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(xAxisValuesList.map(function (i) {\n      return Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(i));\n    }))),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(xAxisValuesList.map(function (i) {\n      return Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(i));\n    })))\n  };\n};\n\n/**\n * Calculates the min and max values for the y or y2 axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points\n */\nvar calculateValuesRangeYAxis = function calculateValuesRangeYAxis(values) {\n  var yAxisValuesList = values.map(function (i) {\n    return Object.keys(i).map(function (j) {\n      return i[j].y;\n    });\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(yAxisValuesList.map(function (i) {\n      return Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(i));\n    }))),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(yAxisValuesList.map(function (i) {\n      return Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(i));\n    })))\n  };\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} PairedResultConfig config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _PairedResultConfig__WEBPACK_IMPORTED_MODULE_17__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n\n/**\n * Filters invalid data like null and blank.\n *\n * @private\n * @param {object} data - Data points object\n * @returns {object} filteredData - filtered data object\n */\nvar filterPairedResultData = function filterPairedResultData(data) {\n  return data.map(function (value) {\n    var filteredValue = {};\n    (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.iterateOnPairType)(function (t) {\n      if (value[t] != null && !((0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(value[t]) === 'object' && Object.keys(value[t]).length === 0)) {\n        filteredValue[t] = value[t];\n      }\n    });\n    return filteredValue;\n  });\n};\n/**\n * A Paired result graph is a graph that is represented by 2 points\n * and a line connecting them. There may be an optional 3rd datapoint\n * representing a median between them.\n *\n * @example\n * You can have 3 pairs of x and y co-ordinates with different x and y values to make option 3 below.\n * Or\n * You can have 3 identical X co-ordinates with varying Y co-ordinates to have option 1, shown below.\n *   o\n *   |\n *   |\n *   |\n *   |\n *   o\n *\n *  // Or\n *\n * o------------o\n *\n * // Or\n * o\n *  \\\n *   \\\n *    \\\n *     \\\n *      o\n *\n * // etc.\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n * @module PairedResult\n * @class PairedResult\n */\nvar PairedResult = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {PairedResultConfig} input - Input JSON instance created using GraphConfig\n     */\n  function PairedResult(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PairedResult);\n    _this = _callSuper(this, PairedResult);\n    _this.config = loadInput(input);\n    _this.type = 'PairedResult';\n    _this.config.yAxis = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(_this.config.yAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Y_AXIS);\n    _this.config.values = filterPairedResultData(_this.config.values);\n    _this.valuesRange = {};\n    _this.valuesRange.x = calculateValuesRangeXAxis(_this.config.values);\n    _this.valuesRange[_this.config.yAxis] = calculateValuesRangeYAxis(_this.config.values);\n    _this.dataTarget = {};\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(PairedResult, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PairedResult, [{\n    key: \"load\",\n    value: function load(graph) {\n      var _this2 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_19__.validatePairedResultData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].isEmptyArray(this.dataTarget.values) && (_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.regions) || _helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.valueRegionSubset))) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.renderRegion)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.hoverHandler)(graph.config, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      if (graph.axesLabelShapeGroup[this.config.yAxis]) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.iterateOnPairType)(function (type) {\n          (0,_helpers_label__WEBPACK_IMPORTED_MODULE_10__.prepareLabelShapeItem)(graph.config, {\n            key: \"\".concat(_this2.dataTarget.key, \"_\").concat(type),\n            label: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this2.dataTarget.label, type),\n            color: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this2.dataTarget.color, type),\n            shape: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this2.dataTarget.shape, type),\n            values: _this2.dataTarget.values\n          }, graph.axesLabelShapeGroup[_this2.config.yAxis]);\n        });\n      }\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      var _this3 = this;\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_12__.removeRegion)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_13__[\"default\"].regionGroup)), this.dataTarget);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.iterateOnPairType)(function (type) {\n        var key = \"\".concat(_this3.dataTarget.key, \"_\").concat(type);\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_11__.removeLegendItem)(graph.legendSVG, {\n          key: key\n        });\n        (0,_helpers_label__WEBPACK_IMPORTED_MODULE_10__.removeLabelShapeItem)(graph.axesLabelShapeGroup[_this3.config.yAxis], {\n          key: key\n        }, graph.config);\n      });\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      var _this4 = this;\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.values)) {\n        if (_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.regions) || _helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.valueRegionSubset)) {\n          var values = this.dataTarget.values;\n          if ((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.isSinglePairedResultTargetDisplayed)(graph.config, graph)) {\n            graph.config.shouldHideAllRegion = false;\n          } else if (graph.content.length > 1) {\n            // If graph has more than 1 content, we compare the regions if they are identical show and hide if even atleast one of them is not.\n            // check if paired Data is proper i.e - region for each key(high, mid and low) in value should be there\n            var isPairedDataProper = values.every(function (value) {\n              return (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.isRegionMappedToAllValues)(value, _this4.dataTarget.regions || _this4.dataTarget.valueRegionSubset);\n            });\n            graph.config.shouldHideAllRegion = !isPairedDataProper || graph.config.shouldHideAllRegion || !(0,_helpers_region__WEBPACK_IMPORTED_MODULE_12__.areRegionsIdentical)(graph.svg);\n          }\n          (0,_helpers_region__WEBPACK_IMPORTED_MODULE_12__.translateRegion)(graph.scale, graph.config, graph.svg.select(\"g[aria-describedby=\\\"region_\".concat(this.dataTarget.key, \"\\\"]\")), this.dataTarget.yAxis, _helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].notEmpty(this.dataTarget.valueRegionSubset));\n        } else {\n          graph.config.shouldHideAllRegion = true;\n        }\n        if (graph.config.shouldHideAllRegion) {\n          (0,_helpers_region__WEBPACK_IMPORTED_MODULE_12__.hideAllRegions)(graph.svg);\n        }\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.translatePairedResultGraph)(graph.scale, graph.svg, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      var _this5 = this;\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.hoverHandler)(graph.config, graph.svg)\n      };\n      var constructLegendLabels = function constructLegendLabels(d, type) {\n        return {\n          shape: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(d.shape, type),\n          color: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(d.color, type),\n          label: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(d.label, type),\n          key: \"\".concat(d.key, \"_\").concat(type),\n          values: d.values,\n          legendOptions: d.legendOptions,\n          type: type\n        };\n      };\n      this.config.values = _helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].deepClone(graphData.values);\n      this.config.values = filterPairedResultData(this.config.values);\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_19__.validatePairedResultData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.processDataPoints)(graph.config, this.config, true);\n      var drawBox = function drawBox(boxPath) {\n        (0,_helpers_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_16__.drawSelectionIndicator)(graph.scale, graph.config, boxPath);\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.drawLine)(graph.scale, graph.config, boxPath);\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.drawPoints)(graph.scale, graph.config, boxPath, graph.legendSVG);\n      };\n      var types = ['high', 'mid', 'low'];\n      types.forEach(function (type) {\n        var label = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(graph.contentConfig[0].label, type);\n        if (label && label.display) {\n          var pairedResultGraph = graph.contentConfig.filter(function (pairedResult) {\n            return pairedResult.key === graphData.key;\n          });\n          if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].isEmptyArray(pairedResultGraph)) {\n            (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_11__.reflowLegend)(graph.legendSVG, constructLegendLabels(pairedResultGraph[0], type), graph, eventHandlers);\n          }\n        }\n      });\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.iterateOnPairType)(function (type) {\n        var key = \"\".concat(_this5.dataTarget.key, \"_\").concat(type);\n        (0,_helpers_label__WEBPACK_IMPORTED_MODULE_10__.removeLabelShapeItem)(graph.axesLabelShapeGroup[_this5.config.yAxis], {\n          key: key\n        }, graph.config);\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_14__[\"default\"].isEmpty(graphData.values)) {\n        (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.iterateOnPairType)(function (type) {\n          (0,_helpers_label__WEBPACK_IMPORTED_MODULE_10__.prepareLabelShapeItem)(graph.config, {\n            key: \"\".concat(_this5.dataTarget.key, \"_\").concat(type),\n            label: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this5.dataTarget.label, type),\n            color: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this5.dataTarget.color, type),\n            shape: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getValue)(_this5.dataTarget.shape, type),\n            values: _this5.dataTarget.values\n          }, graph.axesLabelShapeGroup[_this5.config.yAxis]);\n        });\n      }\n      var internalValuesSubset = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.getDataPointValues)(this.dataTarget);\n      graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_13__[\"default\"].pairedBox)).remove();\n      var pairedBoxSVG = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_13__[\"default\"].pairedBox)).data(internalValuesSubset);\n      pairedBoxSVG.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_13__[\"default\"].pairedBox, true).attr('aria-selected', false).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_18__.getXAxisXPosition)(graph.config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_18__.calculateVerticalPadding)(graph.config), \")\")).call(drawBox);\n      pairedBoxSVG.exit().remove();\n      this.valuesRange[this.config.yAxis] = calculateValuesRangeYAxis(this.config.values);\n      this.resize(graph);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_15__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_7__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PairedResult);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/PairedResult/PairedResult.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/PairedResult/PairedResultConfig.js":
/*!***********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/PairedResult/PairedResultConfig.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n/**\n * API to parse consumer input for PairedResult graph\n *\n * @class PairedResultConfig\n */\nvar PairedResultConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function PairedResultConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PairedResultConfig);\n    _this = _callSuper(this, PairedResultConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * Returns the config object\n     *\n     * @returns {object} config object\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(PairedResultConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PairedResultConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @param {object} inputJSON - Input JSON\n       * @returns {PairedResultConfig} instance object\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       *\n       * @returns {PairedResultConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.validateBaseInput)(this.input);\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {PairedResultConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PairedResultConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QYWlyZWRSZXN1bHQvUGFpcmVkUmVzdWx0Q29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFNBQUFLLFdBQUFDLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLFdBQUFELENBQUEsR0FBQUosaUZBQUEsQ0FBQUksQ0FBQSxHQUFBTCw0RkFBQSxDQUFBSSxDQUFBLEVBQUFHLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBSixDQUFBLEVBQUFDLENBQUEsUUFBQUwsaUZBQUEsQ0FBQUcsQ0FBQSxFQUFBTSxXQUFBLElBQUFMLENBQUEsQ0FBQU0sS0FBQSxDQUFBUCxDQUFBLEVBQUFFLENBQUE7QUFBQSxTQUFBQywwQkFBQSxjQUFBSCxDQUFBLElBQUFRLE9BQUEsQ0FBQUMsU0FBQSxDQUFBQyxPQUFBLENBQUFDLElBQUEsQ0FBQVAsT0FBQSxDQUFBQyxTQUFBLENBQUFHLE9BQUEsaUNBQUFSLENBQUEsYUFBQUcseUJBQUEsWUFBQUEsMEJBQUEsYUFBQUgsQ0FBQTtBQUV5RDtBQUM5Qjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBLElBS01lLGtCQUFrQiwwQkFBQUMsV0FBQTtFQUN0QjtBQUNGO0FBQ0E7RUFDRSxTQUFBRCxtQkFBQSxFQUFjO0lBQUEsSUFBQUUsS0FBQTtJQUFBdkIsaUZBQUEsT0FBQXFCLGtCQUFBO0lBQ1pFLEtBQUEsR0FBQWxCLFVBQUEsT0FBQWdCLGtCQUFBO0lBQ0FFLEtBQUEsQ0FBS0MsTUFBTSxHQUFHLElBQUk7SUFDbEJELEtBQUEsQ0FBS0UsS0FBSyxHQUFHLElBQUk7SUFBQyxPQUFBRixLQUFBO0VBQ3BCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRW5CLDJFQUFBLENBQUFpQixrQkFBQSxFQUFBQyxXQUFBO0VBQUEsT0FBQXJCLDhFQUFBLENBQUFvQixrQkFBQTtJQUFBSyxHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBQyxVQUFBLEVBQVk7TUFDVixPQUFPLElBQUksQ0FBQ0osTUFBTTtJQUNwQjs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFMRTtJQUFBRSxHQUFBO0lBQUFDLEtBQUEsRUFNQSxTQUFBRSxTQUFTQyxTQUFTLEVBQUU7TUFDbEIsSUFBSSxDQUFDTCxLQUFLLEdBQUdLLFNBQVM7TUFDdEIsT0FBTyxJQUFJO0lBQ2I7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFO0lBQUFKLEdBQUE7SUFBQUMsS0FBQSxFQUtBLFNBQUFJLGNBQUEsRUFBZ0I7TUFDZFosbUVBQWlCLENBQUMsSUFBSSxDQUFDTSxLQUFLLENBQUM7TUFDN0IsT0FBTyxJQUFJO0lBQ2I7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtFQUpFO0lBQUFDLEdBQUE7SUFBQUMsS0FBQSxFQUtBLFNBQUFLLE1BQUEsRUFBUTtNQUNOLElBQUksQ0FBQ1IsTUFBTSxHQUFHSixzREFBSyxDQUFDYSxTQUFTLENBQUMsSUFBSSxDQUFDUixLQUFLLENBQUM7TUFDekMsT0FBTyxJQUFJO0lBQ2I7RUFBQztBQUFBLEVBaEQ4QlAsd0RBQVU7QUFtRDNDLCtEQUFlRyxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QYWlyZWRSZXN1bHQvUGFpcmVkUmVzdWx0Q29uZmlnLmpzP2M1YjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQmFzZUNvbmZpZywgeyB2YWxpZGF0ZUJhc2VJbnB1dCB9IGZyb20gJy4uLy4uL2NvcmUvQmFzZUNvbmZpZyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vaGVscGVycy91dGlscyc7XG5cbi8qKlxuICogQVBJIHRvIHBhcnNlIGNvbnN1bWVyIGlucHV0IGZvciBQYWlyZWRSZXN1bHQgZ3JhcGhcbiAqXG4gKiBAY2xhc3MgUGFpcmVkUmVzdWx0Q29uZmlnXG4gKi9cbmNsYXNzIFBhaXJlZFJlc3VsdENvbmZpZyBleHRlbmRzIEJhc2VDb25maWcge1xuICAvKipcbiAgICAgKiBAaW5oZXJpdGRvY1xuICAgICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gbnVsbDtcbiAgICB0aGlzLmlucHV0ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbmZpZyBvYmplY3RcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IGNvbmZpZyBvYmplY3RcbiAgICAgKi9cbiAgZ2V0Q29uZmlnKCkge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZztcbiAgfVxuXG4gIC8qKlxuICAgICAqIFNldHMgdGhlIGlucHV0IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGlucHV0SlNPTiAtIElucHV0IEpTT05cbiAgICAgKiBAcmV0dXJucyB7UGFpcmVkUmVzdWx0Q29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgc2V0SW5wdXQoaW5wdXRKU09OKSB7XG4gICAgdGhpcy5pbnB1dCA9IGlucHV0SlNPTjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgICAqIFZhbGlkYXRlcyBhbmQgdmVyaWZpZXMgdGhlIGlucHV0IEpTT04gb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UGFpcmVkUmVzdWx0Q29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgdmFsaWRhdGVJbnB1dCgpIHtcbiAgICB2YWxpZGF0ZUJhc2VJbnB1dCh0aGlzLmlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgICAqIENsb25lcyB0aGUgaW5wdXQgSlNPTiBpbnRvIHRoZSBjb25maWcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UGFpcmVkUmVzdWx0Q29uZmlnfSBpbnN0YW5jZSBvYmplY3RcbiAgICAgKi9cbiAgY2xvbmUoKSB7XG4gICAgdGhpcy5jb25maWcgPSB1dGlscy5kZWVwQ2xvbmUodGhpcy5pbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFpcmVkUmVzdWx0Q29uZmlnO1xuIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiX2luaGVyaXRzIiwiX2NhbGxTdXBlciIsInQiLCJvIiwiZSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJhcHBseSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsIkJhc2VDb25maWciLCJ2YWxpZGF0ZUJhc2VJbnB1dCIsInV0aWxzIiwiUGFpcmVkUmVzdWx0Q29uZmlnIiwiX0Jhc2VDb25maWciLCJfdGhpcyIsImNvbmZpZyIsImlucHV0Iiwia2V5IiwidmFsdWUiLCJnZXRDb25maWciLCJzZXRJbnB1dCIsImlucHV0SlNPTiIsInZhbGlkYXRlSW5wdXQiLCJjbG9uZSIsImRlZXBDbG9uZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/PairedResult/PairedResultConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   createLine: function() { return /* binding */ createLine; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawLine: function() { return /* binding */ drawLine; },\n/* harmony export */   drawPoints: function() { return /* binding */ drawPoints; },\n/* harmony export */   getDataPointValues: function() { return /* binding */ getDataPointValues; },\n/* harmony export */   getSVGObject: function() { return /* reexport safe */ _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__.getSVGObject; },\n/* harmony export */   getValue: function() { return /* binding */ getValue; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   isRegionMappedToAllValues: function() { return /* binding */ isRegionMappedToAllValues; },\n/* harmony export */   isSinglePairedResultTargetDisplayed: function() { return /* binding */ isSinglePairedResultTargetDisplayed; },\n/* harmony export */   iterateOnPairType: function() { return /* binding */ iterateOnPairType; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   processDataPoints: function() { return /* binding */ processDataPoints; },\n/* harmony export */   renderRegion: function() { return /* binding */ renderRegion; },\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translateLines: function() { return /* binding */ translateLines; },\n/* harmony export */   translatePairedResultGraph: function() { return /* binding */ translatePairedResultGraph; },\n/* harmony export */   translatePoints: function() { return /* binding */ translatePoints; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../helpers/shapeSVG */ \"./packages/carbon-graphs/src/js/helpers/shapeSVG.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./selectionIndicatorHelpers */ \"./packages/carbon-graphs/src/js/controls/PairedResult/helpers/selectionIndicatorHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef PairedResult\n */\n\n/**\n * Returns the value based on the type of data point - High, mid or low\n *\n * @private\n * @param {object} val - A value\n * @param {string} type - High, mid or low\n * @returns {object} value of the type\n */\nvar getValue = function getValue(val, type) {\n  return val ? val[type] : '';\n};\n/**\n * Iterates each type of a pair. High, low and mid.\n *\n * @private\n * @param {Function} fn - A function\n * @returns {undefined} - returns nothing\n */\nvar iterateOnPairType = function iterateOnPairType(fn) {\n  return _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].PAIR_ITEM_TYPES.forEach(fn);\n};\n/**\n * Creates a new d3 Paired Result using given x1, x2 and y1,y2 coordinates.\n * Interpolation is default linear\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} d - High and low x,y coordinates\n * @returns {undefined} - returns nothing\n */\nvar createLine = function createLine(scale, d) {\n  var newLine = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.line().x(function (value) {\n    return scale.x(value.x);\n  }).y(function (value) {\n    return scale[d.yAxis](value.y);\n  }).curve(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_INTERPOLATION);\n  return newLine([{\n    x: d.high.x,\n    y: d.high.y\n  }, {\n    x: d.low.x,\n    y: d.low.y\n  }]);\n};\n/**\n * Transforms the point in the Paired Result graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {string} type - high, mid or low\n * @returns {Function} - translate function for d3 transform\n */\nvar transformPoint = function transformPoint(scale, type) {\n  return function (value) {\n    return function (scaleFactor) {\n      var getX = function getX(val) {\n        return scale.x(getValue(val, type).x);\n      };\n      var getY = function getY(val) {\n        return scale[val.yAxis](getValue(val, type).y);\n      };\n      return \"translate(\".concat(getX(value), \",\").concat(getY(value), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms lines for a data point set in the Paired Result graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @returns {object} - d3 select object\n */\nvar translateLines = function translateLines(scale, canvasSVG, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBoxGroup, \" .\").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedLine)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('d', function (d) {\n    return d.high && d.low ? createLine(scale, d) : '';\n  });\n};\n/**\n * Transforms points for a data point set (high, low and mid) in the Paired Result graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @returns {object} - d3 select object\n */\nvar translatePoints = function translatePoints(scale, canvasSVG, config) {\n  return iterateOnPairType(function (type) {\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBoxGroup, \" .\").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \".\").concat(getValue(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"], type))).each(function (d) {\n      var pairedPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n      pairedPointSVG.select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n        return transformPoint(scale, type)(d)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__.getTransformScale)(this));\n      });\n    });\n  });\n};\n/**\n * Draws line between the 2 data points high and low. If either one of them is missing\n * then the line is not drawn.\n * Lines are created using d3 svg line with linear interpolation.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} boxPath - d3 html element of the paired box\n * @returns {object} - d3 append object\n */\nvar drawLine = function drawLine(scale, config, boxPath) {\n  return boxPath.each(function (value, index) {\n    var shouldCreateLine = function shouldCreateLine(d) {\n      var _document$querySelect, _document$querySelect2;\n      return d.high && d.low && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(config.shownTargets, d.high.key) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(config.shownTargets, d.low.key) && ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(d.high.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) !== false && ((_document$querySelect2 = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(d.low.key, \"\\\"]\"))) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.getAttribute('aria-current')) !== false;\n    };\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).append('path').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedLine, true).attr('aria-describedby', value.key).attr('aria-hidden', function (d) {\n      return !shouldCreateLine(d);\n    }).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)).attr('d', value.high && value.low ? createLine(scale, value) : '').on('click', function () {\n      (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.dataPointActionHandler)(config, value, index, this.parentNode);\n    });\n  });\n};\n/**\n * Draws the criticality points with options opted in the input JSON by the consumer for each data set.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroup - d3 html element of the point group (high, mid or low)\n * @param {string} type - High, mid or low\n * @param {object} value - A value\n * @param {number} index - Value index\n * @returns {undefined} - returns nothing\n */\nvar drawCriticalityPoints = function drawCriticalityPoints(scale, config, pointGroup, type, value, index) {\n  var renderPoint = function renderPoint(path, t, v, i, cls) {\n    return path.append(function () {\n      var _document$querySelect3;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(getValue(v, t))).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: \"\".concat(cls),\n        transformFn: transformPoint(scale, t)(v),\n        onClickFn: function onClickFn() {\n          (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.dataPointActionHandler)(config, v, i, this.parentNode.parentNode);\n        },\n        a11yAttributes: {\n          'aria-hidden': ((_document$querySelect3 = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(getValue(v, t).key, \"\\\"]\"))) === null || _document$querySelect3 === void 0 ? void 0 : _document$querySelect3.getAttribute('aria-current')) === 'false',\n          'aria-describedby': getValue(v, t).key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(v.onClick)\n        }\n      }));\n    });\n  };\n  renderPoint(pointGroup, type, value, index, \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \" \").concat(getValue(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"], type), \" \").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityOuterPoint));\n  renderPoint(pointGroup, type, value, index, \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \" \").concat(getValue(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"], type), \" \").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityInnerPoint));\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 html element of the canvas\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar drawPoints = function drawPoints(scale, config, canvasSVG, legendSVG) {\n  var getDataPointPath = function getDataPointPath(path, type, value, index) {\n    return path.append(function () {\n      var _legendSVG$select;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(getValue(value, type))).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \" \").concat(getValue(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"], type)),\n        svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getColorForTarget)(getValue(value, type)), \";\"),\n        transformFn: transformPoint(scale, type)(value),\n        onClickFn: function onClickFn() {\n          (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.dataPointActionHandler)(config, value, index, this.parentNode.parentNode);\n        },\n        a11yAttributes: {\n          'aria-hidden': legendSVG ? ((_legendSVG$select = legendSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby='\").concat(getValue(value, type).key, \"']\"))) === null || _legendSVG$select === void 0 ? void 0 : _legendSVG$select.attr('aria-current')) === 'false' : 'false',\n          'aria-describedby': getValue(value, type).key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  canvasSVG.each(function (value, index) {\n    var boxPath = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    iterateOnPairType(function (type) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(getValue(value, type))) {\n        var currentValue = getValue(value, type);\n        var pointGroup = boxPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pointGroup, true);\n        if (currentValue.isCritical) {\n          config.hasCriticality = true;\n          drawCriticalityPoints(scale, config, pointGroup, type, value, index);\n        }\n        getDataPointPath(pointGroup, type, value, index);\n      }\n    });\n  });\n};\n/**\n * Returns the internal values subset which is the array that was created from the input JSON.\n * This array has information for each data point w.r.t shape, colors and on click callback along with\n * x and y co-ordinates.\n *\n * @private\n * @param {object} target - Object containing the subsets\n * @returns {Array} List of data point subsets\n */\nvar getDataPointValues = function getDataPointValues(target) {\n  return target.internalValuesSubset;\n};\n/**\n * Draws the PairedResult graph on the canvas element.\n * Once these items are rendered, we will parse through the data points and render the line and points\n * We draw paired box groups. Each box comprises of a Line and 2 points (high and low) possibly mid, if provided\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget, legendSVG) {\n  var drawBox = function drawBox(boxPath) {\n    (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.drawSelectionIndicator)(scale, config, boxPath);\n    drawLine(scale, config, boxPath);\n    drawPoints(scale, config, boxPath, legendSVG);\n  };\n  var pairedBoxGroupSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBoxGroup, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-describedby', dataTarget.key);\n  var pairedBoxPath = pairedBoxGroupSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBox)).data(getDataPointValues(dataTarget));\n  pairedBoxPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBox, true).attr('aria-selected', false).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.calculateVerticalPadding)(config), \")\")).call(drawBox);\n  pairedBoxPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n/**\n * Set shown targets for the data present\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {undefined} - returns nothing\n */\nvar setShownTargets = function setShownTargets(graphConfig, dataTarget) {\n  var types = ['high', 'mid', 'low'];\n  types.forEach(function (t) {\n    var label = getValue(dataTarget.label, t);\n    if (label && label.display) {\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(graphConfig.shownTargets, \"\".concat(dataTarget.key, \"_\").concat(t))) {\n        graphConfig.shownTargets.push(\"\".concat(dataTarget.key, \"_\").concat(t));\n      }\n    }\n  });\n};\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @param {boolean} reflow - flag to check if reflow function called it\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  var reflow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var type = graphConfig.axis.x.type;\n  var getXDataValues = function getXDataValues(x) {\n    if (!(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.isValidAxisType)(x, type)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_6__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.parseTypedValue)(x, type);\n  };\n  var valueRegions = {\n    high: [],\n    low: [],\n    mid: []\n  };\n  var regionObject = {\n    high: {\n      color: undefined,\n      values: []\n    },\n    low: {\n      color: undefined,\n      values: []\n    },\n    mid: {\n      color: undefined,\n      values: []\n    }\n  };\n  if (!reflow && dataTarget.values.length < 1) {\n    setShownTargets(graphConfig, dataTarget);\n  }\n  // Each value is a pair. Construct enough information so that you can\n  // construct a box. Each box would need 3 icons so we need 3 (max) data sets\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    var subset = {};\n    // We are going to iterate through different pair item types: HIGH, LOW and MID\n    iterateOnPairType(function (t) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isDefined(getValue(value, t))) {\n        var currentValue = getValue(value, t);\n        subset[t] = {\n          x: getXDataValues(currentValue.x),\n          y: _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].getNumber(currentValue.y),\n          isCritical: currentValue.isCritical || false,\n          color: getValue(dataTarget.color, t) || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_COLOR,\n          label: getValue(dataTarget.label, t) || {},\n          shape: getValue(dataTarget.shape, t) || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE,\n          key: \"\".concat(dataTarget.key, \"_\").concat(t)\n        };\n        if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(graphConfig.shownTargets, subset[t].key) && !reflow) {\n          graphConfig.shownTargets.push(subset[t].key);\n        }\n\n        // Generate value regions subset, by extracting the region object from each value\n        if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(currentValue.region) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(currentValue.region.start) && !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(currentValue.region.end)) {\n          // If the color is different, then move to new region set.\n          if (regionObject[t].color !== currentValue.region.color) {\n            // eslint-disable-next-line no-unused-expressions\n            regionObject[t].values.length > 0 && valueRegions[t].push(regionObject[t]);\n            regionObject[t] = {\n              color: currentValue.region.color,\n              values: []\n            };\n          }\n          regionObject[t].color = currentValue.region.color;\n          regionObject[t].values.push({\n            x: getXDataValues(currentValue.x),\n            start: currentValue.region.start,\n            end: currentValue.region.end\n          });\n        } else if (regionObject[t].values.length > 0) {\n          valueRegions[t].push(regionObject[t]);\n          regionObject[t] = {\n            color: undefined,\n            values: []\n          };\n        }\n      }\n    });\n    subset.yAxis = dataTarget.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y_AXIS;\n    subset.onClick = dataTarget.onClick;\n    subset.key = dataTarget.key;\n    return subset;\n  });\n  var valueRegionSubset = {\n    high: [],\n    low: [],\n    mid: []\n  };\n  var isValueRegionExist = false;\n  // Check if the value region exist and also\n  // Add start and end of a valueRegion to new valueRegion,\n  // This is to cover the start and end data value with region.\n  iterateOnPairType(function (t) {\n    if (regionObject[t].values.length > 0) {\n      valueRegions[t].push(regionObject[t]);\n    }\n    valueRegions[t].forEach(function (region) {\n      isValueRegionExist = true;\n      valueRegionSubset[t].push(region);\n      if (region.values.length > 1) {\n        valueRegionSubset[t].push({\n          color: region.color,\n          values: region.values.slice(0, 1)\n        });\n        valueRegionSubset[t].push({\n          color: region.color,\n          values: region.values.slice(region.values.length - 1)\n        });\n      }\n    });\n  });\n  dataTarget.valueRegionSubset = isValueRegionExist ? valueRegionSubset : undefined;\n  dataTarget.legendOptions = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.getDefaultLegendOptions)(graphConfig, dataTarget);\n  return dataTarget;\n};\n/**\n * Shows line between the 2 data points high and low. If either one of them is missing\n * then the line is not shown.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} boxPath - d3 html element of the paired box\n * @returns {object} - d3 append object\n */\nvar showLine = function showLine(config, boxPath) {\n  return boxPath.each(function () {\n    var shouldCreateLine = function shouldCreateLine(d) {\n      var _document$querySelect4, _document$querySelect5;\n      return d.high && d.low && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(config.shownTargets, d.high.key) && _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].hasValue(config.shownTargets, d.low.key) && ((_document$querySelect4 = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(d.high.key, \"\\\"]\"))) === null || _document$querySelect4 === void 0 ? void 0 : _document$querySelect4.getAttribute('aria-current')) === 'true' && ((_document$querySelect5 = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(d.low.key, \"\\\"]\"))) === null || _document$querySelect5 === void 0 ? void 0 : _document$querySelect5.getAttribute('aria-current')) === 'true';\n    };\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedLine)).attr('aria-hidden', function (d) {\n      return !shouldCreateLine(d);\n    });\n  });\n};\n/**\n * Called on resize, translates the data point values.\n * This includes:\n *  Lines\n *  Points\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar translatePairedResultGraph = function translatePairedResultGraph(scale, canvasSVG, config) {\n  (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.translateSelectionBox)(scale, canvasSVG, config);\n  (0,_selectionIndicatorHelpers__WEBPACK_IMPORTED_MODULE_14__.translateSelectionItem)(scale, canvasSVG, config);\n  translateLines(scale, canvasSVG, config);\n  translatePoints(scale, canvasSVG, config);\n};\n/**\n * Checks if only one paired result content item is present in the graph\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} graphContext - Graph instance\n * @returns {boolean} true if displayed targets is equal to 1, false otherwise\n */\nvar isSinglePairedResultTargetDisplayed = function isSinglePairedResultTargetDisplayed(config, graphContext) {\n  var displayedPairedResults = [];\n  config.shownTargets.forEach(function (target) {\n    graphContext.contentKeys.forEach(function (key) {\n      if (target.includes(key) && !displayedPairedResults.includes(key)) {\n        displayedPairedResults.push(key);\n      }\n    });\n  });\n  return (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.isSingleTargetDisplayed)(displayedPairedResults, graphContext.content);\n};\n/**\n * Show/hide regions based on the following criteria:\n * * Regions would be checked if they are identical before hiding them.\n * * If only 1 target is displayed -> show the region using unique data set key\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - Pair type - high, low or mid pair object containing the key\n * @returns {undefined} - returns nothing\n */\nvar processRegions = function processRegions(graphContext, config, canvasSVG, _ref) {\n  var key = _ref.key;\n  if (isSinglePairedResultTargetDisplayed(config, graphContext)) {\n    var showHideKeys = config.shownTargets.concat([key]);\n    showHideKeys.forEach(function (targetKey) {\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.showHideRegion)(canvasSVG, \"region_\".concat(targetKey), config.shownTargets.indexOf(targetKey) > -1);\n    });\n  } else if (!config.shouldHideAllRegion && config.shownTargets.length > 0 && (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.areRegionsIdentical)(canvasSVG)) {\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].region)).attr('aria-hidden', false);\n  } else {\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.hideAllRegions)(canvasSVG);\n  }\n};\n/**\n * Checks the region data of Paired Result so that if one of regions for Paired Result data pairs are not provided,\n * i.e. if regions for \"high\" and \"low\" are provided and the values contain data for \"high\", \"mid\" and \"low\",\n * all regions would be hidden(returns false) and if region for all \"high\", \"mid\" and \"low\" is there as well as value contains\n * data for \"high\", \"mid\" and \"low\" then it returns true.\n *\n * @private\n * @param {object} value - pairedResult values\n * @param {object} regionList - List of all the regions provided\n * @returns { boolean } returns true if regions are not missing for the value keys( high, mid or low) else false\n */\nvar isRegionMappedToAllValues = function isRegionMappedToAllValues(value, regionList) {\n  return Object.keys(value).every(function (v) {\n    return Object.prototype.hasOwnProperty.call(regionList, v);\n  });\n};\n/**\n * Handler for Request animation frame, executes on resize.\n *  * Order of execution\n *      * Shows/hides the regions\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} item - paired result type unique key\n * @returns {function()} callback function handler for RAF\n */\nvar onAnimationHandler = function onAnimationHandler(graphContext, config, canvasSVG, item) {\n  return function () {\n    processRegions(graphContext, config, canvasSVG, item);\n  };\n};\n/**\n * Click handler for legend item. Removes the line from graph when clicked\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {PairedResult} control - Paired Result instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendClickHandler)(element);\n    var legendSelected = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element));\n    updateShownTarget(config.shownTargets, item);\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    /*\n      Select only those .carbon-data-pair elements that belong to the particular canvas for which a paired result legend item was clicked\n      and  pass them to showLine() method.\n      This ensures that when there are multiple canvases with paired results in each canvas,\n      selecting a paired result legend item in one canvas does not affect paired results in other canvases.\n      */\n    var pairedBoxGroupClipPath = \"url(#\".concat(config.clipPathId, \")\");\n    var pairedBoxGroup = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBoxGroup));\n    pairedBoxGroup.each(function () {\n      var clipPath = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('clip-path');\n      /* In IE the clip path is encapsulated in quotes (ex: (url(“#carbon-1607926345895-clip\"))) and in other browsers it is not.\n      we are using logic below to remove quotes in internet explorer if present. */\n      if (clipPath.replace(/['\"]+/g, '') === pairedBoxGroupClipPath) {\n        var boxPath = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedBox));\n        showLine(config, boxPath);\n      }\n    });\n    window.requestAnimationFrame(onAnimationHandler(graphContext, config, canvasSVG, item));\n  };\n};\n/**\n * Hover handler for legend item. Highlights current line and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar hoverHandler = function hoverHandler(config, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].region, \"[aria-describedby=\\\"region_\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].regionBlur, hoverState === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendHoverHandler)(config.shownTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n    // Highlight the line of the item hovered on\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pairedPoint, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n\n    // Highlight region(s) of the item hovered on, only if the graph is currently displayed\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.regionLegendHoverHandler)(config.shownTargets, canvasSVG, item.key, state);\n  };\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  var constructLegendLabels = function constructLegendLabels(d, type) {\n    return {\n      shape: getValue(d.shape, type),\n      color: getValue(d.color, type),\n      label: getValue(d.label, type),\n      key: \"\".concat(d.key, \"_\").concat(type),\n      values: dataTarget.values,\n      legendOptions: dataTarget.legendOptions\n    };\n  };\n  if (dataTarget.label && legendSVG) {\n    iterateOnPairType(function (type) {\n      var label = getValue(dataTarget.label, type);\n      if (label && label.display) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.loadLegendItem)(legendSVG, constructLegendLabels(dataTarget, type), config, eventHandlers);\n      }\n    });\n  }\n};\n/**\n * Renders the regions for each pair item, if available\n * Each region in a graph content is created as a group.\n * Each group is defined by its unique id with the prefix \"region_\",\n * so that any region belonging to the pair can be rendered within the paired region group.\n * This is a bit different than other types of graph since we have individual legend\n * for each of the pair types.\n * Criteria for loading the regions:\n *  Each content should show regions for high, low and/or mid upfront\n *  Region should only be hidden if:\n *      Toggled using legend\n *      If more than 1 data set/content is available\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {undefined} - returns nothing\n */\nvar renderRegion = function renderRegion(scale, config, canvasSVG, dataTarget) {\n  var regionGroupSVG = canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].regionGroup));\n  var regionPairGroup = regionGroupSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].regionPairGroup, true).attr('aria-describedby', \"region_\".concat(dataTarget.key));\n  regionPairGroup.call(function () {\n    iterateOnPairType(function (type) {\n      if (dataTarget.valueRegionSubset && dataTarget.valueRegionSubset[type]) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.createValueRegion)(scale, config, regionPairGroup, dataTarget.valueRegionSubset[type], \"region_\".concat(dataTarget.key, \"_\").concat(type), dataTarget.yAxis);\n      } else if (dataTarget.regions && dataTarget.regions[type]) {\n        if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isArray(dataTarget.regions[type]) || _helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isUndefined(dataTarget.regions[type])) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_6__[\"default\"].THROW_MSG_REGION_EMPTY);\n        }\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.createRegion)(scale, config, regionPairGroup, dataTarget.regions[type], \"region_\".concat(dataTarget.key, \"_\").concat(type), dataTarget.yAxis);\n      }\n    });\n  });\n};\n\n/**\n * Clears the paired boxes before redrawing.\n * We are selecting all the box pairs along\n * with all the data sets before clearing them.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/PairedResult/helpers/selectionIndicatorHelpers.js":
/*!**************************************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/PairedResult/helpers/selectionIndicatorHelpers.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataPointActionHandler: function() { return /* binding */ dataPointActionHandler; },\n/* harmony export */   drawSelectionIndicator: function() { return /* binding */ drawSelectionIndicator; },\n/* harmony export */   translateSelectionBox: function() { return /* binding */ translateSelectionBox; },\n/* harmony export */   translateSelectionItem: function() { return /* binding */ translateSelectionItem; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./helpers */ \"./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js\");\n\n\n\n\n\n\n\n\n/**\n * Returns the pair value that's present, to be used when\n * one of the pair item is known to be absent\n *\n * @private\n * @param {object} pair - Object containing high, low and mid pair values along with\n * their x and y co-ordinates.\n * @returns {object} Available pair object value\n */\nvar getIncompletePairObject = function getIncompletePairObject(pair) {\n  if (pair.high) {\n    return pair.high;\n  }\n  if (pair.low) {\n    return pair.low;\n  }\n  return pair.mid;\n};\n/**\n * Checks if any pairs values are present and if they are currently hidden in the graph.\n * The operation of hiding is usually achieved using legend toggle.\n *\n * @summary A pair is incomplete if either high or low value is missing.\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @returns {boolean} If data point high, low or mid is hidden or otherwise\n */\nvar isIncompletePairHidden = function isIncompletePairHidden(config, value) {\n  return config.shownTargets.indexOf(getIncompletePairObject(value).key) < 0;\n};\n/**\n * Although we are displaying the indicator even when the legend item\n * is toggled, we should hide all but the ones we are going to click on.\n *\n * @summary A pair is partial if the both high and low data are present but they are\n * hidden.\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @returns {boolean} True if high or low are hidden from graph or otherwise\n */\nvar isPairPartiallyHidden = function isPairPartiallyHidden(config, value) {\n  return config.shownTargets.indexOf(value.high.key) < 0 || config.shownTargets.indexOf(value.low.key) < 0;\n};\n/**\n * Shows/hides the pair when clicked on one of the data points.\n * When the legend toggle is used one or many data points might be hidden, when\n * a currently visible data point is clicked, we display all the data points back\n * and hide when the consumer closes the popup.\n * This will not be triggered when the data point is:\n *  * Incomplete pair to begin with\n *  * Already has both high and low pairs displayed\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @param {object} target - DOM element of the data point clicked\n * @returns {undefined} - returns nothing\n */\nvar showHideSiblingDataPoint = function showHideSiblingDataPoint(config, value, target) {\n  // Toggle items to force show if hidden or hide, add/remove a class to force display:block\n  var targetNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target);\n  targetNode.select('path').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable, function () {\n    return !_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable);\n  });\n  targetNode.selectAll('svg').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable, function () {\n    return !_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable);\n  });\n  var targetSelectionIndicator = targetNode.select('rect');\n  targetSelectionIndicator.classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable, !targetSelectionIndicator.classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointDisplayEnable));\n};\n/**\n * Checks if the legend item has been toggled for the data set in graph\n *  * If the pair in question doesnt have both high and low data point values\n *  * If one or more are hidden using the legend toggle\n *  * If ones of the data point values are missing i.e. either high or low.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @returns {*|boolean} True if a legend item is toggled, false otherwise\n */\nvar isDataPointLegendToggled = function isDataPointLegendToggled(config, value) {\n  var isCompletePairNotPresent = function isCompletePairNotPresent() {\n    return !!(value.high && value.low) && isPairPartiallyHidden(config, value);\n  };\n  return isCompletePairNotPresent() || isIncompletePairHidden(config, value);\n};\n/**\n * Toggles the selection of a data point, executes on click of a data point.\n * Shows the highlight for the selected data point.\n * If ones of the data points are hidden using legend, then they are also shown for\n * the pair that was selected.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(config, value, target) {\n  var pairNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target);\n  var selectedPairNode = pairNode.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection));\n  pairNode.attr('aria-selected', !(pairNode.attr('aria-selected') === 'true'));\n  selectedPairNode.attr('aria-hidden', !(selectedPairNode.attr('aria-hidden') === 'true'));\n  if (isDataPointLegendToggled(config, value)) {\n    showHideSiblingDataPoint(config, value, target);\n  }\n  return selectedPairNode;\n};\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(config, value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(config, value, target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      var selectedNodeParent = selectedTarget.node().parentNode;\n      _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(selectedNodeParent).attr('aria-selected', false);\n      selectedTarget.attr('aria-hidden', true);\n      if (isDataPointLegendToggled(config, value)) {\n        showHideSiblingDataPoint(config, value, selectedNodeParent);\n      }\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Updates the attributes for the rectangle which serves as a selection indicator for a Paired\n * Result. When a pair is clicked the rectangle shall be toggled visible.\n * The attributes width and height are calculated using x,y and x1,y1 co-ordinates from\n * high and low pair values. They are converted to appropriate \"scale\" using the parameter.\n *\n * @private\n * @param {object} d3PairElement - d3 appended object\n * @param {object} scale - d3 scale for Graph\n * @param {object} value - data point object\n * @returns {object} - d3 append object with correct attributes for creation and translation\n */\nvar updateSelectionIndicatorAttributes = function updateSelectionIndicatorAttributes(d3PairElement, scale, value) {\n  return d3PairElement.attr('x', function (d) {\n    return scale.x(d.high.x) - _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].SELECTION_INDICATOR_X_POSITION;\n  }).attr('y', function (d) {\n    return scale[value.yAxis](d.high.y) - _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].SELECTION_INDICATOR_Y_POSITION;\n  }).attr('width', function (d) {\n    return scale.x(d.low.x) - scale.x(d.high.x) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].SELECTION_INDICATOR_X_POSITION * 2 || _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].SELECTION_INDICATOR_X_POSITION * 2;\n  }).attr('height', function (d) {\n    return scale[value.yAxis](d.low.y) - scale[value.yAxis](d.high.y) + _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].SELECTION_INDICATOR_Y_POSITION * 2;\n  });\n};\n/**\n * Transforms the partial point in the Paired Result graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @returns {Function} - translate function for d3 transform\n */\nvar transformPartialPoint = function transformPartialPoint(scale) {\n  return function (value) {\n    return function (scaleFactor) {\n      var getX = function getX(val) {\n        return scale.x(getIncompletePairObject(val).x);\n      };\n      var getY = function getY(val) {\n        return scale[value.yAxis](getIncompletePairObject(val).y);\n      };\n      return \"translate(\".concat(getX(value), \",\").concat(getY(value), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms selection indicator RECTANGLE for a data point set in the Paired Result graph on resize, with\n * both high and low data points.\n * Needs to have both high and low data points for translation of a \"box\" to occur.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @returns {object} - d3 select object\n */\nvar translateSelectionBox = function translateSelectionBox(scale, canvasSVG, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pairedBoxGroup, \" rect.\").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).each(function (value) {\n    return updateSelectionIndicatorAttributes(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)), scale, value);\n  });\n};\n/**\n * Transforms selection indicator CIRCLE for a data point set in the Paired Result graph on resize, with\n * an incomplete pair i.e. only high or low is present.\n * If both high and low are not present then we load a circle as a selection indicator.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - Graph config object derived from input JSON\n * @returns {object} - d3 select object\n */\nvar translateSelectionItem = function translateSelectionItem(scale, canvasSVG, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pairedBoxGroup, \" .\").concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection)).each(function (value) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPartialPoint(scale)(value)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_4__.getTransformScale)(this));\n    });\n  });\n};\n/**\n * Adds a RECT svg element for each data point pair high AND low.\n *\n * @private\n * @param {object} d3PairElement - d3 select object containing the pair box\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @returns {object} - d3 append object\n */\nvar addRect = function addRect(d3PairElement, scale, config, value) {\n  return updateSelectionIndicatorAttributes(d3PairElement.append('rect').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection, true).attr('rx', 3).attr('ry', 3).attr('aria-hidden', true).attr('aria-describedby', value.key), scale, value);\n};\n\n/**\n * Adds a CIRCLE svg element for each data point pair high OR low OR mid.\n *\n * @private\n * @param {object} d3PairElement - d3 select object containing the pair box\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} value - data point object\n * @returns {undefined} - returns nothing\n */\nvar addCircle = function addCircle(d3PairElement, scale, config, value) {\n  return d3PairElement.append(function () {\n    return new _core_Shape__WEBPACK_IMPORTED_MODULE_1__[\"default\"]((0,_helpers__WEBPACK_IMPORTED_MODULE_6__.getSVGObject)(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__.SHAPES.CIRCLE, _helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].DEFAULT_PLOT_SELECTION_SCALE)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_1__.getDefaultSVGProps)({\n      svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dataPointSelection,\n      transformFn: transformPartialPoint(scale)(value),\n      a11yAttributes: {\n        'aria-hidden': true,\n        'aria-describedby': value.key\n      }\n    }));\n  });\n};\n/**\n * Draws a rectangle around the 2 data points high and low. If either one of them is missing\n * then the rectangle is not drawn. A circle is allocated for any incomplete pair.\n * They are hidden by default, will be shown when a pair is clicked\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} boxPath - d3 html element of the paired box\n * @returns {object} - d3 append object\n */\nvar drawSelectionIndicator = function drawSelectionIndicator(scale, config, boxPath) {\n  return boxPath.each(function (value) {\n    if (!(value.high && value.low)) {\n      return addCircle(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), scale, config, value);\n    }\n    return addRect(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), scale, config, value);\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/PairedResult/helpers/selectionIndicatorHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/PairedResult/index.js":
/*!**********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/PairedResult/index.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _PairedResult__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _PairedResult__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PairedResult */ \"./packages/carbon-graphs/src/js/controls/PairedResult/PairedResult.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QYWlyZWRSZXN1bHQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QYWlyZWRSZXN1bHQvaW5kZXguanM/YmU0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGFpcmVkUmVzdWx0IGZyb20gJy4vUGFpcmVkUmVzdWx0JztcblxuZXhwb3J0IHsgUGFpcmVkUmVzdWx0IGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJQYWlyZWRSZXN1bHQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/PairedResult/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/Pie.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/Pie.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Construct__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Construct */ \"./packages/carbon-graphs/src/js/core/Construct/index.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Pie/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Pie/helpers/translateHelpers.js\");\n/* harmony import */ var _PieConfig__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./PieConfig */ \"./packages/carbon-graphs/src/js/controls/Pie/PieConfig.js\");\n/* harmony import */ var _PieContent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./PieContent */ \"./packages/carbon-graphs/src/js/controls/Pie/PieContent.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Pie\n * @typedef {object} PieConfig\n */\n/**\n * Sets the canvas width\n *\n * @private\n * @param {HTMLElement} container - d3 HTML element object which forms the chart container\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasWidth = function setCanvasWidth(container, config) {\n  config.canvasWidth = config.width;\n};\n/**\n * Sets the canvas width. Canvas rests within a container.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasHeight = function setCanvasHeight(config) {\n  config.canvasHeight = config.height;\n};\n/**\n * Sets the canvas radius for pie chart.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasRadius = function setCanvasRadius(config) {\n  config.canvasRadius = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.min([config.height, config.width]) / 2;\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_AXES_DATA_LOADED}\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _PieConfig__WEBPACK_IMPORTED_MODULE_14__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n/**\n * Executes the before init process checklist, needs to be called by parent control.\n *  Binds the chart id provided in the input JSON to graph container.\n *\n * @private\n * @param {Pie} control - Pie instance\n * @returns {Pie} Pie instance\n */\nvar beforeInit = function beforeInit(control) {\n  control.graphContainer = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(control.config.bindTo);\n  control.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.determineHeight)(control.config, control.config.dimension);\n  control.config.width = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.determineHeight)(control.config, control.config.dimension);\n  return control;\n};\n/**\n * Initializes the necessary Pie constructor objects\n *\n * @private\n * @param {Pie} control - Pie instance\n * @returns {Pie} Pie instance\n */\nvar initConfig = function initConfig(control) {\n  control.graphContainer = null;\n  control.config = {};\n  control.svg = null;\n  control.legendSVG = null;\n  control.content = [];\n  control.contentConfig = [];\n  control.resizeHandler = null;\n  control.d3PieLayoutTransformer = null;\n  control.d3PieArcTransformer = null;\n  return control;\n};\n/**\n * Executes the init process checklist, needs to be called by parent control.\n * Needs to be called post calling beforeInit\n *  Sets the canvas width within the graph container\n *  Determines the height for canvas\n *  Calculates Axes width and height\n *  Calculates Axes label width and height, positioning\n *\n * @private\n * @param {Pie} control - Pie instance\n * @returns {Pie} Pie instance\n */\nvar init = function init(control) {\n  setCanvasWidth(control.graphContainer, control.config);\n  setCanvasHeight(control.config);\n  setCanvasRadius(control.config);\n  control.d3PieLayoutTransformer = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createPieLayout)();\n  control.d3PieArcTransformer = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createArc)(control.config.canvasRadius);\n  return control;\n};\n\n/**\n * A Pie chart is a circular statistical graphic, which is divided into\n * slices to illustrate numerical proportion.\n *\n * Lifecycle functions include:\n *  * BeforeInit\n *  * Init\n *  * Render\n *  * AfterInit\n *\n * @module Pie\n * @class Pie\n */\nvar Pie = /*#__PURE__*/function (_Construct) {\n  /**\n     * @class\n     * @param {PieConfig} input - Input JSON instance created using PieConfig\n     */\n  function Pie(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Pie);\n    _this = _callSuper(this, Pie);\n    initConfig(_this);\n    _this.generate(input);\n    return _this;\n  }\n\n  /**\n     * Draw function that is called by the parent control. This draws the legend and the content for the chart construct.\n     *\n     * @description Since we dont have the concept of z-index in visualization,\n     * the order of rendering should be following:\n     *  * SVG container\n     *  * Legend\n     *  * Data [In our case we have load and unload]\n     * @param {object} input - Input JSON\n     * @returns {HTMLElement} d3 selection node of svg.\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Pie, _Construct);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Pie, [{\n    key: \"generate\",\n    value: function generate(input) {\n      this.config = loadInput(input);\n      (0,_PieConfig__WEBPACK_IMPORTED_MODULE_14__.processInput)(input, this.config);\n      beforeInit(this);\n      init(this);\n      var containerSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindTo).append('div').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].container, true).style('padding-top', this.config.removeContainerPadding && 0).style('padding-bottom', this.config.removeContainerPadding && 0);\n      this.svg = containerSVG.insert('svg', ':first-child').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pieChartCanvas, true).attr('role', 'img').attr('height', this.config.canvasHeight).attr('width', this.config.canvasWidth);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createDefs)(this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createPieContentContainer)(this.config, this.svg);\n      if (this.config.showLegend) {\n        this.legendSVG = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_8__.createLegend)(this.config, this.config.bindLegendTo ? _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindLegendTo) : containerSVG);\n      }\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.attachEventHandlers)(this);\n      return this.svg;\n    }\n\n    /**\n       * Resizes the graph canvas. Uses the clipPath def.\n       *\n       *  @returns {Pie} - Pie instance\n       */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_13__.translatePieGraph)(this);\n      return this;\n    }\n\n    /**\n     * Loads the content into the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * @param {object|Array} input - Pie content\n     * @returns {Pie} - Pie instance\n     */\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(input) {\n      var _this2 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__.contentHandler)(input, function (i) {\n        var content = new _PieContent__WEBPACK_IMPORTED_MODULE_15__[\"default\"](i);\n        content.load(_this2);\n        _this2.content.push(i.key);\n        _this2.contentConfig.push(content);\n      });\n      this.contentConfig.forEach(function (control) {\n        return control.resize(_this2);\n      });\n      return this;\n    }\n\n    /**\n     * Unloads the content from the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets.\n     *\n     * @param {object} input - Pie content to be removed\n     * @returns {Pie} - Pie instance\n     */\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent(input) {\n      var _this3 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_9__.contentHandler)(input, function (i) {\n        var index = _this3.content.indexOf(i.key);\n        if (index < 0) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_INVALID_OBJECT_PROVIDED);\n        }\n        _this3.contentConfig[index].unload(_this3);\n        _this3.content.splice(index, 1);\n        _this3.contentConfig.splice(index, 1);\n        _this3.contentConfig.forEach(function (control) {\n          return control.resize(_this3);\n        });\n      });\n      return this;\n    }\n\n    /**\n       * Destroys the graph: Container and canvas.\n       *\n       * @returns {Pie} - Pie instance\n       */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.detachEventHandlers)(this);\n      (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pieChartCanvas));\n      (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_11__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].container));\n      initConfig(this);\n      return this;\n    }\n  }]);\n}(_core_Construct__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Pie);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/Pie.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/PieConfig.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/PieConfig.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processInput: function() { return /* binding */ processInput; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n/**\n * Helper function to set the right legend padding values based on input JSON.\n *\n * @private\n * @param {object} config - config which needs to be updated\n * @param {object} inputLegendPadding - input legend padding provided via input JSON.\n * @returns {object} - padding for Legend\n */\nvar getLegendPadding = function getLegendPadding(config, inputLegendPadding) {\n  // If legendPadding is provided, update the config object with the provided values, else update it with the default constants\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isDefined(config.legendPadding)) {\n    return {\n      top: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputLegendPadding.top, _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.top),\n      bottom: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputLegendPadding.bottom, _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.bottom),\n      right: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputLegendPadding.right, _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.right),\n      left: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(inputLegendPadding.left, _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.left),\n      hasCustomLegendPadding: true\n    };\n  }\n  return {\n    top: _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.top,\n    bottom: _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.bottom,\n    right: _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.right,\n    left: _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].PIE_LEGEND_PADDING.left,\n    hasCustomLegendPadding: false\n  };\n};\n\n/**\n * Processes the input from the JSON and updates the config object.\n * d3 domain and ranges are stored based on the upper and lower x limits.\n *\n * @private\n * @param {object} input - Input JSON provided by the consumer\n * @param {object} config - config object used by the graph\n * @returns {object} - returns configuration object constructed using Input JSON\n */\nvar processInput = function processInput(input, config) {\n  config.clipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_6__.generateClipPathId)();\n  config.bindTo = input.bindTo;\n  config.bindLegendTo = input.bindLegendTo;\n  config.dimension = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(input.dimension, {});\n  config.showLegend = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.getDefaultValue)(input.showLegend, true);\n  config.legendPadding = getLegendPadding(config, input.legendPadding);\n  return config;\n};\n/**\n * API to parse consumer input for Graph\n *\n * @class PieConfig\n */\nvar PieConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function PieConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PieConfig);\n    _this = _callSuper(this, PieConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(PieConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PieConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       * Checks if the following properties are present:\n       *      bindTo\n       *\n       * @throws {module:errors.THROW_MSG_NO_BIND}\n       * @throws {module:errors.THROW_MSG_INVALID_INPUT}\n       * @returns {PieConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isEmpty(this.input)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_INVALID_INPUT);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].isEmpty(this.input.bindTo)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_NO_BIND);\n      }\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {PieConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_9__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PieConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/PieConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/PieContent.js":
/*!******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/PieContent.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateContent: function() { return /* binding */ validateContent; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_GraphConfig__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Graph/GraphConfig */ \"./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Pie/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Pie/helpers/translateHelpers.js\");\n\n\n/**\n * @typedef {object} PieContent\n * @typedef {object} GraphContent\n * @typedef {object} PieConfig\n * @typedef {object} d3\n */\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Pie instance Construct\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  return _objectSpread(_objectSpread({}, dataTarget), {}, {\n    onClick: dataTarget.onClick,\n    color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].DEFAULT_PIE_COLOR,\n    shape: _helpers_constants__WEBPACK_IMPORTED_MODULE_7__[\"default\"].DEFAULT_PIE_LEGEND_SHAPE,\n    label: dataTarget.label || {},\n    key: dataTarget.key\n  });\n};\n/**\n * Validates the newly added pie content into the graph before rendering\n *\n * @private\n * @param {object} input - Newly added graph tasks\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_NO_DATA_POINTS}\n * @throws {module:errors.THROW_MSG_UNIQUE_KEY_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED}\n * @returns {undefined} - returns nothing\n */\nvar validateContent = function validateContent(input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].isEmpty(input.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  // Label is necessary since it shows the value along with the display\n  // This is essential for a11y in a pie chart\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].isEmpty(input.label) || _helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].isEmpty(input.label.display)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].isEmpty(input.value)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_NO_DATA_POINTS);\n  }\n};\n/**\n * Draws an arc based on the value provided within the larger Pie\n *\n * @private\n * @param {PieContent} control - PieContent instance\n * @param {object} graph - Graph instance\n * @param {d3.selection} pieChartContentSVG - d3 selection node of canvas svg\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {object} dataTarget - Pie data object\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(control, graph, pieChartContentSVG, legendPath, dataTarget) {\n  var contentGroupPath = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_13__.createPieContentGroup)(graph.config, pieChartContentSVG, legendPath, control.config, dataTarget);\n  /* Set the data to the group as well as the slice within, since the slice data will be changed\n   * to accommodate d3 arc object data as well during translate phase to combine all the pie slices\n   * together */\n  contentGroupPath.data([dataTarget]);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_13__.createSlice)(graph.config, contentGroupPath);\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  validateContent(inputJSON);\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_11__[\"default\"].deepClone(inputJSON);\n};\n\n/**\n * PieContent is part of a Pie graph\n *\n * @module PieContent\n * @class PieContent\n */\nvar PieContent = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {object} input - Input JSON\n     */\n  function PieContent(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, PieContent);\n    _this = _callSuper(this, PieContent);\n    _this.config = loadInput(input);\n    _this.dataTarget = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(PieContent, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(PieContent, [{\n    key: \"load\",\n    value: function load(graph) {\n      if (!(0,_Graph_GraphConfig__WEBPACK_IMPORTED_MODULE_12__.isUniqueKey)(graph.contentConfig, this.config.key)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_8__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n      }\n      this.dataTarget = processDataPoints(graph.config, this.config);\n      draw(this, graph, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pieChartContent)), graph.legendSVG, this.dataTarget);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_13__.prepareLegendItems)(this.dataTarget, graph.svg, graph.legendSVG, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_13__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_9__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_14__.translateSlices)(graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pieChartContent)), graph.d3PieLayoutTransformer, graph.d3PieArcTransformer);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      /*\n           * Legends are not actionable within Pie chart, no redraw\n           * is necessary due to this\n           * */\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_6__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (PieContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/PieContent.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/helpers/creationHelpers.js":
/*!*******************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/helpers/creationHelpers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.attachEventHandlers; },\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   createArc: function() { return /* binding */ createArc; },\n/* harmony export */   createDefs: function() { return /* binding */ createDefs; },\n/* harmony export */   createPieContentContainer: function() { return /* binding */ createPieContentContainer; },\n/* harmony export */   createPieContentGroup: function() { return /* binding */ createPieContentGroup; },\n/* harmony export */   createPieLayout: function() { return /* binding */ createPieLayout; },\n/* harmony export */   createSlice: function() { return /* binding */ createSlice; },\n/* harmony export */   detachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.detachEventHandlers; },\n/* harmony export */   determineHeight: function() { return /* binding */ determineHeight; },\n/* harmony export */   getColorForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.getColorForTarget; },\n/* harmony export */   getShapeForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.getShapeForTarget; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Calculates the height for graph\n * Height and Width are proportionally same for Pie to account for equal circumference\n * within the svg square\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {number} dimension - number in pixels for height\n * @returns {number} Height for the axes\n */\nvar determineHeight = function determineHeight(config, dimension) {\n  if (dimension.height) {\n    return dimension.height;\n  }\n  return _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].PIE_CHART_DEFAULT_HEIGHT;\n};\n/**\n * Creates the d3 pie layout for creating the pie chart.\n *\n * @private\n * @returns {Function} d3 function that decides which pie should go where in the graph.\n */\nvar createPieLayout = function createPieLayout() {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.pie().value(function (d) {\n    return d.value;\n  });\n};\n/**\n * Creates an arc based on the pie chart radius\n *\n * @private\n * @param {number} r - Radius of the pie chart.\n * @returns {Function} d3.arc function that would calculate the arc for each pie value\n */\nvar createArc = function createArc(r) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.arc().innerRadius(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_PIE_INNER_RADIUS).outerRadius(r).padAngle(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].DEFAULT_PIE_PAD_ANGLE);\n};\n/**\n * Added defs element for the canvas. This currently holds the clip paths for the entire chart.\n * Clip path rectangle has the same width and height, making it a square within with we\n * will house the circle.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.Selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createDefs = function createDefs(config, canvasSVG) {\n  return canvasSVG.append('defs').append('clipPath').attr('id', config.clipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].X_AXIS, 0).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Y_AXIS, 0).attr('width', config.height).attr('height', config.height);\n};\n/**\n * Creates a container for pie graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createPieContentContainer = function createPieContentContainer(config, canvasSVG) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieChartContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\"));\n};\n/**\n * Gets all the slices given a reference slice within the pie chart\n *\n * @private\n * @param {HTMLElement} target - DOM element of the data point clicked\n * @returns {Array} List of slice group in a pie chart\n */\nvar getAllSliceNodes = function getAllSliceNodes(target) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieContentGroup));\n};\n/**\n * Enforces blur state for all the slices that is not the one hovered on.\n * This is provided regardless of whether onClick is present or not.\n *\n * @private\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {Array} nodes - List of d3.selection objects that are slices of pie chart\n * @param {string} selectedKey - Unique id of the slice clicked on\n * @returns {undefined} - returns nothing\n */\nvar enforceSliceBlur = function enforceSliceBlur(legendPath, nodes, selectedKey) {\n  legendPath.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieLegendItem, \"[aria-describedby=\\\"\").concat(selectedKey, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieLegendItemSliceHover, true);\n  nodes.each(function () {\n    var node = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    node.classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].blur, node.attr('aria-describedby') !== selectedKey);\n  });\n};\n/**\n * Enforce selected state for a slice when clicked on.\n * This is only available when onClick function is provided.\n *\n * @private\n * @param {Array} nodes - List of d3.selection objects that are slices of pie chart\n * @param {string} selectedKey - Unique id of the slice clicked on\n * @returns {Array} d3.selection objects of slices with aria-selected toggled\n */\nvar enforceSliceSelection = function enforceSliceSelection(nodes, selectedKey) {\n  return nodes.each(function () {\n    var node = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    node.attr('aria-selected', node.attr('aria-describedby') === selectedKey);\n  });\n};\n/**\n * Toggles the selection of a dateline indicator, executes on click of a data point.\n *\n * @private\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {HTMLElement} target - DOM element of the data point clicked\n * @param {string} selectedKey - unique key of the selected slice\n * @returns {d3.selection} d3 html element of the selected point\n */\nvar toggleSliceSelection = function toggleSliceSelection(legendPath, target, selectedKey) {\n  var allSliceNodes = getAllSliceNodes(target);\n  enforceSliceBlur(legendPath, allSliceNodes, selectedKey);\n  enforceSliceSelection(allSliceNodes, selectedKey);\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target);\n};\n/**\n * Removes the carbon-blur style from all the slices to unblur the pie chart\n *\n * @private\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {Array} nodes - List of d3.selection objects that are slices of pie chart\n * @returns {undefined} - returns nothing\n */\nvar removeSliceBlur = function removeSliceBlur(legendPath, nodes) {\n  legendPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieLegendItem)).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieLegendItemSliceHover, false);\n  nodes.each(function () {\n    var node = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    node.classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].blur, false);\n  });\n};\n/**\n * Removes the selection from the slice and sets aria-selected for all slices as false\n *\n * @private\n * @param {Array} nodes - List of d3.selection objects that are slices of pie charts\n * @returns {Array} d3.selection objects of slices with aria-selected set to false\n */\nvar removeSliceSelection = function removeSliceSelection(nodes) {\n  return nodes.each(function () {\n    var node = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    node.attr('aria-selected', false);\n  });\n};\n/**\n * Handler for the slice on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {HTMLElement} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar sliceClickActionHandler = function sliceClickActionHandler(legendPath, value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleSliceSelection(legendPath, target, value.key).call(function (selectedTarget) {\n    return value.onClick(function () {\n      removeSliceBlur(legendPath, getAllSliceNodes(target));\n      removeSliceSelection(getAllSliceNodes(target));\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Handler for the slice that is hovered on. It blurs all other slices in the pie chart.\n *\n * @private\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {HTMLElement} target - Target element slice hovered on\n * @param {string} key - Unique id of the target slice\n * @param {string} hoverState - Mouse over or Mouse out\n * @returns {undefined} - returns nothing\n */\nvar sliceHoverActionHandler = function sliceHoverActionHandler(legendPath, target, key, hoverState) {\n  var allSliceNodes = getAllSliceNodes(target);\n  if (hoverState === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].HOVER_EVENT.MOUSE_ENTER) {\n    enforceSliceBlur(legendPath, allSliceNodes, key);\n  } else {\n    // Check if the click action is executed, only remove blur otherwise\n    if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target).attr('aria-selected') === 'true') {\n      return;\n    }\n    removeSliceBlur(legendPath, allSliceNodes);\n  }\n};\n/**\n * Creates a group for each pie content loaded\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {d3.selection} legendPath - d3 selection node of legend `ul` path\n * @param {object} contentConfig - content config object\n * @param {object} dataTarget - Pie data object\n * @returns {object} d3 svg path\n */\nvar createPieContentGroup = function createPieContentGroup(config, canvasSVG, legendPath, contentConfig, dataTarget) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieContentGroup, true).attr('transform', \"translate(\".concat(config.canvasRadius, \",\").concat(config.canvasRadius, \")\")).attr('aria-labelledby', contentConfig.label.display).attr('aria-describedby', contentConfig.key).attr('aria-disabled', !_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(dataTarget.onClick)).attr('aria-selected', false).on('click', function (value, index) {\n    sliceClickActionHandler(legendPath, value, index, this);\n  }).on('mouseenter', function (value) {\n    sliceHoverActionHandler(legendPath, this, value.key, _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n  }).on('mouseleave', function (value) {\n    sliceHoverActionHandler(legendPath, this, value.key, _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].HOVER_EVENT.MOUSE_EXIT);\n  });\n};\n/**\n * Draws the slice with options opted in the input JSON by the consumer for each data set.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} contentSVG - d3 html element of the canvas\n * @returns {object} d3 svg path\n */\nvar createSlice = function createSlice(config, contentSVG) {\n  return contentSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieContentSlice, true);\n};\n/**\n * Hover handler for legend item. Highlights current line and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {d3.selection} legendPath - d3 element that will be need to render the legend\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(legendPath, canvasSVG) {\n  return function (item, state) {\n    var allSliceNodes = canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].pieContentGroup));\n    if (state === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].HOVER_EVENT.MOUSE_ENTER) {\n      enforceSliceBlur(legendPath, allSliceNodes, item.key);\n    } else {\n      removeSliceBlur(legendPath, allSliceNodes);\n    }\n  };\n};\n/**\n * A callback that will be sent to Pie Construct class so that when graph is\n * created the Construct will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} dataTarget - Data points object\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @param {object} config - Graph config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(dataTarget, canvasSVG, legendSVG, config) {\n  if (legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_2__.loadPieLegendItem)(legendSVG, dataTarget, {\n      hoverHandler: hoverHandler(legendSVG, canvasSVG)\n    }, config);\n  }\n};\n/**\n * CLear the graph data points and lines currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/helpers/creationHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/helpers/translateHelpers.js":
/*!********************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/helpers/translateHelpers.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSlicePercentage: function() { return /* binding */ getSlicePercentage; },\n/* harmony export */   translatePieGraph: function() { return /* binding */ translatePieGraph; },\n/* harmony export */   translateSlices: function() { return /* binding */ translateSlices; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n\n\n\n\n\n\n/**\n * Updates clipPath rectangle width and height on resize.\n * `clipPath` updates are necessary since the clip-path URL needs to get\n * the necessary parameters on resize so that data points are not cut off\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar translateDefs = function translateDefs(config, canvasSVG) {\n  return canvasSVG.select(\"clipPath#\".concat(config.clipPathId)).selectAll('rect').attr('height', config.canvasHeight).attr('width', config.canvasWidth);\n};\n/**\n * Returns d3 data object for all the slices within pie chart content group\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Array} Array of objects containing data within each slice\n */\nvar getAllPieContentData = function getAllPieContentData(canvasSVG) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pieContentGroup)).data();\n};\n/**\n * Clearing the slices that are already created from other contents,\n * Rewriting slices with updated percentages.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} returns nothing\n */\nvar clearAllSliceContent = function clearAllSliceContent(canvasSVG) {\n  var contentSlicePaths = canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pieContentSlice));\n  if (!contentSlicePaths.empty()) {\n    contentSlicePaths.html(null);\n  }\n};\n/**\n * A slice is created relative to the other slice, so query the DOM for other slices\n * Add data to the layout transformer within the pie\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Function} layout - Pie layout transformer function\n * @returns {d3.selection} returns d3 selection list containing all the slices within the pie\n */\nvar updateAllSliceLayout = function updateAllSliceLayout(canvasSVG, layout) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pieContentSlice)).data(layout(getAllPieContentData(canvasSVG)));\n};\n/**\n * Returns a percentage value given the start angle and end angle of a slice arc.\n *\n * @private\n * @param {number} startAngle - Start angle of d3 arc\n * @param {number} endAngle - End angle of d3 arc\n * @returns {number} Percentage based on start and end angle\n */\nvar getSlicePercentage = function getSlicePercentage(startAngle, endAngle) {\n  return (endAngle - startAngle) / (2 * Math.PI) * 100;\n};\n\n/**\n * Translates all slices when a new content is added.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} contentSVG - d3 selection node of content group\n * @param {Function} layout - Pie layout transformer function\n * @param {Function} arc - Pie arc transformer function\n * @returns {undefined} - returns nothing\n */\nvar translateSlices = function translateSlices(config, contentSVG, layout, arc) {\n  clearAllSliceContent(contentSVG);\n  var allSlicePaths = updateAllSliceLayout(contentSVG, layout);\n  allSlicePaths.append('path').attr('fill', function (d) {\n    return d.data.color;\n  }).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].d3Transition(_helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].D3_TRANSITION_PROPERTIES_ENABLED)).attrTween('d', function (d) {\n    var i = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.interpolate(d.startAngle, d.endAngle);\n    return function (t) {\n      d.endAngle = i(t);\n      return arc(d);\n    };\n  });\n};\n/**\n * Translates graph based on the current positioning on resize. We\n * don't need to resize the entire graph, in our case we just need to transform:\n *  The defs height and width\n *\n *  @private\n *  @param {object} control - Graph instance\n *  @returns {undefined} - returns nothing\n */\nvar translatePieGraph = function translatePieGraph(control) {\n  translateDefs(control.config, control.svg);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/helpers/translateHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Pie/index.js":
/*!*************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Pie/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Pie__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Pie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Pie */ \"./packages/carbon-graphs/src/js/controls/Pie/Pie.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QaWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9QaWUvaW5kZXguanM/MGYzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGllIGZyb20gJy4vUGllJztcblxuZXhwb3J0IHsgUGllIGFzIGRlZmF1bHQgfTtcbiJdLCJuYW1lcyI6WyJQaWUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Pie/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Scatter/Scatter.js":
/*!*******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Scatter/Scatter.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _helpers_helpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Scatter/helpers/helpers.js\");\n/* harmony import */ var _ScatterConfig__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./ScatterConfig */ \"./packages/carbon-graphs/src/js/controls/Scatter/ScatterConfig.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Scatter\n * @typedef {object} GraphContent\n * @typedef {object} ScatterConfig\n */\n\n/**\n * Calculates the min and max values for the x axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the x\n */\nvar calculateValuesRangeXAxis = function calculateValuesRangeXAxis(values) {\n  // null values are filtered out first\n  var xAxisValuesList = values.filter(function (i) {\n    return i.x !== null && i.x !== undefined;\n  }).map(function (i) {\n    // if the x-axis is a timeseries, then convert it to an epoc int\n    // for easier calculations\n    if (typeof i.x === 'string' || i.x instanceof Date) {\n      return _helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].getEpocFromDateString(i.x);\n    }\n    return i.x;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(xAxisValuesList))\n  };\n};\n/**\n * Calculates the min and max values for the y or y2 axis.\n *\n * @private\n * @param {Array} values - Datapoint values\n * @returns {object} - Contains min and max values for the data points for the y or y2 axis\n */\nvar calculateValuesRangeYAxis = function calculateValuesRangeYAxis(values) {\n  // null values are filtered out first\n  var yAxisValuesList = values.filter(function (i) {\n    return i.y !== null && i.y !== undefined;\n  }).map(function (i) {\n    return i.y;\n  });\n  return {\n    min: Math.min.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(yAxisValuesList)),\n    max: Math.max.apply(Math, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(yAxisValuesList))\n  };\n};\n\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} ScatterConfig config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _ScatterConfig__WEBPACK_IMPORTED_MODULE_15__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n\n/**\n * A Scatter graph is a graph used to represent a collection of data\n * points along the X and Y Axis.\n *\n * Lifecycle functions include:\n *  * Load\n *  * Generate\n *  * Unload\n *  * Destroy\n *\n * @module Scatter\n * @class Scatter\n */\nvar Scatter = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {ScatterConfig} input - Input JSON instance created using GraphConfig\n     */\n  function Scatter(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Scatter);\n    _this = _callSuper(this, Scatter);\n    _this.config = loadInput(input);\n    _this.type = 'Scatter';\n    _this.config.yAxis = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_7__.getDefaultValue)(_this.config.yAxis, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y_AXIS);\n    _this.valuesRange = {};\n    _this.valuesRange.x = calculateValuesRangeXAxis(_this.config.values);\n    _this.valuesRange[_this.config.yAxis] = calculateValuesRangeYAxis(_this.config.values);\n    _this.dataTarget = {};\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Scatter, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Scatter, [{\n    key: \"load\",\n    value: function load(graph) {\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_16__.validateData)(this.config.values);\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.processDataPoints)(graph.config, this.config);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget);\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.createRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)), this.dataTarget.regions, \"region_\".concat(this.dataTarget.key), this.config.yAxis);\n      }\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.prepareLabelShapeItem)(graph.config, this.dataTarget, graph.axesLabelShapeGroup[this.config.yAxis]);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.removeRegion)(graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)), this.dataTarget);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.removeLabelShapeItem)(graph.axesLabelShapeGroup[this.config.yAxis], this.dataTarget, graph.config);\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].notEmpty(this.dataTarget.regions)) {\n        if (graph.content.length > 1 && !graph.config.shouldHideAllRegion) {\n          if ((0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.areRegionsIdentical)(graph.svg)) {\n            graph.config.shouldHideAllRegion = false;\n          } else {\n            (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.hideAllRegions)(graph.svg);\n            graph.config.shouldHideAllRegion = true;\n          }\n        }\n      } else {\n        (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.hideAllRegions)(graph.svg);\n        graph.config.shouldHideAllRegion = true;\n      }\n      (0,_helpers_region__WEBPACK_IMPORTED_MODULE_11__.translateRegion)(graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].regionGroup)));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.translateScatterGraph)(graph.scale, graph.svg, graph.config);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      this.config.values = graphData.values;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_16__.validateData)(this.config.values);\n      var eventHandlers = {\n        clickHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      };\n      this.dataTarget = (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.processDataPoints)(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var scatterGraph = graph.content.filter(function (scatter) {\n        return scatter.config.key === graphData.key;\n      });\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_13__[\"default\"].isEmptyArray(scatterGraph)) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.reflowLegend)(graph.legendSVG, scatterGraph[0].config, graph, eventHandlers);\n      }\n      var currentPointsPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].pointGroup)).data(this.dataTarget);\n      currentPointsPath.exit().remove();\n      var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].currentPointsGroup)).selectAll(\"[class*=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_12__[\"default\"].point, \"\\\"]\")).data((0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.getDataPointValues)(this.dataTarget));\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.drawDataPoints)(graph.scale, graph.config, pointPath.enter(), graph.legendSVG);\n      pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      (0,_helpers_label__WEBPACK_IMPORTED_MODULE_9__.updateShapesDuringReflow)(graph, graphData, this);\n      this.valuesRange[this.config.yAxis] = calculateValuesRangeYAxis(this.config.values);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_helpers__WEBPACK_IMPORTED_MODULE_14__.draw)(graph.scale, graph.config, graph.svg, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_6__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Scatter);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Scatter/Scatter.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Scatter/ScatterConfig.js":
/*!*************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Scatter/ScatterConfig.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n/**\n * API to parse consumer input for Scatter graph\n *\n * @class ScatterConfig\n */\nvar ScatterConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function ScatterConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, ScatterConfig);\n    _this = _callSuper(this, ScatterConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * Returns the config object\n     *\n     * @returns {object} config object\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(ScatterConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ScatterConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @param {object} inputJSON - Input JSON\n       * @returns {ScatterConfig} instance object\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object.\n       *\n       * @returns {ScatterConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__.validateBaseInput)(this.input);\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {ScatterConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScatterConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9TY2F0dGVyL1NjYXR0ZXJDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBYTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FBQUssV0FBQUMsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsV0FBQUQsQ0FBQSxHQUFBSixpRkFBQSxDQUFBSSxDQUFBLEdBQUFMLDRGQUFBLENBQUFJLENBQUEsRUFBQUcseUJBQUEsS0FBQUMsT0FBQSxDQUFBQyxTQUFBLENBQUFKLENBQUEsRUFBQUMsQ0FBQSxRQUFBTCxpRkFBQSxDQUFBRyxDQUFBLEVBQUFNLFdBQUEsSUFBQUwsQ0FBQSxDQUFBTSxLQUFBLENBQUFQLENBQUEsRUFBQUUsQ0FBQTtBQUFBLFNBQUFDLDBCQUFBLGNBQUFILENBQUEsSUFBQVEsT0FBQSxDQUFBQyxTQUFBLENBQUFDLE9BQUEsQ0FBQUMsSUFBQSxDQUFBUCxPQUFBLENBQUFDLFNBQUEsQ0FBQUcsT0FBQSxpQ0FBQVIsQ0FBQSxhQUFBRyx5QkFBQSxZQUFBQSwwQkFBQSxhQUFBSCxDQUFBO0FBRXlEO0FBQzlCOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEsSUFLTWUsYUFBYSwwQkFBQUMsV0FBQTtFQUNqQjtBQUNGO0FBQ0E7RUFDRSxTQUFBRCxjQUFBLEVBQWM7SUFBQSxJQUFBRSxLQUFBO0lBQUF2QixpRkFBQSxPQUFBcUIsYUFBQTtJQUNaRSxLQUFBLEdBQUFsQixVQUFBLE9BQUFnQixhQUFBO0lBQ0FFLEtBQUEsQ0FBS0MsTUFBTSxHQUFHLElBQUk7SUFDbEJELEtBQUEsQ0FBS0UsS0FBSyxHQUFHLElBQUk7SUFBQyxPQUFBRixLQUFBO0VBQ3BCOztFQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRW5CLDJFQUFBLENBQUFpQixhQUFBLEVBQUFDLFdBQUE7RUFBQSxPQUFBckIsOEVBQUEsQ0FBQW9CLGFBQUE7SUFBQUssR0FBQTtJQUFBQyxLQUFBLEVBS0EsU0FBQUMsVUFBQSxFQUFZO01BQ1YsT0FBTyxJQUFJLENBQUNKLE1BQU07SUFDcEI7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBTEU7SUFBQUUsR0FBQTtJQUFBQyxLQUFBLEVBTUEsU0FBQUUsU0FBU0MsU0FBUyxFQUFFO01BQ2xCLElBQUksQ0FBQ0wsS0FBSyxHQUFHSyxTQUFTO01BQ3RCLE9BQU8sSUFBSTtJQUNiOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBSixHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBSSxjQUFBLEVBQWdCO01BQ2RaLG1FQUFpQixDQUFDLElBQUksQ0FBQ00sS0FBSyxDQUFDO01BQzdCLE9BQU8sSUFBSTtJQUNiOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7RUFKRTtJQUFBQyxHQUFBO0lBQUFDLEtBQUEsRUFLQSxTQUFBSyxNQUFBLEVBQVE7TUFDTixJQUFJLENBQUNSLE1BQU0sR0FBR0osc0RBQUssQ0FBQ2EsU0FBUyxDQUFDLElBQUksQ0FBQ1IsS0FBSyxDQUFDO01BQ3pDLE9BQU8sSUFBSTtJQUNiO0VBQUM7QUFBQSxFQWhEeUJQLHdEQUFVO0FBbUR0QywrREFBZUcsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvbnRyb2xzL1NjYXR0ZXIvU2NhdHRlckNvbmZpZy5qcz81OTAzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEJhc2VDb25maWcsIHsgdmFsaWRhdGVCYXNlSW5wdXQgfSBmcm9tICcuLi8uLi9jb3JlL0Jhc2VDb25maWcnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL2hlbHBlcnMvdXRpbHMnO1xuXG4vKipcbiAqIEFQSSB0byBwYXJzZSBjb25zdW1lciBpbnB1dCBmb3IgU2NhdHRlciBncmFwaFxuICpcbiAqIEBjbGFzcyBTY2F0dGVyQ29uZmlnXG4gKi9cbmNsYXNzIFNjYXR0ZXJDb25maWcgZXh0ZW5kcyBCYXNlQ29uZmlnIHtcbiAgLyoqXG4gICAgICogQGluaGVyaXRkb2NcbiAgICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbmZpZyA9IG51bGw7XG4gICAgdGhpcy5pbnB1dCA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb25maWcgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSBjb25maWcgb2JqZWN0XG4gICAgICovXG4gIGdldENvbmZpZygpIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWc7XG4gIH1cblxuICAvKipcbiAgICAgKiBTZXRzIHRoZSBpbnB1dCBvYmplY3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBpbnB1dEpTT04gLSBJbnB1dCBKU09OXG4gICAgICogQHJldHVybnMge1NjYXR0ZXJDb25maWd9IGluc3RhbmNlIG9iamVjdFxuICAgICAqL1xuICBzZXRJbnB1dChpbnB1dEpTT04pIHtcbiAgICB0aGlzLmlucHV0ID0gaW5wdXRKU09OO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAgICogVmFsaWRhdGVzIGFuZCB2ZXJpZmllcyB0aGUgaW5wdXQgSlNPTiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7U2NhdHRlckNvbmZpZ30gaW5zdGFuY2Ugb2JqZWN0XG4gICAgICovXG4gIHZhbGlkYXRlSW5wdXQoKSB7XG4gICAgdmFsaWRhdGVCYXNlSW5wdXQodGhpcy5pbnB1dCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICAgKiBDbG9uZXMgdGhlIGlucHV0IEpTT04gaW50byB0aGUgY29uZmlnIG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMge1NjYXR0ZXJDb25maWd9IGluc3RhbmNlIG9iamVjdFxuICAgICAqL1xuICBjbG9uZSgpIHtcbiAgICB0aGlzLmNvbmZpZyA9IHV0aWxzLmRlZXBDbG9uZSh0aGlzLmlucHV0KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTY2F0dGVyQ29uZmlnO1xuIl0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX2dldFByb3RvdHlwZU9mIiwiX2luaGVyaXRzIiwiX2NhbGxTdXBlciIsInQiLCJvIiwiZSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiY29uc3RydWN0b3IiLCJhcHBseSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsIkJhc2VDb25maWciLCJ2YWxpZGF0ZUJhc2VJbnB1dCIsInV0aWxzIiwiU2NhdHRlckNvbmZpZyIsIl9CYXNlQ29uZmlnIiwiX3RoaXMiLCJjb25maWciLCJpbnB1dCIsImtleSIsInZhbHVlIiwiZ2V0Q29uZmlnIiwic2V0SW5wdXQiLCJpbnB1dEpTT04iLCJ2YWxpZGF0ZUlucHV0IiwiY2xvbmUiLCJkZWVwQ2xvbmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Scatter/ScatterConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Scatter/helpers/helpers.js":
/*!***************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Scatter/helpers/helpers.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   draw: function() { return /* binding */ draw; },\n/* harmony export */   drawDataPoints: function() { return /* binding */ drawDataPoints; },\n/* harmony export */   getDataPointValues: function() { return /* binding */ getDataPointValues; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   processDataPoints: function() { return /* binding */ processDataPoints; },\n/* harmony export */   toggleDataPointSelection: function() { return /* binding */ toggleDataPointSelection; },\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translatePoints: function() { return /* binding */ translatePoints; },\n/* harmony export */   translateScatterGraph: function() { return /* binding */ translateScatterGraph; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_region__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/region */ \"./packages/carbon-graphs/src/js/helpers/region.js\");\n/* harmony import */ var _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../helpers/shapeSVG */ \"./packages/carbon-graphs/src/js/helpers/shapeSVG.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef Scatter\n */\n/**\n * Transforms the points in the Scatter graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @returns {Function} - translate function for d3 transform\n */\nvar transformPoint = function transformPoint(scale) {\n  return function (value) {\n    return function (scaleFactor) {\n      var getX = function getX(val) {\n        return scale.x(val.x);\n      };\n      var getY = function getY(val) {\n        return scale[val.yAxis](val.y);\n      };\n      return \"translate(\".concat(getX(value), \",\").concat(getY(value), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms points for a data point set in the Scatter graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} cls - selector for the data point translation\n * @param {object} config - config object derived from input JSON\n * @returns {object} d3 select object\n */\nvar translatePoints = function translatePoints(scale, canvasSVG, cls, config) {\n  return canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scatterGraphContent, \" .\").concat(cls)).each(function (d) {\n    var pointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    pointSVG.select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPoint(scale)(d)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_11__.getTransformScale)(this));\n    });\n  });\n};\n/**\n * Toggles the selection of a data point, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection));\n  selectedPointNode.attr('aria-hidden', !(selectedPointNode.attr('aria-hidden') === 'true'));\n  return selectedPointNode;\n};\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      selectedTarget.attr('aria-hidden', true);\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Called on resize, translates the data point values.\n * This includes:\n *  Points\n *  Selected point indicators\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar translateScatterGraph = function translateScatterGraph(scale, canvasSVG, config) {\n  (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.translateSVGElement)(canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup, config);\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, config);\n  translatePoints(scale, canvasSVG, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection, config);\n};\n/**\n * Returns the internal values subset which is the array that was created from the input JSON.\n * This array has information for each data point w.r.t shape, colors and on click callback along with\n * x and y co-ordinates.\n *\n * @private\n * @param {object} target - Object containing the subsets\n * @returns {Array} List of data point subsets\n */\nvar getDataPointValues = function getDataPointValues(target) {\n  return target.internalValuesSubset;\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {Array} pointGroupPath - d3 html element of the points group\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar drawDataPoints = function drawDataPoints(scale, config, pointGroupPath, legendSVG) {\n  var renderDataPointPath = function renderDataPointPath(path, value, index) {\n    return path.append(function () {\n      var _legendSVG$select;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(value)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point,\n        svgStyles: \"fill: \".concat((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getColorForTarget)(value), \";\"),\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': legendSVG ? ((_legendSVG$select = legendSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby='\").concat(value.key, \"']\"))) === null || _legendSVG$select === void 0 ? void 0 : _legendSVG$select.attr('aria-current')) === 'false' : 'false',\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    return path.append(function () {\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_9__.getSVGObject)(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE, _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_PLOT_SELECTION_SCALE)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection,\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': true,\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  var renderCriticalityPath = function renderCriticalityPath(path, value, index, cls) {\n    return path.append(function () {\n      var _document$querySelect;\n      return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.getShapeForTarget)(value)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgClassNames: \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \" \").concat(cls),\n        transformFn: transformPoint(scale)(value),\n        onClickFn: function onClickFn() {\n          dataPointActionHandler(value, index, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) === 'false',\n          'aria-describedby': value.key,\n          'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_12__[\"default\"].isFunction(value.onClick)\n        }\n      }));\n    });\n  };\n  pointGroupPath.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    if (d.isCritical) {\n      config.hasCriticality = true;\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityOuterPoint);\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].criticalityInnerPoint);\n    }\n    renderDataPointPath(dataPointSVG, d, i);\n  });\n};\n/**\n * Draws the Scatter graph on the canvas element. This calls the Graph API to render the following first\n *  Grid\n *  Axes\n *  Legend\n *  Labels\n * Once these items are rendered, we will parse through the data points and render the points\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(scale, config, canvasSVG, dataTarget, legendSVG) {\n  var scatterSVG = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].scatterGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\")).attr('aria-hidden', config.shownTargets.indexOf(dataTarget.key) < 0).attr('aria-describedby', dataTarget.key);\n  var currentPointsPath = scatterSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup)).data([dataTarget]);\n  currentPointsPath.enter().append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup, true).attr('transform', \"translate(\".concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.getXAxisXPosition)(config), \",\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.calculateVerticalPadding)(config), \")\"));\n  currentPointsPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n  var pointPath = scatterSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].currentPointsGroup)).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point)).data(getDataPointValues(dataTarget));\n  drawDataPoints(scale, config, pointPath.enter(), legendSVG);\n  pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).remove();\n};\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  var type = graphConfig.axis.x.type;\n  var getXDataValues = function getXDataValues(x) {\n    if (!(0,_helpers_axis__WEBPACK_IMPORTED_MODULE_4__.isValidAxisType)(x, type)) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_6__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n    }\n    return (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.parseTypedValue)(x, type);\n  };\n  // Update the interpolation type\n  dataTarget.interpolationType = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_2__.getInterpolationType)(dataTarget.type);\n  dataTarget.showShapes = true;\n  graphConfig.shownTargets.push(dataTarget.key);\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    return {\n      onClick: dataTarget.onClick,\n      isCritical: value.isCritical || false,\n      x: getXDataValues(value.x),\n      y: value.y,\n      color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_COLOR,\n      label: dataTarget.label || {},\n      shape: dataTarget.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE,\n      yAxis: dataTarget.yAxis || _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y_AXIS,\n      key: dataTarget.key\n    };\n  });\n  return dataTarget;\n};\n/**\n * Handler for Request animation frame, executes on resize.\n * * Order of execution\n * * Shows/hides the regions\n *\n * @private\n * @param {object} graphContext - graph object\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {function()} callback function handler for RAF\n */\nvar onAnimationHandler = function onAnimationHandler(graphContext, config, canvasSVG) {\n  return function () {\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.processRegions)(graphContext, config, canvasSVG);\n  };\n};\n/**\n * Click handler for legend item. Removes the data points from scatter graph when clicked\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {Scatter} control - Scatter instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendClickHandler)(element);\n    var legendSelected = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element));\n    updateShownTarget(config.shownTargets, item);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].dataPointSelection, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', true);\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', legendSelected);\n    window.requestAnimationFrame(onAnimationHandler(graphContext, config, canvasSVG));\n  };\n};\n/**\n * Hover handler for legend item. Highlights current scatter data points and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].point, \"[aria-describedby=\\\"\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].blur, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n    // Highlight the scatter data points of the item hovered on\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\"svg[aria-describedby=\\\"\".concat(item.key, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_10__[\"default\"].highlight, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n\n    // Highlight region(s) of the item hovered on, only if the content is currently displayed\n    (0,_helpers_region__WEBPACK_IMPORTED_MODULE_8__.regionLegendHoverHandler)(graphTargets, canvasSVG, item.key, state);\n  };\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_7__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n/**\n * CLear the graph data points and scatter data points currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_13__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Scatter/helpers/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Scatter/index.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Scatter/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Scatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Scatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scatter */ \"./packages/carbon-graphs/src/js/controls/Scatter/Scatter.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9TY2F0dGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29udHJvbHMvU2NhdHRlci9pbmRleC5qcz9kYWQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTY2F0dGVyIGZyb20gJy4vU2NhdHRlcic7XG5cbmV4cG9ydCB7IFNjYXR0ZXIgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbIlNjYXR0ZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Scatter/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/Timeline.js":
/*!*********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/Timeline.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Construct__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Construct */ \"./packages/carbon-graphs/src/js/core/Construct/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../helpers/paddingUtils */ \"./packages/carbon-graphs/src/js/helpers/paddingUtils.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js\");\n/* harmony import */ var _TimelineConfig__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./TimelineConfig */ \"./packages/carbon-graphs/src/js/controls/Timeline/TimelineConfig.js\");\n/* harmony import */ var _TimelineContent__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./TimelineContent */ \"./packages/carbon-graphs/src/js/controls/Timeline/TimelineContent.js\");\n/* harmony import */ var _helpers_constructUtils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../helpers/constructUtils */ \"./packages/carbon-graphs/src/js/helpers/constructUtils.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef {object} Timeline\n * @typedef {object} TimelineConfig\n */\nvar BASE_CANVAS_WIDTH_PADDING = _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].BASE_CANVAS_WIDTH_PADDING;\n/**\n * Sets the canvas width\n *\n * @private\n * @param {HTMLElement} container - d3 HTML element object which forms the chart container\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasWidth = function setCanvasWidth(container, config) {\n  config.canvasWidth = parseInt(container.style('width'), 10) - (0,_helpers_paddingUtils__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(container);\n};\n/**\n * Sets the canvas width. Canvas rests within a container.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar setCanvasHeight = function setCanvasHeight(config) {\n  config.canvasHeight = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.getYAxisHeight)(config) + (config.padding.bottom * 2 + config.padding.top) * 2;\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @throws {module:errors.THROW_MSG_NO_AXES_DATA_LOADED}\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  return new _TimelineConfig__WEBPACK_IMPORTED_MODULE_16__[\"default\"]().setInput(inputJSON).validateInput().clone().getConfig();\n};\n/**\n * Executes the before init process checklist, needs to be called by parent control.\n *  Binds the chart id provided in the input JSON to graph container.\n *\n * @private\n * @param {Timeline} control - Timeline instance\n * @returns {Timeline} Timeline instance\n */\nvar beforeInit = function beforeInit(control) {\n  control.graphContainer = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(control.config.bindTo);\n  control.config.height = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.determineHeight)(control.config);\n  return control;\n};\n/**\n * Initializes the necessary Timeline constructor objects\n *\n * @private\n * @param {Timeline} control - Timeline instance\n * @returns {Timeline} Timeline instance\n */\nvar initConfig = function initConfig(control) {\n  control.graphContainer = null;\n  control.config = {\n    axis: {\n      x: {}\n    },\n    shownTargets: {},\n    pan: {}\n  };\n  control.axis = {};\n  control.scale = {};\n  control.svg = null;\n  control.legendSVG = null;\n  control.content = [];\n  control.contentConfig = [];\n  control.resizeHandler = null;\n  return control;\n};\n/**\n * Executes the init process checklist, needs to be called by parent control.\n * Needs to be called post calling beforeInit\n *  Sets the canvas width within the graph container\n *  Determines the height for canvas\n *  Calculates Axes width and height\n *  Calculates Axes label width and height, positioning\n *  Creates and sets the d3 scale for the Graph\n *\n * @private\n * @param {Timeline} control - Timeline instance\n * @returns {Timeline} Timeline instance\n */\nvar init = function init(control) {\n  setCanvasWidth(control.graphContainer, control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.calculateAxesSize)(control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.calculateAxesLabelSize)(control.config);\n  setCanvasHeight(control.config);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.scaleGraph)(control.scale, control.config);\n  return control;\n};\n\n/**\n * Timeline graph is a graph with no Y Axis. This is primarily used to denote an action\n * at a given point of time. It also accepts/supplies a content property which can be used to\n * display non-numeric values which typically cannot be represented using traditional graphs like\n * Line or Paired Result.\n *\n * * Axes - X axis only\n * * X Axis ticks\n * * Legend\n * * X Axis label\n * * Data points\n *\n * Lifecycle functions include:\n *  * BeforeInit\n *  * Init\n *  * Render\n *  * AfterInit\n *\n * @module Timeline\n * @class Timeline\n */\nvar Timeline = /*#__PURE__*/function (_Construct) {\n  /**\n     * @class\n     * @param {TimelineConfig} input - Input JSON instance created using TimelineConfig\n     */\n  function Timeline(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Timeline);\n    _this = _callSuper(this, Timeline);\n    initConfig(_this);\n    _this.generate(input);\n    return _this;\n  }\n\n  /**\n     * Draw function that is called by the parent control. This draws the x-axis, legend and\n     * X Axis label for the chart construct.\n     *\n     * @description Since we don't have the concept of z-index in visualization,\n     * the order of rendering should be following:\n     *  * SVG container\n     *  * X-Axis\n     *  * X Axis Label\n     *  * Legend\n     *  * Data [In our case we have load and unload]\n     * @param {object} input - Input JSON\n     * @returns {HTMLElement} d3 selection node of svg.\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(Timeline, _Construct);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Timeline, [{\n    key: \"generate\",\n    value: function generate(input) {\n      this.config = loadInput(input);\n      (0,_TimelineConfig__WEBPACK_IMPORTED_MODULE_16__.processInput)(input, this.config);\n      beforeInit(this);\n      init(this);\n      var containerSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindTo).append('div').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer, true).style('padding-top', this.config.removeContainerPadding && 0).style('padding-bottom', this.config.removeContainerPadding && 0);\n      this.svg = containerSVG.insert('svg', ':first-child').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].canvas, true).attr('role', 'img').attr('height', this.config.canvasHeight).attr('width', this.config.padding.hasCustomPadding ? this.config.canvasWidth : this.config.canvasWidth - BASE_CANVAS_WIDTH_PADDING);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createDefs)(this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createAxes)(this.axis, this.scale, this.config, this.svg);\n      var ticks = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer)).querySelectorAll('.tick');\n      var firstTick = ticks[0].getBoundingClientRect().width;\n      var lastTick = ticks[ticks.length - 1].getBoundingClientRect().width;\n      var xAxis = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer)).querySelector('.carbon-axis.carbon-axis-x').getBoundingClientRect().width;\n      if (xAxis + firstTick / 2 + lastTick / 2 > this.config.canvasWidth) {\n        _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer)).select('defs').remove();\n        _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer)).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].axisX)).remove();\n        this.config.padding.left = firstTick / 2;\n        this.config.padding.right = lastTick / 2;\n        (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createDefs)(this.config, this.svg);\n        (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createAxes)(this.axis, this.scale, this.config, this.svg);\n      }\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createTimelineContent)(this.config, this.svg);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.createLabel)(this.config, this.svg);\n      if (this.config.showLegend) {\n        this.legendSVG = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.createLegend)(this.config, this.config.bindLegendTo ? _d3Modules__WEBPACK_IMPORTED_MODULE_5__.select(this.config.bindLegendTo) : containerSVG);\n      }\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.attachEventHandlers)(this);\n      return this.svg;\n    }\n\n    /**\n       * Resizes the graph canvas. Uses the clipPath def.\n       * It scales the graph on resize, and translates the graph elements:\n       *  X-Axis\n       *  Label\n       *\n       *  @returns {Timeline} - Timeline instance\n       */\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _this2 = this;\n      setCanvasWidth(this.graphContainer, this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.scaleGraph)(this.scale, this.config);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_15__.translateTimelineGraph)(this);\n      this.contentConfig.forEach(function (control) {\n        return control.resize(_this2);\n      });\n      return this;\n    }\n\n    /**\n     * Loads the content into the graph.\n     * Content can be provided as a singular data set, or as an array when\n     * rendering multiple data sets\n     *\n     * @param {object} input - Timeline content\n     * @returns {Timeline} - Timeline instance\n     */\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(input) {\n      var _this3 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_18__.contentHandler)(input, function (i) {\n        var content = new _TimelineContent__WEBPACK_IMPORTED_MODULE_17__[\"default\"](i);\n        content.load(_this3);\n        _this3.content.push(i.key);\n        _this3.contentConfig.push(content);\n      });\n      this.resize();\n      return this;\n    }\n\n    /**\n     * Unloads the content from the graph.\n     * The content serves as a 1to1 relationship. For rendering\n     * multiple data sets respective number of content needs to be provided.\n     *\n     * @param {object} input - Timeline content to be removed\n     * @returns {Timeline} - Timeline instance\n     */\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent(input) {\n      var _this4 = this;\n      (0,_helpers_constructUtils__WEBPACK_IMPORTED_MODULE_18__.contentHandler)(input, function (i) {\n        var index = _this4.content.indexOf(i.key);\n        if (index < 0) {\n          throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_INVALID_OBJECT_PROVIDED);\n        }\n        _this4.contentConfig[index].unload(_this4);\n        _this4.content.splice(index, 1);\n        _this4.contentConfig.splice(index, 1);\n      });\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {Object} graphData - Input object that holds updated values and key pair\n       * @returns {Timeline} - Timeline instance\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graphData) {\n      console.warn('reflow is deprecated and will be removed a future major release. Please use reflowMultipleDatasets instead.');\n      var eventHandlers = {\n        clickHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(this, this, this.config, this.svg),\n        hoverHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(this.config.shownTargets, this.svg)\n      };\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.setXAxisDomain)(this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.scaleGraph)(this.scale, this.config);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_15__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      if (graphData && graphData.values && this.content.includes(graphData.key)) {\n        var position = this.content.findIndex(function (key) {\n          return key === graphData.key;\n        });\n        this.contentConfig[position].reflow(this, graphData);\n      }\n      if (this.config.showLegend) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.reflowLegend)(this.legendSVG, this.contentConfig[0].config, this, eventHandlers);\n      }\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Updates the graph axisData and content.\n       *\n       * @param {Object} graphData - Input object that holds updated values and key pairs.\n       * @returns {Timeline} - Timeline instance\n       */\n  }, {\n    key: \"reflowMultipleDatasets\",\n    value: function reflowMultipleDatasets(graphData) {\n      var _this5 = this;\n      var eventHandlers = {\n        clickHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.clickHandler)(this, this, this.config, this.svg),\n        hoverHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.hoverHandler)(this.config.shownTargets, this.svg)\n      };\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_7__.setXAxisDomain)(this.config);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.scaleGraph)(this.scale, this.config);\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_15__.translateAxes)(this.axis, this.scale, this.config, this.svg);\n      if (graphData && graphData.panData && !_helpers_utils__WEBPACK_IMPORTED_MODULE_19__[\"default\"].isEmptyArray(graphData.panData)) {\n        graphData.panData.forEach(function (data) {\n          var position = _this5.content.findIndex(function (key) {\n            return key === data.key;\n          });\n          if (position > -1) {\n            _this5.contentConfig[position].reflow(_this5, data);\n          }\n        });\n      }\n      if (this.config.showLegend) {\n        (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_10__.reflowLegend)(this.legendSVG, this.contentConfig[0].config, this, eventHandlers);\n      }\n      this.resize();\n      return this;\n    }\n\n    /**\n       * Destroys the graph: Container and canvas.\n       *\n       * @returns {Timeline} - Timeline instance\n       */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_14__.detachEventHandlers)(this);\n      (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_12__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].canvas));\n      (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_12__.d3RemoveElement)(this.graphContainer, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_11__[\"default\"].timelineContainer));\n      initConfig(this);\n      return this;\n    }\n  }]);\n}(_core_Construct__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timeline);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/Timeline.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/TimelineConfig.js":
/*!***************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/TimelineConfig.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processInput: function() { return /* binding */ processInput; },\n/* harmony export */   settingsDictionary: function() { return /* binding */ settingsDictionary; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _locale_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../locale/index */ \"./packages/carbon-graphs/src/js/locale/index.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n\n\n\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n/**\n * Helper function to set the right padding values based on input JSON.\n *\n * @private\n * @param {object} config - config which needs to be updated\n * @param {object} inputPadding - input padding provided via input JSON.\n * @returns {object} - padding for Gantt\n */\nvar getPadding = function getPadding(config, inputPadding) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDefined(config.padding)) {\n    return {\n      top: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.top, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top),\n      bottom: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.bottom, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom),\n      right: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.right, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right),\n      left: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(inputPadding.left, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.left),\n      hasCustomPadding: true\n    };\n  }\n  return {\n    top: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.top,\n    bottom: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.bottom,\n    right: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.right,\n    left: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].PADDING.left,\n    hasCustomPadding: false\n  };\n};\n\n/**\n * Used to set the clamp and transition when panning is enabled or not.\n *\n * @private\n * @param {object} config - config object used by the graph.\n * @returns {undefined} returns nothing\n */\nvar settingsDictionary = function settingsDictionary(config) {\n  return (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__.isPanningModeEnabled)(config) ? {\n    shouldClamp: false,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_DISABLED\n  } : {\n    shouldClamp: true,\n    transition: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].D3_TRANSITION_PROPERTIES_ENABLED\n  };\n};\n\n/**\n * Processes the input from the JSON and updates the config object.\n * d3 domain and ranges are stored based on the upper and lower x limits.\n *\n * @private\n * @param {object} input - Input JSON provided by the consumer\n * @param {object} config - config object used by the graph\n * @returns {object} - returns configuration object constructed using Input JSON\n */\nvar processInput = function processInput(input, config) {\n  var axis = _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].deepClone(input.axis);\n  config.clipPathId = (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_7__.generateClipPathId)();\n  config.bindTo = input.bindTo;\n  config.bindLegendTo = input.bindLegendTo;\n  config.padding = getPadding(config, input.padding);\n  config.padding.hasCustomPadding = _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDefined(input.padding);\n  config.legendPadding = (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_12__.getLegendPadding)(config, input.legendPadding);\n  config.axis = {\n    x: {}\n  };\n  config.d3Locale = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.locale, _locale_index__WEBPACK_IMPORTED_MODULE_11__.DEFAULT_LOCALE);\n  config.throttle = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.throttle, _helpers_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].RESIZE_THROTTLE);\n  config.settingsDictionary = settingsDictionary(input);\n  config.showLabel = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.showLabel, true);\n  config.showLegend = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(input.showLegend, true);\n  config.axis.x = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(axis.x, {\n    type: _helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES,\n    show: true,\n    ticks: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.x.ticks, {}),\n    domain: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getXAxisDomain)(_helpers_constants__WEBPACK_IMPORTED_MODULE_8__.AXIS_TYPE.TIME_SERIES, axis.x.lowerLimit, axis.x.upperLimit),\n    rangeRounding: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__.getDefaultValue)(axis.x.rangeRounding, true)\n  });\n  config.shownTargets = [];\n  return config;\n};\n\n/**\n * API to parse consumer input for Graph\n *\n * @class TimelineConfig\n */\nvar TimelineConfig = /*#__PURE__*/function (_BaseConfig) {\n  /**\n     * @inheritdoc\n     */\n  function TimelineConfig() {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TimelineConfig);\n    _this = _callSuper(this, TimelineConfig);\n    _this.config = null;\n    _this.input = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TimelineConfig, _BaseConfig);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(TimelineConfig, [{\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      this.input = inputJSON;\n      return this;\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       * Checks if the following properties are present:\n       *      bindTo\n       *      axis\n       *      axis.x\n       *\n       * @throws {module:errors.THROW_MSG_NO_BIND}\n       * @throws {module:errors.THROW_MSG_NO_AXES_DATA_LOADED}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_INFO}\n       * @throws {module:errors.THROW_MSG_NO_AXIS_LIMIT_INFO}\n       * @throws {module:errors.THROW_MSG_INVALID_AXIS_TYPE_VALUES}\n       * @returns {TimelineConfig} instance object\n       */\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_NO_AXES_DATA_LOADED);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input.bindTo)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_NO_BIND);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input.axis) || _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input.axis.x)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_NO_AXIS_INFO);\n      }\n      if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input.axis.x.lowerLimit) || _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(this.input.axis.x.upperLimit)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_NO_AXIS_LIMIT_INFO);\n      }\n      if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDate(this.input.axis.x.lowerLimit) || !_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDate(this.input.axis.x.upperLimit)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_9__[\"default\"].THROW_MSG_INVALID_AXIS_TYPE_VALUES);\n      }\n      return this;\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @returns {TimelineConfig} instance object\n       */\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      this.config = _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].deepClone(this.input);\n      return this;\n    }\n  }]);\n}(_core_BaseConfig__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n/* harmony default export */ __webpack_exports__[\"default\"] = (TimelineConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/TimelineConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/TimelineContent.js":
/*!****************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/TimelineContent.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateContent: function() { return /* binding */ validateContent; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"./node_modules/@babel/runtime/helpers/esm/inherits.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_GraphConfig__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Graph/GraphConfig */ \"./packages/carbon-graphs/src/js/controls/Graph/GraphConfig.js\");\n/* harmony import */ var _helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js\");\n/* harmony import */ var _helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js\");\n\n\n/**\n * @typedef {object} TimelineContent\n * @typedef {object} GraphContent\n * @typedef {object} TimelineConfig\n */\n\n\n\n\n\nfunction _callSuper(t, o, e) { return o = (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(o), (0,_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0,_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n\n\n\n\n\n\n\n\n\n\n/**\n * Checks if values are of type datetime in ISO8601 datetime format\n *\n * @private\n * @param {string} x - Date string\n * @returns {Date} ISO8601 datetime\n */\nvar getXDataValues = function getXDataValues(x) {\n  if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isDate(x)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_INVALID_FORMAT_TYPE);\n  }\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].parseDateTime(x);\n};\n/**\n * Processes the input JSON and adds the shapes, colors, labels etc. to each data points so that we\n * can use them when rendering the data point. Applies isCritical to the point if point is\n * marked critical.\n *\n * @private\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} dataTarget - Updated data target object\n */\nvar processDataPoints = function processDataPoints(graphConfig, dataTarget) {\n  graphConfig.shownTargets.push(dataTarget.key);\n  dataTarget.internalValuesSubset = dataTarget.values.map(function (value) {\n    return {\n      onClick: dataTarget.onClick,\n      isCritical: value.isCritical || false,\n      x: getXDataValues(value.x),\n      content: value.content,\n      color: dataTarget.color || _helpers_constants__WEBPACK_IMPORTED_MODULE_6__[\"default\"].DEFAULT_COLOR,\n      label: dataTarget.label || {},\n      shape: dataTarget.shape || _helpers_constants__WEBPACK_IMPORTED_MODULE_6__.SHAPES.CIRCLE,\n      key: dataTarget.key\n    };\n  });\n  return dataTarget;\n};\n/**\n * Validates the newly added timeline content into the graph before rendering\n *\n * @private\n * @param {object} input - Newly added graph tasks\n * @throws {module:errors.THROW_MSG_NO_DATA_LOADED}\n * @throws {module:errors.THROW_MSG_NO_DATA_POINTS}\n * @throws {module:errors.THROW_MSG_INVALID_DATA_PROPERTY}\n * @returns {undefined} - returns nothing\n */\nvar validateContent = function validateContent(input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_NO_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(input.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(input.label) || _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(input.label.display)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].isEmpty(input.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_NO_DATA_POINTS);\n  }\n};\n/**\n * Draws points along X Axis based on datetime\n *\n * @private\n * @param {TimelineContent} control - TimelineContent instance\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} timelineGraphContentSVG - d3 selection node of canvas svg\n * @param {Array} dataTarget - Data points\n * @returns {undefined} - returns nothing\n */\nvar draw = function draw(control, scale, config, timelineGraphContentSVG, dataTarget) {\n  var contentGroupPath = (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createTimelineContentGroup)(config, timelineGraphContentSVG, control.config);\n  var pointPath = contentGroupPath.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].point)).data(dataTarget.internalValuesSubset);\n  (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createPoints)(scale, config, pointPath.enter());\n  pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_6__[\"default\"].d3Transition).remove();\n};\n/**\n * Data point sets can be loaded using this function.\n * Load function validates, clones and stores the input onto a config object.\n *\n * @private\n * @param {object} inputJSON - Input JSON provided by the consumer\n * @returns {object} config object containing consumer data\n */\nvar loadInput = function loadInput(inputJSON) {\n  validateContent(inputJSON);\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_10__[\"default\"].deepClone(inputJSON);\n};\n\n/**\n * TimelineContent is part of a Timeline graph\n *\n * @module TimelineContent\n * @class TimelineContent\n */\nvar TimelineContent = /*#__PURE__*/function (_GraphContent) {\n  /**\n     * @class\n     * @param {object} input - Input JSON\n     */\n  function TimelineContent(input) {\n    var _this;\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, TimelineContent);\n    _this = _callSuper(this, TimelineContent);\n    _this.config = loadInput(input);\n    _this.dataTarget = null;\n    return _this;\n  }\n\n  /**\n     * @inheritdoc\n     */\n  (0,_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(TimelineContent, _GraphContent);\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(TimelineContent, [{\n    key: \"load\",\n    value: function load(graph) {\n      if (!(0,_Graph_GraphConfig__WEBPACK_IMPORTED_MODULE_11__.isUniqueKey)(graph.contentConfig, this.config.key)) {\n        throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_7__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n      }\n      this.dataTarget = processDataPoints(graph.config, this.config);\n      draw(this, graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].timelineGraphContent)), this.dataTarget);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.prepareLegendItems)(graph.config, {\n        clickHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.clickHandler)(graph, this, graph.config, graph.svg),\n        hoverHandler: (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.hoverHandler)(graph.config.shownTargets, graph.svg)\n      }, this.dataTarget, graph.legendSVG);\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.clear)(graph.svg, this.dataTarget);\n      (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_8__.removeLegendItem)(graph.legendSVG, this.dataTarget);\n      this.dataTarget = {};\n      this.config = {};\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_13__.translatePoints)(graph.scale, graph.config, graph.svg, this.config.key, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].point));\n      (0,_helpers_translateHelpers__WEBPACK_IMPORTED_MODULE_13__.translatePoints)(graph.scale, graph.config, graph.svg, this.config.key, \".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].dataPointSelection));\n      return this;\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"reflow\",\n    value: function reflow(graph, graphData) {\n      this.config.values = graphData.values;\n      this.dataTarget = processDataPoints(graph.config, this.config);\n      var position = graph.config.shownTargets.lastIndexOf(graphData.key);\n      if (position > -1) {\n        graph.config.shownTargets.splice(position, 1);\n      }\n      var currentPointsPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].pointGroup)).data(this.dataTarget);\n      currentPointsPath.exit().remove();\n      var pointPath = graph.svg.select(\"g[aria-describedby=\\\"\".concat(graphData.key, \"\\\"]\")).selectAll(\"[class*=\\\"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].point, \"\\\"]\")).data(this.dataTarget.internalValuesSubset);\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.createPoints)(graph.scale, graph.config, pointPath.enter());\n      pointPath.exit().transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_6__[\"default\"].d3Transition(graph.config.settingsDictionary.transition)).remove();\n      this.resize(graph);\n    }\n\n    /**\n       * @inheritdoc\n       */\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      (0,_helpers_creationHelpers__WEBPACK_IMPORTED_MODULE_12__.clear)(graph.svg, this.dataTarget);\n      draw(this, graph.scale, graph.config, graph.svg.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_9__[\"default\"].timelineGraphContent)), this.dataTarget);\n      return this;\n    }\n  }]);\n}(_core__WEBPACK_IMPORTED_MODULE_5__.GraphContent);\n/* harmony default export */ __webpack_exports__[\"default\"] = (TimelineContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/TimelineContent.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js":
/*!************************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   attachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.attachEventHandlers; },\n/* harmony export */   calculateAxesLabelSize: function() { return /* binding */ calculateAxesLabelSize; },\n/* harmony export */   calculateAxesSize: function() { return /* binding */ calculateAxesSize; },\n/* harmony export */   clear: function() { return /* binding */ clear; },\n/* harmony export */   clickHandler: function() { return /* binding */ clickHandler; },\n/* harmony export */   createAxes: function() { return /* binding */ createAxes; },\n/* harmony export */   createDefs: function() { return /* binding */ createDefs; },\n/* harmony export */   createLabel: function() { return /* binding */ createLabel; },\n/* harmony export */   createPoints: function() { return /* binding */ createPoints; },\n/* harmony export */   createTimelineContent: function() { return /* binding */ createTimelineContent; },\n/* harmony export */   createTimelineContentGroup: function() { return /* binding */ createTimelineContentGroup; },\n/* harmony export */   detachEventHandlers: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.detachEventHandlers; },\n/* harmony export */   determineHeight: function() { return /* binding */ determineHeight; },\n/* harmony export */   getAxesScale: function() { return /* binding */ getAxesScale; },\n/* harmony export */   getColorForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getColorForTarget; },\n/* harmony export */   getShapeForTarget: function() { return /* reexport safe */ _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getShapeForTarget; },\n/* harmony export */   getXAxisLabelXPosition: function() { return /* binding */ getXAxisLabelXPosition; },\n/* harmony export */   getXAxisLabelYPosition: function() { return /* binding */ getXAxisLabelYPosition; },\n/* harmony export */   getXAxisWidth: function() { return /* binding */ getXAxisWidth; },\n/* harmony export */   getXAxisXPosition: function() { return /* binding */ getXAxisXPosition; },\n/* harmony export */   getXAxisYPosition: function() { return /* binding */ getXAxisYPosition; },\n/* harmony export */   hoverHandler: function() { return /* binding */ hoverHandler; },\n/* harmony export */   prepareLegendItems: function() { return /* binding */ prepareLegendItems; },\n/* harmony export */   scaleGraph: function() { return /* binding */ scaleGraph; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_legend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/legend */ \"./packages/carbon-graphs/src/js/helpers/legend.js\");\n/* harmony import */ var _helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/shapeSVG */ \"./packages/carbon-graphs/src/js/helpers/shapeSVG.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _translateHelpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./translateHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @typedef TimelineContent\n */\n\nvar DEFAULT_HEIGHT = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TIMELINE_HEIGHT;\n\n/**\n * Calculates the height for graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Height for the axes\n */\nvar determineHeight = function determineHeight(config) {\n  return DEFAULT_HEIGHT + config.padding.top - config.padding.bottom;\n};\n/**\n * Calculates axes label sizes, specifically:\n *  X Axis Label: Height\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesLabelSize = function calculateAxesLabelSize(config) {\n  config.axisLabelHeights = {};\n  config.axisLabelHeights.x = 0;\n  if (config.showLabel) {\n    if (config.axis.x.label) {\n      config.axisLabelHeights.x = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getAxisLabelHeight)(config.axis.x.label);\n    }\n  }\n};\n/**\n * Calculates axes sizes, specifically:\n *  X Axis: Height\n *  Padding is provided enough to accommodate around 15 characters.\n *  Beyond which we would need to apply truncation (ellipsis)\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesSize = function calculateAxesSize(config) {\n  config.axisSizes = {};\n  config.axisSizes.x = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getXAxisHeight)(config);\n};\n/**\n * X Axis's starting position within the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisXPosition = function getXAxisXPosition(config) {\n  return config.padding.left;\n};\n/**\n * X Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisYPosition = function getXAxisYPosition(config) {\n  return config.padding.top * 1.5 + config.padding.bottom;\n};\n\n/**\n * X Axis's width that will hold equally spaced ticks\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} X Axis width\n */\nvar getXAxisWidth = function getXAxisWidth(config) {\n  return config.canvasWidth - config.padding.left - config.padding.right;\n};\n/**\n * X Axis label's starting position below the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getXAxisLabelXPosition = function getXAxisLabelXPosition(config) {\n  return getXAxisXPosition(config) + getXAxisWidth(config) / 2;\n};\n/**\n * X Axis label's position vertically below the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getXAxisLabelYPosition = function getXAxisLabelYPosition(config) {\n  return getXAxisYPosition(config) + config.axisLabelHeights.x * 2 + config.padding.bottom * 4;\n};\n/**\n * Prepares X,Y and Y2 Axes according to their scale and available container width and height\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} - Scaled axes object\n */\nvar getAxesScale = function getAxesScale(axis, scale, config) {\n  axis.x = (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.prepareXAxis)(scale.x, config.axis.x.ticks.values, getXAxisWidth(config), (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getAxisTickFormat)(config.d3Locale, config.axis.x.ticks.format, config.axis.x.type)).tickSize(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TIMELINE_TICK_LENGTH);\n  return axis;\n};\n/**\n * Creates and sets the d3 scale for the Graph. Once the scale is created\n * we can create the axes. To create a d3 scale, we need domain and range.\n * To create an axis we need scale, orientation and tick values, if needed\n *\n * The scale function uses d3.linear.nice which rounds the values in the axes.\n * i.e. [0.20147987687960267, 0.996679553296417] will get translated to [0.2, 1]\n *\n * The scale function uses d3.linear.clamp which \"clamps\" the scale so that any\n * input provided will clamp between the domain.\n * i.e. Before, If you have domain 0 to 20 (input lower and upper bounds) and range 0 to 100 (Width in px).\n * When input 20 is provided then the scale returns the px positioning as 200, which would put the point outside the graph.\n * Instead we clamp it within the graph as an upper bound using clamp. Now, it will return 100px.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar scaleGraph = function scaleGraph(scale, config) {\n  scale.x = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.scaleTime().domain([config.axis.x.domain.lowerLimit, config.axis.x.domain.upperLimit]).range([0, getXAxisWidth(config)]).clamp(config.settingsDictionary.shouldClamp);\n  if (config.axis.x.rangeRounding) {\n    scale.x.nice();\n  }\n};\n/**\n * Added defs element for the canvas. This currently holds the clip paths for the entire chart.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.Selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createDefs = function createDefs(config, canvasSVG) {\n  return canvasSVG.append('defs').append('clipPath').attr('id', config.clipPathId).append('rect').attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS, getXAxisXPosition(config)).attr(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, getXAxisYPosition(config) / 2).attr('width', getXAxisWidth(config)).attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getYAxisHeight)(config));\n};\n/**\n * Create the d3 Axis - X and append into the canvas.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createAxes = function createAxes(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axis, true).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisX, true).attr('aria-hidden', false).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \", \").concat(getXAxisYPosition(config), \")\")).call(axis.x);\n};\n/**\n * Create the d3 Labels - X and append into the canvas.\n * Only if showLabel is enabled. X Axis is 0 deg rotated\n *\n * @private\n * @todo Label overflow formatting, adding ellipsis?\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createLabel = function createLabel(config, canvasSVG) {\n  if (config.showLabel) {\n    if (config.axis.x.label) {\n      var labelPath = canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].axisLabelX, true).attr('transform', \"translate(\".concat(getXAxisLabelXPosition(config), \",\").concat(getXAxisLabelYPosition(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS), \")\"));\n      (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_3__.buildAxisLabel)(labelPath, _helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].sanitize(config.axis.x.label));\n    }\n  }\n};\n/**\n * Creates a container for timeline graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createTimelineContent = function createTimelineContent(config, canvasSVG) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].timelineGraphContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\"));\n};\n/**\n * Creates a group for each timeline content loaded\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} contentConfig - content config object\n * @returns {object} d3 svg path\n */\nvar createTimelineContentGroup = function createTimelineContentGroup(config, canvasSVG, contentConfig) {\n  return canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].timelineContentGroup, true).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \",0)\")).attr('aria-labelledby', contentConfig.label.display).attr('aria-describedby', contentConfig.key);\n};\n/**\n * Toggles the selection of a dateline indicator, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode).select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].dataPointSelection));\n  selectedPointNode.attr('aria-hidden', !(selectedPointNode.attr('aria-hidden') === 'true'));\n  return selectedPointNode;\n};\n/**\n * Handler for the data point on click. If the content property is present for the data point\n * then the callback is executed other wise it is NOP.\n * If the callback is present, the selected data point is toggled and the element is passed as an argument to the\n * consumer in the callback, to execute once the popup is closed.\n *  Callback arguments:\n *      Post close callback function\n *      value [x and y data point values]\n *      Selected data point target [d3 target]\n *  On close of popup, call -> the provided callback\n *\n * @private\n * @param {object} value - data point object\n * @param {number} index - data point index for the set\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar dataPointActionHandler = function dataPointActionHandler(value, index, target) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      selectedTarget.attr('aria-hidden', true);\n    }, value.key, index, value, selectedTarget);\n  });\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *\n * @private\n * @param {object} pathProperties - holds SVG path element, data point object, data point index\n * @param {object} dataPointProperties - holds object scale, config for aria-hidden attribute,\n *    fill style, shape style, SVG class name\n * @param {object} graphProperties - holds d3 scale for Graph, Graph config derived from input\n *    JSON, and class attribute name\n * @returns {undefined} - returns nothing\n */\nvar renderPointPath = function renderPointPath(pathProperties, dataPointProperties, graphProperties) {\n  var path = pathProperties.path,\n    value = pathProperties.value,\n    index = pathProperties.index;\n  var objectScale = dataPointProperties.objectScale,\n    hiddenConfig = dataPointProperties.hiddenConfig,\n    fillStyle = dataPointProperties.fillStyle,\n    shapeStyle = dataPointProperties.shapeStyle,\n    pointStyle = dataPointProperties.pointStyle;\n  var scale = graphProperties.scale,\n    config = graphProperties.config,\n    cls = graphProperties.cls;\n  path.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_1__.Shape((0,_helpers_shapeSVG__WEBPACK_IMPORTED_MODULE_6__.getSVGObject)(shapeStyle, objectScale)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_2__.getDefaultSVGProps)({\n      svgClassNames: \"\".concat(pointStyle, \" \").concat(cls),\n      svgStyles: \"fill: \".concat(fillStyle, \";\"),\n      transformFn: (0,_translateHelpers__WEBPACK_IMPORTED_MODULE_10__.transformPoint)(scale, config)(value),\n      onClickFn: function onClickFn() {\n        dataPointActionHandler(value, index, this);\n      },\n      a11yAttributes: {\n        'aria-describedby': value.key,\n        'aria-hidden': hiddenConfig,\n        'aria-disabled': !_helpers_utils__WEBPACK_IMPORTED_MODULE_8__[\"default\"].isFunction(value.onClick)\n      }\n    }));\n  });\n};\n/**\n * Draws the points with options opted in the input JSON by the consumer for each data set.\n *  Render the point with appropriate color, shape, x and y co-ordinates, label etc.\n *  On click content callback function is called.\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 html element of the canvas\n * @returns {undefined} - returns nothing\n */\nvar createPoints = function createPoints(scale, config, canvasSVG) {\n  var renderDataPointPath = function renderDataPointPath(path, value, index) {\n    var _document$querySelect;\n    var cls;\n    var objectScale = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TIMELINE_SCALE;\n    var hiddenConfig = ((_document$querySelect = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.getAttribute('aria-current')) === 'false';\n    var fillStyle = (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getColorForTarget)(value);\n    var shapeStyle = (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getShapeForTarget)(value);\n    var pointStyle = _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].point;\n    var pathProperties = {\n      path: path,\n      value: value,\n      index: index\n    };\n    var dataPointProperties = {\n      objectScale: objectScale,\n      hiddenConfig: hiddenConfig,\n      fillStyle: fillStyle,\n      shapeStyle: shapeStyle,\n      pointStyle: pointStyle\n    };\n    var graphProperties = {\n      scale: scale,\n      config: config,\n      cls: cls\n    };\n    renderPointPath(pathProperties, dataPointProperties, graphProperties);\n  };\n  var renderSelectionPath = function renderSelectionPath(path, value, index) {\n    var fillStyle;\n    var pointStyle;\n    var objectScale = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TIMELINE_PLOT_SELECTION_SCALE;\n    var hiddenConfig = true;\n    var shapeStyle = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__.SHAPES.CIRCLE;\n    var cls = _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].dataPointSelection;\n    var pathProperties = {\n      path: path,\n      value: value,\n      index: index\n    };\n    var dataPointProperties = {\n      objectScale: objectScale,\n      hiddenConfig: hiddenConfig,\n      fillStyle: fillStyle,\n      shapeStyle: shapeStyle,\n      pointStyle: pointStyle\n    };\n    var graphProperties = {\n      scale: scale,\n      config: config,\n      cls: cls\n    };\n    renderPointPath(pathProperties, dataPointProperties, graphProperties);\n  };\n  var renderCriticalityPath = function renderCriticalityPath(path, value, index, cls, conf) {\n    var _document$querySelect2;\n    var fillStyle;\n    var objectScale = _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TIMELINE_SCALE;\n    var hiddenConfig = ((_document$querySelect2 = document.querySelector(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].legendItem, \"[aria-describedby=\\\"\").concat(value.key, \"\\\"]\"))) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.getAttribute('aria-current')) === 'false';\n    var shapeStyle = (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.getShapeForTarget)(value);\n    var pointStyle = _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].point;\n    var pathProperties = {\n      path: path,\n      value: value,\n      index: index\n    };\n    var dataPointProperties = {\n      objectScale: objectScale,\n      hiddenConfig: hiddenConfig,\n      fillStyle: fillStyle,\n      shapeStyle: shapeStyle,\n      pointStyle: pointStyle\n    };\n    var graphProperties = {\n      scale: scale,\n      config: conf,\n      cls: cls\n    };\n    renderPointPath(pathProperties, dataPointProperties, graphProperties);\n  };\n  canvasSVG.append('g').classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pointGroup, true).each(function (d, i) {\n    var dataPointSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    renderSelectionPath(dataPointSVG, d, i);\n    if (d.isCritical) {\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].criticalityTimelineOuterPoint, config);\n      renderCriticalityPath(dataPointSVG, d, i, _helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].criticalityTimelineInnerPoint, config);\n    }\n    renderDataPointPath(dataPointSVG, d, i);\n  });\n};\n/**\n * A callback that will be sent to Graph class so that when graph is\n * created the Graph API will execute this callback function and the legend\n * items are loaded.\n *\n * @private\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Object containing click and hover event handlers for legend item\n * @param {object} dataTarget - Data points object\n * @param {object} legendSVG - d3 element that will be need to render the legend\n * items into.\n * @returns {undefined} - returns nothing\n */\nvar prepareLegendItems = function prepareLegendItems(config, eventHandlers, dataTarget, legendSVG) {\n  if (dataTarget.label && dataTarget.label.display && legendSVG) {\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.loadLegendItem)(legendSVG, dataTarget, config, eventHandlers);\n  }\n};\n/**\n * Handler for Request animation frame, executes on resize.\n *  * Order of execution\n *      * Redraws the content\n *      * Shows/hides the regions\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {TimelineContent} control - TimelineContent instance\n * @returns {function()} callback function handler for RAF\n */\n// eslint-disable-next-line no-unused-vars\nvar onAnimationHandler = function onAnimationHandler(graphContext, control) {\n  return function () {\n    // control.redraw(graphContext);\n  };\n};\n/**\n * Click handler for legend item. Removes the line from graph when clicked and calls redraw\n *\n * @private\n * @param {object} graphContext - Graph instance\n * @param {TimelineContent} control - TimelineContent instance\n * @param {object} config - Graph config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles click action on legend item\n */\nvar clickHandler = function clickHandler(graphContext, control, config, canvasSVG) {\n  return function (element, item) {\n    var updateShownTarget = function updateShownTarget(shownTargets, i) {\n      var index = shownTargets.indexOf(i.key);\n      if (index > -1) {\n        shownTargets.splice(index, 1);\n      } else {\n        shownTargets.push(i.key);\n      }\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.legendClickHandler)(element);\n    updateShownTarget(config.shownTargets, item);\n    canvasSVG.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].point, \"[aria-describedby=\\\"\").concat(item.key, \"\\\"]\")).attr('aria-hidden', (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.isLegendSelected)(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element)));\n    window.requestAnimationFrame(onAnimationHandler(graphContext, control));\n  };\n};\n/**\n * Hover handler for legend item. Highlights current line and blurs the rest of the targets in Graph\n * if present.\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {Function} - returns callback function that handles hover action on legend item\n */\nvar hoverHandler = function hoverHandler(graphTargets, canvasSVG) {\n  return function (item, state) {\n    var additionalHoverHandler = function additionalHoverHandler(shownTargets, svg, currentKey, hoverState, k) {\n      svg.selectAll(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].point, \"[aria-describedby=\\\"\").concat(k, \"\\\"]\")).classed(_helpers_styles__WEBPACK_IMPORTED_MODULE_7__[\"default\"].blur, state === _helpers_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    };\n    (0,_helpers_legend__WEBPACK_IMPORTED_MODULE_5__.legendHoverHandler)(graphTargets, canvasSVG, item.key, state, [additionalHoverHandler]);\n  };\n};\n/**\n * CLear the graph data points and lines currently rendered\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 select object\n */\nvar clear = function clear(canvasSVG, dataTarget) {\n  return (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_9__.d3RemoveElement)(canvasSVG, \"g[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js":
/*!*************************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   transformPoint: function() { return /* binding */ transformPoint; },\n/* harmony export */   translateAxes: function() { return /* binding */ translateAxes; },\n/* harmony export */   translatePoints: function() { return /* binding */ translatePoints; },\n/* harmony export */   translateTimelineGraph: function() { return /* binding */ translateTimelineGraph; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_transformUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _creationHelpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./creationHelpers */ \"./packages/carbon-graphs/src/js/controls/Timeline/helpers/creationHelpers.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Updates clipPath rectangle width and height on resize.\n * `clipPath` updates are necessary since the clip-path URL needs to get\n * the necessary parameters on resize so that data points are not cut off\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar translateDefs = function translateDefs(config, canvasSVG) {\n  return canvasSVG.select(\"clipPath#\".concat(config.clipPathId)).selectAll('rect').attr('height', (0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getYAxisHeight)(config)).attr('width', (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisWidth)(config));\n};\n/**\n * Updates the x position on resize\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateAxes = function translateAxes(axis, scale, config, canvasSVG) {\n  (0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getAxesScale)(axis, scale, config);\n  canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].axisX)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisXPosition)(config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisYPosition)(config), \")\")).call(axis.x);\n};\n/**\n * Updates the x, y, y2 axes label positions on resize\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateLabel = function translateLabel(config, canvasSVG) {\n  if (config.axis.x.label) {\n    canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].axisLabelX)).transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisLabelXPosition)(config), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisLabelYPosition)(config), \") rotate(\").concat((0,_helpers_axis__WEBPACK_IMPORTED_MODULE_1__.getRotationForAxis)(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].X_AXIS), \")\"));\n  }\n};\n/**\n * Transforms the point in the timeline graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON.\n * @returns {Function} - function that returns translate string for d3 transform\n */\nvar transformPoint = function transformPoint(scale, config) {\n  return function (value) {\n    return function (scaleFactor) {\n      var getX = function getX(val) {\n        return scale.x(val.x);\n      };\n      return \"translate(\".concat(getX(value), \",\").concat((0,_creationHelpers__WEBPACK_IMPORTED_MODULE_6__.getXAxisYPosition)(config), \") scale(\").concat(scaleFactor, \")\");\n    };\n  };\n};\n/**\n * Transforms points for a data point set in the timeline graph on resize\n *\n * @private\n * @param {object} scale - d3 scale for Graph\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - d3 object of points group key\n * @param {string} style - CSS style representing the data points\n * @returns {object} d3 select object\n */\nvar translatePoints = function translatePoints(scale, config, canvasSVG, key, style) {\n  return canvasSVG.select(\".\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].timelineContentGroup, \"[aria-describedby=\\\"\").concat(key, \"\\\"]\")).selectAll(style).each(function (d) {\n    var pointGroupSVG = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this);\n    pointGroupSVG.select('g').transition().call(_helpers_constants__WEBPACK_IMPORTED_MODULE_2__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', function () {\n      return transformPoint(scale, config)(d)((0,_helpers_transformUtils__WEBPACK_IMPORTED_MODULE_4__.getTransformScale)(this));\n    });\n  });\n};\n/**\n * Translates graph based on the current positioning on resize. We\n * don't need to resize the entire graph, in our case we just need to transform:\n *  The canvas height and width\n *  The x axis x and y co-ordinates\n *  The label x and y co-ordinates\n *\n *  @private\n *  @param {object} control - Graph instance\n *  @returns {undefined} - returns nothing\n */\nvar translateTimelineGraph = function translateTimelineGraph(control) {\n  (0,_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_5__.translateCanvas)(control.config, control.svg);\n  translateDefs(control.config, control.svg);\n  translateAxes(control.axis, control.scale, control.config, control.svg);\n  translateLabel(control.config, control.svg);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/helpers/translateHelpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/Timeline/index.js":
/*!******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/Timeline/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Timeline__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timeline */ \"./packages/carbon-graphs/src/js/controls/Timeline/Timeline.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9UaW1lbGluZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvbnRyb2xzL1RpbWVsaW5lL2luZGV4LmpzPzU5NGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRpbWVsaW5lIGZyb20gJy4vVGltZWxpbmUnO1xuXG5leHBvcnQgeyBUaW1lbGluZSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiVGltZWxpbmUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/Timeline/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/controls/index.js":
/*!*********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/controls/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Bar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Bar */ \"./packages/carbon-graphs/src/js/controls/Bar/index.js\");\n/* harmony import */ var _Gantt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Gantt */ \"./packages/carbon-graphs/src/js/controls/Gantt/index.js\");\n/* harmony import */ var _Graph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Graph */ \"./packages/carbon-graphs/src/js/controls/Graph/index.js\");\n/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Line */ \"./packages/carbon-graphs/src/js/controls/Line/index.js\");\n/* harmony import */ var _PairedResult__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./PairedResult */ \"./packages/carbon-graphs/src/js/controls/PairedResult/index.js\");\n/* harmony import */ var _Pie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Pie */ \"./packages/carbon-graphs/src/js/controls/Pie/index.js\");\n/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Timeline */ \"./packages/carbon-graphs/src/js/controls/Timeline/index.js\");\n/* harmony import */ var _Scatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Scatter */ \"./packages/carbon-graphs/src/js/controls/Scatter/index.js\");\n/* harmony import */ var _Bubble__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Bubble */ \"./packages/carbon-graphs/src/js/controls/Bubble/index.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * @module api\n * @property {object} gantt Gantt based on Construct\n * @property {object} graph Graph based on Construct\n * @property {object} line Line graph based on Graph\n * @property {object} bar Bar graph based on Graph\n * @property {object} pairedResult Paired Result graph based on Graph\n * @property {object} timeline Timeline graph based on Construct\n * @property {object} bubble Bubble graph based on Graph\n * @property {object} bubbleSingleDataset Bubble graph based on Graph for single datasets\n * @property {object} bubbleMultipleDataset Bubble graph based on Graph for multiple datasets\n * @enum {object}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  gantt: function gantt(input) {\n    return new _Gantt__WEBPACK_IMPORTED_MODULE_1__[\"default\"](input);\n  },\n  graph: function graph(input) {\n    return new _Graph__WEBPACK_IMPORTED_MODULE_2__[\"default\"](input);\n  },\n  line: function line(input) {\n    return new _Line__WEBPACK_IMPORTED_MODULE_3__[\"default\"](input);\n  },\n  pairedResult: function pairedResult(input) {\n    return new _PairedResult__WEBPACK_IMPORTED_MODULE_4__[\"default\"](input);\n  },\n  timeline: function timeline(input) {\n    return new _Timeline__WEBPACK_IMPORTED_MODULE_6__[\"default\"](input);\n  },\n  pie: function pie(input) {\n    return new _Pie__WEBPACK_IMPORTED_MODULE_5__[\"default\"](input);\n  },\n  bar: function bar(input) {\n    return new _Bar__WEBPACK_IMPORTED_MODULE_0__[\"default\"](input);\n  },\n  scatter: function scatter(input) {\n    return new _Scatter__WEBPACK_IMPORTED_MODULE_7__[\"default\"](input);\n  },\n  bubble: function bubble(input) {\n    return new _Bubble__WEBPACK_IMPORTED_MODULE_8__.Bubble(input);\n  },\n  bubbleSingleDataset: function bubbleSingleDataset(input) {\n    return new _Bubble__WEBPACK_IMPORTED_MODULE_8__.BubbleSingleDataset(input);\n  },\n  bubbleMultipleDataset: function bubbleMultipleDataset(input) {\n    return new _Bubble__WEBPACK_IMPORTED_MODULE_8__.BubbleMultipleDataset(input);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXdCO0FBQ0k7QUFDQTtBQUNGO0FBQ2dCO0FBQ2xCO0FBQ1U7QUFDRjtBQUM4Qzs7QUFFOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBZTtFQUNiVyxLQUFLLEVBQUUsU0FBQUEsTUFBQ0MsS0FBSztJQUFBLE9BQUssSUFBSVgsOENBQUssQ0FBQ1csS0FBSyxDQUFDO0VBQUE7RUFDbENDLEtBQUssRUFBRSxTQUFBQSxNQUFDRCxLQUFLO0lBQUEsT0FBSyxJQUFJViw4Q0FBSyxDQUFDVSxLQUFLLENBQUM7RUFBQTtFQUNsQ0UsSUFBSSxFQUFFLFNBQUFBLEtBQUNGLEtBQUs7SUFBQSxPQUFLLElBQUlULDZDQUFJLENBQUNTLEtBQUssQ0FBQztFQUFBO0VBQ2hDRyxZQUFZLEVBQUUsU0FBQUEsYUFBQ0gsS0FBSztJQUFBLE9BQUssSUFBSVIscURBQVksQ0FBQ1EsS0FBSyxDQUFDO0VBQUE7RUFDaERJLFFBQVEsRUFBRSxTQUFBQSxTQUFDSixLQUFLO0lBQUEsT0FBSyxJQUFJTixpREFBUSxDQUFDTSxLQUFLLENBQUM7RUFBQTtFQUN4Q0ssR0FBRyxFQUFFLFNBQUFBLElBQUNMLEtBQUs7SUFBQSxPQUFLLElBQUlQLDRDQUFHLENBQUNPLEtBQUssQ0FBQztFQUFBO0VBQzlCTSxHQUFHLEVBQUUsU0FBQUEsSUFBQ04sS0FBSztJQUFBLE9BQUssSUFBSVosNENBQUcsQ0FBQ1ksS0FBSyxDQUFDO0VBQUE7RUFDOUJPLE9BQU8sRUFBRSxTQUFBQSxRQUFDUCxLQUFLO0lBQUEsT0FBSyxJQUFJTCxnREFBTyxDQUFDSyxLQUFLLENBQUM7RUFBQTtFQUN0Q1EsTUFBTSxFQUFFLFNBQUFBLE9BQUNSLEtBQUs7SUFBQSxPQUFLLElBQUlKLDJDQUFNLENBQUNJLEtBQUssQ0FBQztFQUFBO0VBQ3BDUyxtQkFBbUIsRUFBRSxTQUFBQSxvQkFBQ1QsS0FBSztJQUFBLE9BQUssSUFBSUgsd0RBQW1CLENBQUNHLEtBQUssQ0FBQztFQUFBO0VBQzlEVSxxQkFBcUIsRUFBRSxTQUFBQSxzQkFBQ1YsS0FBSztJQUFBLE9BQUssSUFBSUYsMERBQXFCLENBQUNFLEtBQUssQ0FBQztFQUFBO0FBQ3BFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb250cm9scy9pbmRleC5qcz9hYjM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXIgZnJvbSAnLi9CYXInO1xuaW1wb3J0IEdhbnR0IGZyb20gJy4vR2FudHQnO1xuaW1wb3J0IEdyYXBoIGZyb20gJy4vR3JhcGgnO1xuaW1wb3J0IExpbmUgZnJvbSAnLi9MaW5lJztcbmltcG9ydCBQYWlyZWRSZXN1bHQgZnJvbSAnLi9QYWlyZWRSZXN1bHQnO1xuaW1wb3J0IFBpZSBmcm9tICcuL1BpZSc7XG5pbXBvcnQgVGltZWxpbmUgZnJvbSAnLi9UaW1lbGluZSc7XG5pbXBvcnQgU2NhdHRlciBmcm9tICcuL1NjYXR0ZXInO1xuaW1wb3J0IHsgQnViYmxlLCBCdWJibGVTaW5nbGVEYXRhc2V0LCBCdWJibGVNdWx0aXBsZURhdGFzZXQgfSBmcm9tICcuL0J1YmJsZSc7XG5cbi8qKlxuICogQG1vZHVsZSBhcGlcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBnYW50dCBHYW50dCBiYXNlZCBvbiBDb25zdHJ1Y3RcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBncmFwaCBHcmFwaCBiYXNlZCBvbiBDb25zdHJ1Y3RcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBsaW5lIExpbmUgZ3JhcGggYmFzZWQgb24gR3JhcGhcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBiYXIgQmFyIGdyYXBoIGJhc2VkIG9uIEdyYXBoXG4gKiBAcHJvcGVydHkge29iamVjdH0gcGFpcmVkUmVzdWx0IFBhaXJlZCBSZXN1bHQgZ3JhcGggYmFzZWQgb24gR3JhcGhcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSB0aW1lbGluZSBUaW1lbGluZSBncmFwaCBiYXNlZCBvbiBDb25zdHJ1Y3RcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBidWJibGUgQnViYmxlIGdyYXBoIGJhc2VkIG9uIEdyYXBoXG4gKiBAcHJvcGVydHkge29iamVjdH0gYnViYmxlU2luZ2xlRGF0YXNldCBCdWJibGUgZ3JhcGggYmFzZWQgb24gR3JhcGggZm9yIHNpbmdsZSBkYXRhc2V0c1xuICogQHByb3BlcnR5IHtvYmplY3R9IGJ1YmJsZU11bHRpcGxlRGF0YXNldCBCdWJibGUgZ3JhcGggYmFzZWQgb24gR3JhcGggZm9yIG11bHRpcGxlIGRhdGFzZXRzXG4gKiBAZW51bSB7b2JqZWN0fVxuICovXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdhbnR0OiAoaW5wdXQpID0+IG5ldyBHYW50dChpbnB1dCksXG4gIGdyYXBoOiAoaW5wdXQpID0+IG5ldyBHcmFwaChpbnB1dCksXG4gIGxpbmU6IChpbnB1dCkgPT4gbmV3IExpbmUoaW5wdXQpLFxuICBwYWlyZWRSZXN1bHQ6IChpbnB1dCkgPT4gbmV3IFBhaXJlZFJlc3VsdChpbnB1dCksXG4gIHRpbWVsaW5lOiAoaW5wdXQpID0+IG5ldyBUaW1lbGluZShpbnB1dCksXG4gIHBpZTogKGlucHV0KSA9PiBuZXcgUGllKGlucHV0KSxcbiAgYmFyOiAoaW5wdXQpID0+IG5ldyBCYXIoaW5wdXQpLFxuICBzY2F0dGVyOiAoaW5wdXQpID0+IG5ldyBTY2F0dGVyKGlucHV0KSxcbiAgYnViYmxlOiAoaW5wdXQpID0+IG5ldyBCdWJibGUoaW5wdXQpLFxuICBidWJibGVTaW5nbGVEYXRhc2V0OiAoaW5wdXQpID0+IG5ldyBCdWJibGVTaW5nbGVEYXRhc2V0KGlucHV0KSxcbiAgYnViYmxlTXVsdGlwbGVEYXRhc2V0OiAoaW5wdXQpID0+IG5ldyBCdWJibGVNdWx0aXBsZURhdGFzZXQoaW5wdXQpLFxufTtcbiJdLCJuYW1lcyI6WyJCYXIiLCJHYW50dCIsIkdyYXBoIiwiTGluZSIsIlBhaXJlZFJlc3VsdCIsIlBpZSIsIlRpbWVsaW5lIiwiU2NhdHRlciIsIkJ1YmJsZSIsIkJ1YmJsZVNpbmdsZURhdGFzZXQiLCJCdWJibGVNdWx0aXBsZURhdGFzZXQiLCJnYW50dCIsImlucHV0IiwiZ3JhcGgiLCJsaW5lIiwicGFpcmVkUmVzdWx0IiwidGltZWxpbmUiLCJwaWUiLCJiYXIiLCJzY2F0dGVyIiwiYnViYmxlIiwiYnViYmxlU2luZ2xlRGF0YXNldCIsImJ1YmJsZU11bHRpcGxlRGF0YXNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/controls/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/BaseConfig/BaseConfig.js":
/*!*********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/BaseConfig/BaseConfig.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BaseConfig; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n\n\n\n\n\n\n/**\n * API to parse consumer input.\n *\n * @interface\n * @class BaseConfig\n */\nvar BaseConfig = /*#__PURE__*/function () {\n  function BaseConfig() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, BaseConfig);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(BaseConfig, [{\n    key: \"getConfig\",\n    value:\n    /**\n       * Returns the config object\n       *\n       * @abstract\n       * @function BaseConfig#getConfig\n       * @throws {module:errors.THROW_MSG_CONFIG_GET_CONFIG_NOT_IMPLEMENTED}\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line class-methods-use-this\n    function getConfig() {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONFIG_GET_CONFIG_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Sets the input object\n       *\n       * @abstract\n       * @function BaseConfig#setInput\n       * @throws {module:errors.THROW_MSG_CONFIG_SET_INPUT_NOT_IMPLEMENTED}\n       * @param {object} inputJSON - Input JSON\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"setInput\",\n    value: function setInput(inputJSON) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONFIG_SET_INPUT_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Validates and verifies the input JSON object\n       *\n       * @abstract\n       * @function BaseConfig#validateInput\n       * @throws {module:errors.THROW_MSG_CONFIG_VALIDATE_INPUT_NOT_IMPLEMENTED}\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"validateInput\",\n    value: function validateInput() {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONFIG_VALIDATE_INPUT_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Clones the input JSON into the config object\n       *\n       * @abstract\n       * @function BaseConfig#clone\n       * @throws {module:errors.THROW_MSG_CONFIG_CLONE_INPUT_NOT_IMPLEMENTED}\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONFIG_CLONE_INPUT_NOT_IMPLEMENTED);\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0Jhc2VDb25maWcvQmFzZUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7O0FBQUE7QUFBQTtBQUU2Qjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEEsSUFNcUJHLFVBQVU7RUFBQSxTQUFBQSxXQUFBO0lBQUFILGlGQUFBLE9BQUFHLFVBQUE7RUFBQTtFQUFBLE9BQUFGLDhFQUFBLENBQUFFLFVBQUE7SUFBQUMsR0FBQTtJQUFBQyxLQUFBO0lBQzdCO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtJQUNBLFNBQUFDLFVBQUEsRUFBWTtNQUNWLE1BQU0sSUFBSUMsS0FBSyxDQUFDTCx1REFBTSxDQUFDTSwyQ0FBMkMsQ0FBQztJQUNyRTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFKLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFJLFNBQVNDLFNBQVMsRUFBRTtNQUNsQixNQUFNLElBQUlILEtBQUssQ0FBQ0wsdURBQU0sQ0FBQ1MsMENBQTBDLENBQUM7SUFDcEU7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNFO0VBQUE7SUFBQVAsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQU8sY0FBQSxFQUFnQjtNQUNkLE1BQU0sSUFBSUwsS0FBSyxDQUFDTCx1REFBTSxDQUFDVywrQ0FBK0MsQ0FBQztJQUN6RTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0lBQ0U7RUFBQTtJQUFBVCxHQUFBO0lBQUFDLEtBQUEsRUFDQSxTQUFBUyxNQUFBLEVBQVE7TUFDTixNQUFNLElBQUlQLEtBQUssQ0FBQ0wsdURBQU0sQ0FBQ2EsNENBQTRDLENBQUM7SUFDdEU7RUFBQztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29yZS9CYXNlQ29uZmlnL0Jhc2VDb25maWcuanM/NThiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBlcnJvcnMgZnJvbSAnLi4vLi4vaGVscGVycy9lcnJvcnMnO1xuXG4vKipcbiAqIEFQSSB0byBwYXJzZSBjb25zdW1lciBpbnB1dC5cbiAqXG4gKiBAaW50ZXJmYWNlXG4gKiBAY2xhc3MgQmFzZUNvbmZpZ1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlQ29uZmlnIHtcbiAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgY29uZmlnIG9iamVjdFxuICAgICAqXG4gICAgICogQGFic3RyYWN0XG4gICAgICogQGZ1bmN0aW9uIEJhc2VDb25maWcjZ2V0Q29uZmlnXG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09ORklHX0dFVF9DT05GSUdfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGdldENvbmZpZygpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05GSUdfR0VUX0NPTkZJR19OT1RfSU1QTEVNRU5URUQpO1xuICB9XG5cbiAgLyoqXG4gICAgICogU2V0cyB0aGUgaW5wdXQgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gQmFzZUNvbmZpZyNzZXRJbnB1dFxuICAgICAqIEB0aHJvd3Mge21vZHVsZTplcnJvcnMuVEhST1dfTVNHX0NPTkZJR19TRVRfSU5QVVRfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBpbnB1dEpTT04gLSBJbnB1dCBKU09OXG4gICAgICogQHJldHVybnMge29iamVjdH0gLSBpbmhlcml0ZWQgY2xhc3MgaW5zdGFuY2VcbiAgICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzLGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgc2V0SW5wdXQoaW5wdXRKU09OKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9ycy5USFJPV19NU0dfQ09ORklHX1NFVF9JTlBVVF9OT1RfSU1QTEVNRU5URUQpO1xuICB9XG5cbiAgLyoqXG4gICAgICogVmFsaWRhdGVzIGFuZCB2ZXJpZmllcyB0aGUgaW5wdXQgSlNPTiBvYmplY3RcbiAgICAgKlxuICAgICAqIEBhYnN0cmFjdFxuICAgICAqIEBmdW5jdGlvbiBCYXNlQ29uZmlnI3ZhbGlkYXRlSW5wdXRcbiAgICAgKiBAdGhyb3dzIHttb2R1bGU6ZXJyb3JzLlRIUk9XX01TR19DT05GSUdfVkFMSURBVEVfSU5QVVRfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIHZhbGlkYXRlSW5wdXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9ycy5USFJPV19NU0dfQ09ORklHX1ZBTElEQVRFX0lOUFVUX05PVF9JTVBMRU1FTlRFRCk7XG4gIH1cblxuICAvKipcbiAgICAgKiBDbG9uZXMgdGhlIGlucHV0IEpTT04gaW50byB0aGUgY29uZmlnIG9iamVjdFxuICAgICAqXG4gICAgICogQGFic3RyYWN0XG4gICAgICogQGZ1bmN0aW9uIEJhc2VDb25maWcjY2xvbmVcbiAgICAgKiBAdGhyb3dzIHttb2R1bGU6ZXJyb3JzLlRIUk9XX01TR19DT05GSUdfQ0xPTkVfSU5QVVRfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGNsb25lKCkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX0NPTkZJR19DTE9ORV9JTlBVVF9OT1RfSU1QTEVNRU5URUQpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwiZXJyb3JzIiwiQmFzZUNvbmZpZyIsImtleSIsInZhbHVlIiwiZ2V0Q29uZmlnIiwiRXJyb3IiLCJUSFJPV19NU0dfQ09ORklHX0dFVF9DT05GSUdfTk9UX0lNUExFTUVOVEVEIiwic2V0SW5wdXQiLCJpbnB1dEpTT04iLCJUSFJPV19NU0dfQ09ORklHX1NFVF9JTlBVVF9OT1RfSU1QTEVNRU5URUQiLCJ2YWxpZGF0ZUlucHV0IiwiVEhST1dfTVNHX0NPTkZJR19WQUxJREFURV9JTlBVVF9OT1RfSU1QTEVNRU5URUQiLCJjbG9uZSIsIlRIUk9XX01TR19DT05GSUdfQ0xPTkVfSU5QVVRfTk9UX0lNUExFTUVOVEVEIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/BaseConfig/BaseConfig.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/BaseConfig/helper.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/BaseConfig/helper.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateClipPathId: function() { return /* binding */ generateClipPathId; },\n/* harmony export */   generateDatelineClipPathId: function() { return /* binding */ generateDatelineClipPathId; },\n/* harmony export */   getDefaultValue: function() { return /* binding */ getDefaultValue; },\n/* harmony export */   getInterpolationType: function() { return /* binding */ getInterpolationType; },\n/* harmony export */   getScale: function() { return /* binding */ getScale; },\n/* harmony export */   getStrokeDashArray: function() { return /* binding */ getStrokeDashArray; },\n/* harmony export */   getType: function() { return /* binding */ getType; },\n/* harmony export */   getXAxisDomain: function() { return /* binding */ getXAxisDomain; },\n/* harmony export */   isPanningModeEnabled: function() { return /* binding */ isPanningModeEnabled; },\n/* harmony export */   parseTypedValue: function() { return /* binding */ parseTypedValue; },\n/* harmony export */   validateBaseInput: function() { return /* binding */ validateBaseInput; }\n/* harmony export */ });\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid/v4 */ \"./node_modules/uuid/v4.js\");\n/* harmony import */ var uuid_v4__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(uuid_v4__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\n\n/**\n * Validates and verifies the input JSON object\n * Checks following properties:\n * Tests if Input is present\n * Tests if Key is present\n * Tests if Values are present\n *\n * Note: We do not need to make labels as required for any graph using\n * Graph API since there is a use case where consumers want to have a content but\n * they do not need a legend item loaded.\n *\n * @private\n * @throws module:errors.THROW_MSG_NO_DATA_POINTS\n * @throws module:errors.THROW_MSG_UNIQUE_KEY_NOT_PROVIDED\n * @throws module:errors.THROW_MSG_NO_CONTENT_DATA_LOADED\n * @param {object} input - input JSON object\n * @returns {undefined} returns nothing\n */\nvar validateBaseInput = function validateBaseInput(input) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(input)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_3__[\"default\"].THROW_MSG_NO_CONTENT_DATA_LOADED);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(input.key)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_3__[\"default\"].THROW_MSG_UNIQUE_KEY_NOT_PROVIDED);\n  }\n  if (!_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isArray(input.values)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_3__[\"default\"].THROW_MSG_NO_DATA_POINTS);\n  }\n};\n/**\n * Checks if the value is undefined and sets the default value if it is.\n *\n * @private\n * @param {object} value - A value\n * @param {object} defaultVal - A default value\n * @returns {object} A defined value\n */\nvar getDefaultValue = function getDefaultValue(value, defaultVal) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isUndefined(value) ? defaultVal : value;\n};\n/**\n * Type can be default (Number based) or timeseries\n *\n * @private\n * @param {string} type - consumer passed input type\n * @returns {object} Type property from input or \"default\"\n */\nvar getType = function getType(type) {\n  return getDefaultValue(type, _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.AXIS_TYPE.DEFAULT);\n};\n/**\n * Generates a unique clip path ID with uuidv4().\n *\n * @private\n * @returns {string} Clip path ID\n */\nvar generateClipPathId = function generateClipPathId() {\n  return \"carbon-\".concat(uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(), \"-clip\");\n};\n\n/**\n * Generates a clip path ID for Dateline with uuidv4()\n *\n * @private\n * @returns {string} Clip path Dateline ID\n */\nvar generateDatelineClipPathId = function generateDatelineClipPathId() {\n  return \"carbon-\".concat(uuid_v4__WEBPACK_IMPORTED_MODULE_0___default()(), \"-dateline-clip\");\n};\n/**\n * Interpolation type can be:\n * * Linear (default)\n * * Spline\n *\n * @private\n * @param {string} type - consumer passed interpolation type\n * @returns {object} Interpolation type property from line type or \"linear\"\n */\nvar getInterpolationType = function getInterpolationType(type) {\n  return getDefaultValue(type, _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.LINE_TYPE.LINEAR);\n};\n/**\n * Gets the scale for X Axis. If the data points are linear then\n * linear scale is provided but if the data points are datetime then\n * time scale is returned\n *\n * @private\n * @param {string} type - consumer passed input type\n * @returns {object} d3 scale object\n */\nvar getScale = function getScale(type) {\n  return getType(type) === _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.AXIS_TYPE.TIME_SERIES ? _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleTime() : _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear();\n};\n/**\n * Returns the domain for the axes. If the range is a number then the domain is treated\n * as a number or if its a datetime then they are converted to a date object and returned as\n * an array. It is returned as an array since d3 domain takes input range as an array.\n *\n * @private\n * @param {string} type - input type\n * @param {string} lowerLimit - lower limit of the axes\n * @param {string} upperLimit - upper limit of the axes\n * @returns {Array} Array represented by lower and upper limit ranges.\n */\nvar getXAxisDomain = function getXAxisDomain(type, lowerLimit, upperLimit) {\n  return getType(type) === _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.AXIS_TYPE.TIME_SERIES ? {\n    lowerLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].parseDateTime(lowerLimit),\n    upperLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].parseDateTime(upperLimit)\n  } : {\n    lowerLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getNumber(lowerLimit),\n    upperLimit: _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getNumber(upperLimit)\n  };\n};\n/**\n * Parses input value to either date or number based on xAxisType\n *\n * @private\n * @param {object} x - input x value\n * @param {object} xAxisType - Graph x axis type\n * @returns {any} - if xAxisType is time series then returns date, else returns number\n */\nvar parseTypedValue = function parseTypedValue(x, xAxisType) {\n  return getType(xAxisType) === _helpers_constants__WEBPACK_IMPORTED_MODULE_2__.AXIS_TYPE.TIME_SERIES ? _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].parseDateTime(x) : _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getNumber(x);\n};\n/**\n * Checks if panning is enabled or not\n *\n * @private\n * @param {object} config - config object used by the graph.\n * @returns {boolean} returns true of panning enabled else false.\n */\nvar isPanningModeEnabled = function isPanningModeEnabled(config) {\n  return _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isDefined(config.pan) && config.pan.enabled;\n};\n\n/**\n * Validate and return the strokeDashArray property\n *\n * @private\n * @param {object} style - style you want to apply for the line\n * @returns {string} - stroke-dasharray css value for the line\n */\nvar getStrokeDashArray = function getStrokeDashArray(style) {\n  return getDefaultValue(style.strokeDashArray, '0');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/BaseConfig/index.js":
/*!****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/BaseConfig/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _BaseConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   getDefaultValue: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.getDefaultValue; },\n/* harmony export */   getInterpolationType: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.getInterpolationType; },\n/* harmony export */   getScale: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.getScale; },\n/* harmony export */   getType: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.getType; },\n/* harmony export */   getXAxisDomain: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.getXAxisDomain; },\n/* harmony export */   parseTypedValue: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.parseTypedValue; },\n/* harmony export */   validateBaseInput: function() { return /* reexport safe */ _helper__WEBPACK_IMPORTED_MODULE_1__.validateBaseInput; }\n/* harmony export */ });\n/* harmony import */ var _BaseConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/BaseConfig.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0Jhc2VDb25maWcvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFzQztBQVVwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvcmUvQmFzZUNvbmZpZy9pbmRleC5qcz9jOGUzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXNlQ29uZmlnIGZyb20gJy4vQmFzZUNvbmZpZyc7XG5cbmltcG9ydCB7XG4gIGdldERlZmF1bHRWYWx1ZSxcbiAgZ2V0WEF4aXNEb21haW4sXG4gIGdldEludGVycG9sYXRpb25UeXBlLFxuICBnZXRTY2FsZSxcbiAgZ2V0VHlwZSxcbiAgcGFyc2VUeXBlZFZhbHVlLFxuICB2YWxpZGF0ZUJhc2VJbnB1dCxcbn0gZnJvbSAnLi9oZWxwZXInO1xuXG5leHBvcnQge1xuICBCYXNlQ29uZmlnIGFzIGRlZmF1bHQsXG4gIGdldERlZmF1bHRWYWx1ZSxcbiAgZ2V0WEF4aXNEb21haW4sXG4gIGdldFNjYWxlLFxuICBnZXRUeXBlLFxuICBnZXRJbnRlcnBvbGF0aW9uVHlwZSxcbiAgdmFsaWRhdGVCYXNlSW5wdXQsXG4gIHBhcnNlVHlwZWRWYWx1ZSxcbn07XG4iXSwibmFtZXMiOlsiQmFzZUNvbmZpZyIsImdldERlZmF1bHRWYWx1ZSIsImdldFhBeGlzRG9tYWluIiwiZ2V0SW50ZXJwb2xhdGlvblR5cGUiLCJnZXRTY2FsZSIsImdldFR5cGUiLCJwYXJzZVR5cGVkVmFsdWUiLCJ2YWxpZGF0ZUJhc2VJbnB1dCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/BaseConfig/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Construct/Construct.js":
/*!*******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Construct/Construct.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Construct; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n\n\n\n\n\n\n/**\n * The base construct interface from which all graphs can inherit.\n * Charts like:\n * * Graph API\n * * c3 graph abstractions\n *\n * @interface\n * @class Construct\n */\nvar Construct = /*#__PURE__*/function () {\n  function Construct() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Construct);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Construct, [{\n    key: \"generate\",\n    value:\n    /**\n       * Uses the input JSON for generating a graph.\n       * Draw function that is called by the parent control. This draws the Axes, grid, legend and\n       * labels for the chart construct.\n       *\n       * @abstract\n       * @function Construct#generate\n       * @throws {module:errors.THROW_MSG_CONSTRUCT_GENERATE_NOT_IMPLEMENTED}\n       * @param {object} input - Input JSON\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n    function generate(input) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONSTRUCT_GENERATE_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Load a content onto the graph.\n       * Content can be provided as a singular data set, or as an array when\n       * rendering multiple data sets\n       *\n       * @abstract\n       * @function Construct#loadContent\n       * @throws {module:errors.THROW_MSG_CONSTRUCT_LOAD_NOT_IMPLEMENTED}\n       * @param {object|array} graphContent - Graph content or an array of Graph content\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(graphContent) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONSTRUCT_LOAD_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Remove a Content or Array of Content from the chart.\n       *\n       * @abstract\n       * @function Construct#unloadContent\n       * @throws {module:errors.THROW_MSG_CONSTRUCT_UNLOAD_NOT_IMPLEMENTED}\n       * @param {object|array} graphContent - Graph content\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"unloadContent\",\n    value: function unloadContent(graphContent) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONSTRUCT_UNLOAD_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Resizes the graph based on window resize event.\n       *\n       * @abstract\n       * @function Construct#resize\n       * @throws {module:errors.THROW_MSG_CONSTRUCT_RESIZE_NOT_IMPLEMENTED}\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONSTRUCT_RESIZE_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Destroys the graph.\n       *\n       * @abstract\n       * @function Construct#destroy\n       * @throws {module:errors.THROW_MSG_CONSTRUCT_DESTROY_NOT_IMPLEMENTED}\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line class-methods-use-this\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONSTRUCT_DESTROY_NOT_IMPLEMENTED);\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0NvbnN0cnVjdC9Db25zdHJ1Y3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUFBO0FBQUE7QUFFNkI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBLElBU3FCRyxTQUFTO0VBQUEsU0FBQUEsVUFBQTtJQUFBSCxpRkFBQSxPQUFBRyxTQUFBO0VBQUE7RUFBQSxPQUFBRiw4RUFBQSxDQUFBRSxTQUFBO0lBQUFDLEdBQUE7SUFBQUMsS0FBQTtJQUM1QjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0lBQ0U7SUFDQSxTQUFBQyxTQUFTQyxLQUFLLEVBQUU7TUFDZCxNQUFNLElBQUlDLEtBQUssQ0FBQ04sdURBQU0sQ0FBQ08sNENBQTRDLENBQUM7SUFDdEU7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNFO0VBQUE7SUFBQUwsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQUssWUFBWUMsWUFBWSxFQUFFO01BQ3hCLE1BQU0sSUFBSUgsS0FBSyxDQUFDTix1REFBTSxDQUFDVSx3Q0FBd0MsQ0FBQztJQUNsRTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFSLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFRLGNBQWNGLFlBQVksRUFBRTtNQUMxQixNQUFNLElBQUlILEtBQUssQ0FBQ04sdURBQU0sQ0FBQ1ksMENBQTBDLENBQUM7SUFDcEU7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNFO0VBQUE7SUFBQVYsR0FBQTtJQUFBQyxLQUFBLEVBQ0EsU0FBQVUsT0FBQSxFQUFTO01BQ1AsTUFBTSxJQUFJUCxLQUFLLENBQUNOLHVEQUFNLENBQUNjLDBDQUEwQyxDQUFDO0lBQ3BFOztJQUVBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFaLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFZLFFBQUEsRUFBVTtNQUNSLE1BQU0sSUFBSVQsS0FBSyxDQUFDTix1REFBTSxDQUFDZ0IsMkNBQTJDLENBQUM7SUFDckU7RUFBQztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29yZS9Db25zdHJ1Y3QvQ29uc3RydWN0LmpzP2FhNTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uLy4uL2hlbHBlcnMvZXJyb3JzJztcblxuLyoqXG4gKiBUaGUgYmFzZSBjb25zdHJ1Y3QgaW50ZXJmYWNlIGZyb20gd2hpY2ggYWxsIGdyYXBocyBjYW4gaW5oZXJpdC5cbiAqIENoYXJ0cyBsaWtlOlxuICogKiBHcmFwaCBBUElcbiAqICogYzMgZ3JhcGggYWJzdHJhY3Rpb25zXG4gKlxuICogQGludGVyZmFjZVxuICogQGNsYXNzIENvbnN0cnVjdFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25zdHJ1Y3Qge1xuICAvKipcbiAgICAgKiBVc2VzIHRoZSBpbnB1dCBKU09OIGZvciBnZW5lcmF0aW5nIGEgZ3JhcGguXG4gICAgICogRHJhdyBmdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCBieSB0aGUgcGFyZW50IGNvbnRyb2wuIFRoaXMgZHJhd3MgdGhlIEF4ZXMsIGdyaWQsIGxlZ2VuZCBhbmRcbiAgICAgKiBsYWJlbHMgZm9yIHRoZSBjaGFydCBjb25zdHJ1Y3QuXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gQ29uc3RydWN0I2dlbmVyYXRlXG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09OU1RSVUNUX0dFTkVSQVRFX05PVF9JTVBMRU1FTlRFRH1cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gaW5wdXQgLSBJbnB1dCBKU09OXG4gICAgICogQHJldHVybnMge29iamVjdH0gLSBpbmhlcml0ZWQgY2xhc3MgaW5zdGFuY2VcbiAgICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzLGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgZ2VuZXJhdGUoaW5wdXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05TVFJVQ1RfR0VORVJBVEVfTk9UX0lNUExFTUVOVEVEKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIExvYWQgYSBjb250ZW50IG9udG8gdGhlIGdyYXBoLlxuICAgICAqIENvbnRlbnQgY2FuIGJlIHByb3ZpZGVkIGFzIGEgc2luZ3VsYXIgZGF0YSBzZXQsIG9yIGFzIGFuIGFycmF5IHdoZW5cbiAgICAgKiByZW5kZXJpbmcgbXVsdGlwbGUgZGF0YSBzZXRzXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gQ29uc3RydWN0I2xvYWRDb250ZW50XG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09OU1RSVUNUX0xPQURfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fGFycmF5fSBncmFwaENvbnRlbnQgLSBHcmFwaCBjb250ZW50IG9yIGFuIGFycmF5IG9mIEdyYXBoIGNvbnRlbnRcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSAtIGluaGVyaXRlZCBjbGFzcyBpbnN0YW5jZVxuICAgICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMsY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICBsb2FkQ29udGVudChncmFwaENvbnRlbnQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05TVFJVQ1RfTE9BRF9OT1RfSU1QTEVNRU5URUQpO1xuICB9XG5cbiAgLyoqXG4gICAgICogUmVtb3ZlIGEgQ29udGVudCBvciBBcnJheSBvZiBDb250ZW50IGZyb20gdGhlIGNoYXJ0LlxuICAgICAqXG4gICAgICogQGFic3RyYWN0XG4gICAgICogQGZ1bmN0aW9uIENvbnN0cnVjdCN1bmxvYWRDb250ZW50XG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09OU1RSVUNUX1VOTE9BRF9OT1RfSU1QTEVNRU5URUR9XG4gICAgICogQHBhcmFtIHtvYmplY3R8YXJyYXl9IGdyYXBoQ29udGVudCAtIEdyYXBoIGNvbnRlbnRcbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0fSAtIGluaGVyaXRlZCBjbGFzcyBpbnN0YW5jZVxuICAgICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMsY2xhc3MtbWV0aG9kcy11c2UtdGhpc1xuICB1bmxvYWRDb250ZW50KGdyYXBoQ29udGVudCkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX0NPTlNUUlVDVF9VTkxPQURfTk9UX0lNUExFTUVOVEVEKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJlc2l6ZXMgdGhlIGdyYXBoIGJhc2VkIG9uIHdpbmRvdyByZXNpemUgZXZlbnQuXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gQ29uc3RydWN0I3Jlc2l6ZVxuICAgICAqIEB0aHJvd3Mge21vZHVsZTplcnJvcnMuVEhST1dfTVNHX0NPTlNUUlVDVF9SRVNJWkVfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIHJlc2l6ZSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05TVFJVQ1RfUkVTSVpFX05PVF9JTVBMRU1FTlRFRCk7XG4gIH1cblxuICAvKipcbiAgICAgKiBEZXN0cm95cyB0aGUgZ3JhcGguXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gQ29uc3RydWN0I2Rlc3Ryb3lcbiAgICAgKiBAdGhyb3dzIHttb2R1bGU6ZXJyb3JzLlRIUk9XX01TR19DT05TVFJVQ1RfREVTVFJPWV9OT1RfSU1QTEVNRU5URUR9XG4gICAgICogQHJldHVybnMge29iamVjdH0gLSBpbmhlcml0ZWQgY2xhc3MgaW5zdGFuY2VcbiAgICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgZGVzdHJveSgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05TVFJVQ1RfREVTVFJPWV9OT1RfSU1QTEVNRU5URUQpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiX2NyZWF0ZUNsYXNzIiwiZXJyb3JzIiwiQ29uc3RydWN0Iiwia2V5IiwidmFsdWUiLCJnZW5lcmF0ZSIsImlucHV0IiwiRXJyb3IiLCJUSFJPV19NU0dfQ09OU1RSVUNUX0dFTkVSQVRFX05PVF9JTVBMRU1FTlRFRCIsImxvYWRDb250ZW50IiwiZ3JhcGhDb250ZW50IiwiVEhST1dfTVNHX0NPTlNUUlVDVF9MT0FEX05PVF9JTVBMRU1FTlRFRCIsInVubG9hZENvbnRlbnQiLCJUSFJPV19NU0dfQ09OU1RSVUNUX1VOTE9BRF9OT1RfSU1QTEVNRU5URUQiLCJyZXNpemUiLCJUSFJPV19NU0dfQ09OU1RSVUNUX1JFU0laRV9OT1RfSU1QTEVNRU5URUQiLCJkZXN0cm95IiwiVEhST1dfTVNHX0NPTlNUUlVDVF9ERVNUUk9ZX05PVF9JTVBMRU1FTlRFRCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Construct/Construct.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Construct/index.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Construct/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Construct__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _Construct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Construct */ \"./packages/carbon-graphs/src/js/core/Construct/Construct.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0NvbnN0cnVjdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvcmUvQ29uc3RydWN0L2luZGV4LmpzPzgyODgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnN0cnVjdCBmcm9tICcuL0NvbnN0cnVjdCc7XG5cbmV4cG9ydCB7IENvbnN0cnVjdCBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiQ29uc3RydWN0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Construct/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/GraphContent/GraphContent.js":
/*!*************************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/GraphContent/GraphContent.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GraphContent; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n\n\n\n\n\n\n/**\n * The base content interface from which all graph controls can inherit.\n *\n * @interface\n * @class GraphContent\n */\nvar GraphContent = /*#__PURE__*/function () {\n  function GraphContent() {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, GraphContent);\n  }\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(GraphContent, [{\n    key: \"load\",\n    value:\n    /**\n       * Loads the input JSON for generating the graph.\n       *\n       * @abstract\n       * @function GraphContent#load\n       * @throws {module:errors.THROW_MSG_CONTENT_LOAD_NOT_IMPLEMENTED}\n       * @param {object} graph - Graph instance\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n    function load(graph) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONTENT_LOAD_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Remove the content from the chart.\n       *\n       * @abstract\n       * @function GraphContent#unload\n       * @throws {module:errors.THROW_MSG_CONTENT_UNLOAD_NOT_IMPLEMENTED}\n       * @param {object} graph - Graph instance\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"unload\",\n    value: function unload(graph) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONTENT_UNLOAD_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Resizes the graph based on window resize event.\n       *\n       * @abstract\n       * @function GraphContent#resize\n       * @throws {module:errors.THROW_MSG_CONTENT_RESIZE_NOT_IMPLEMENTED}\n       * @param {object} graph - Graph instance\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"resize\",\n    value: function resize(graph) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONTENT_RESIZE_NOT_IMPLEMENTED);\n    }\n\n    /**\n       * Force redraw the graph. This will be called when one of the content is removed.\n       * The situation can be when a legend item was clicked.\n       * The involves clearing the graph and redrawing the svg elements based on the data points that\n       * can be shown\n       *\n       * @abstract\n       * @function GraphContent#redraw\n       * @throws {module:errors.THROW_MSG_CONTENT_REDRAW_NOT_IMPLEMENTED}\n       * @param {object} graph - Graph instance\n       * @returns {object} - inherited class instance\n       */\n    // eslint-disable-next-line no-unused-vars,class-methods-use-this\n  }, {\n    key: \"redraw\",\n    value: function redraw(graph) {\n      throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_CONTENT_REDRAW_NOT_IMPLEMENTED);\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0dyYXBoQ29udGVudC9HcmFwaENvbnRlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUFBO0FBQUE7QUFFNkI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBLElBTXFCRyxZQUFZO0VBQUEsU0FBQUEsYUFBQTtJQUFBSCxpRkFBQSxPQUFBRyxZQUFBO0VBQUE7RUFBQSxPQUFBRiw4RUFBQSxDQUFBRSxZQUFBO0lBQUFDLEdBQUE7SUFBQUMsS0FBQTtJQUMvQjtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtJQUNBLFNBQUFDLEtBQUtDLEtBQUssRUFBRTtNQUNWLE1BQU0sSUFBSUMsS0FBSyxDQUFDTix1REFBTSxDQUFDTyxzQ0FBc0MsQ0FBQztJQUNoRTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFMLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFLLE9BQU9ILEtBQUssRUFBRTtNQUNaLE1BQU0sSUFBSUMsS0FBSyxDQUFDTix1REFBTSxDQUFDUyx3Q0FBd0MsQ0FBQztJQUNsRTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFQLEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFPLE9BQU9MLEtBQUssRUFBRTtNQUNaLE1BQU0sSUFBSUMsS0FBSyxDQUFDTix1REFBTSxDQUFDVyx3Q0FBd0MsQ0FBQztJQUNsRTs7SUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFDRTtFQUFBO0lBQUFULEdBQUE7SUFBQUMsS0FBQSxFQUNBLFNBQUFTLE9BQU9QLEtBQUssRUFBRTtNQUNaLE1BQU0sSUFBSUMsS0FBSyxDQUFDTix1REFBTSxDQUFDYSx3Q0FBd0MsQ0FBQztJQUNsRTtFQUFDO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0dyYXBoQ29udGVudC9HcmFwaENvbnRlbnQuanM/OGJmYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBlcnJvcnMgZnJvbSAnLi4vLi4vaGVscGVycy9lcnJvcnMnO1xuXG4vKipcbiAqIFRoZSBiYXNlIGNvbnRlbnQgaW50ZXJmYWNlIGZyb20gd2hpY2ggYWxsIGdyYXBoIGNvbnRyb2xzIGNhbiBpbmhlcml0LlxuICpcbiAqIEBpbnRlcmZhY2VcbiAqIEBjbGFzcyBHcmFwaENvbnRlbnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JhcGhDb250ZW50IHtcbiAgLyoqXG4gICAgICogTG9hZHMgdGhlIGlucHV0IEpTT04gZm9yIGdlbmVyYXRpbmcgdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogQGFic3RyYWN0XG4gICAgICogQGZ1bmN0aW9uIEdyYXBoQ29udGVudCNsb2FkXG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09OVEVOVF9MT0FEX05PVF9JTVBMRU1FTlRFRH1cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZ3JhcGggLSBHcmFwaCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycyxjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIGxvYWQoZ3JhcGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19DT05URU5UX0xPQURfTk9UX0lNUExFTUVOVEVEKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJlbW92ZSB0aGUgY29udGVudCBmcm9tIHRoZSBjaGFydC5cbiAgICAgKlxuICAgICAqIEBhYnN0cmFjdFxuICAgICAqIEBmdW5jdGlvbiBHcmFwaENvbnRlbnQjdW5sb2FkXG4gICAgICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfQ09OVEVOVF9VTkxPQURfTk9UX0lNUExFTUVOVEVEfVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBncmFwaCAtIEdyYXBoIGluc3RhbmNlXG4gICAgICogQHJldHVybnMge29iamVjdH0gLSBpbmhlcml0ZWQgY2xhc3MgaW5zdGFuY2VcbiAgICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzLGNsYXNzLW1ldGhvZHMtdXNlLXRoaXNcbiAgdW5sb2FkKGdyYXBoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9ycy5USFJPV19NU0dfQ09OVEVOVF9VTkxPQURfTk9UX0lNUExFTUVOVEVEKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJlc2l6ZXMgdGhlIGdyYXBoIGJhc2VkIG9uIHdpbmRvdyByZXNpemUgZXZlbnQuXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gR3JhcGhDb250ZW50I3Jlc2l6ZVxuICAgICAqIEB0aHJvd3Mge21vZHVsZTplcnJvcnMuVEhST1dfTVNHX0NPTlRFTlRfUkVTSVpFX05PVF9JTVBMRU1FTlRFRH1cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZ3JhcGggLSBHcmFwaCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycyxjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIHJlc2l6ZShncmFwaCkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX0NPTlRFTlRfUkVTSVpFX05PVF9JTVBMRU1FTlRFRCk7XG4gIH1cblxuICAvKipcbiAgICAgKiBGb3JjZSByZWRyYXcgdGhlIGdyYXBoLiBUaGlzIHdpbGwgYmUgY2FsbGVkIHdoZW4gb25lIG9mIHRoZSBjb250ZW50IGlzIHJlbW92ZWQuXG4gICAgICogVGhlIHNpdHVhdGlvbiBjYW4gYmUgd2hlbiBhIGxlZ2VuZCBpdGVtIHdhcyBjbGlja2VkLlxuICAgICAqIFRoZSBpbnZvbHZlcyBjbGVhcmluZyB0aGUgZ3JhcGggYW5kIHJlZHJhd2luZyB0aGUgc3ZnIGVsZW1lbnRzIGJhc2VkIG9uIHRoZSBkYXRhIHBvaW50cyB0aGF0XG4gICAgICogY2FuIGJlIHNob3duXG4gICAgICpcbiAgICAgKiBAYWJzdHJhY3RcbiAgICAgKiBAZnVuY3Rpb24gR3JhcGhDb250ZW50I3JlZHJhd1xuICAgICAqIEB0aHJvd3Mge21vZHVsZTplcnJvcnMuVEhST1dfTVNHX0NPTlRFTlRfUkVEUkFXX05PVF9JTVBMRU1FTlRFRH1cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gZ3JhcGggLSBHcmFwaCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtvYmplY3R9IC0gaW5oZXJpdGVkIGNsYXNzIGluc3RhbmNlXG4gICAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFycyxjbGFzcy1tZXRob2RzLXVzZS10aGlzXG4gIHJlZHJhdyhncmFwaCkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX0NPTlRFTlRfUkVEUkFXX05PVF9JTVBMRU1FTlRFRCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJlcnJvcnMiLCJHcmFwaENvbnRlbnQiLCJrZXkiLCJ2YWx1ZSIsImxvYWQiLCJncmFwaCIsIkVycm9yIiwiVEhST1dfTVNHX0NPTlRFTlRfTE9BRF9OT1RfSU1QTEVNRU5URUQiLCJ1bmxvYWQiLCJUSFJPV19NU0dfQ09OVEVOVF9VTkxPQURfTk9UX0lNUExFTUVOVEVEIiwicmVzaXplIiwiVEhST1dfTVNHX0NPTlRFTlRfUkVTSVpFX05PVF9JTVBMRU1FTlRFRCIsInJlZHJhdyIsIlRIUk9XX01TR19DT05URU5UX1JFRFJBV19OT1RfSU1QTEVNRU5URUQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/GraphContent/GraphContent.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/GraphContent/index.js":
/*!******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/GraphContent/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _GraphContent__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _GraphContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GraphContent */ \"./packages/carbon-graphs/src/js/core/GraphContent/GraphContent.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL0dyYXBoQ29udGVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvcmUvR3JhcGhDb250ZW50L2luZGV4LmpzP2JkMzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdyYXBoQ29udGVudCBmcm9tICcuL0dyYXBoQ29udGVudCc7XG5cbmV4cG9ydCB7IEdyYXBoQ29udGVudCBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiR3JhcGhDb250ZW50IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/GraphContent/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Shape/Shape.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Shape/Shape.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultSVGProps: function() { return /* binding */ getDefaultSVGProps; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helpers */ \"./packages/carbon-graphs/src/js/core/Shape/helpers.js\");\n\n\n\n\n\n\n/**\n * Creates a skeleton for SVG props used to generate nested SVG\n *\n * @public\n * @param {object} [SVGProps] - SVG default props\n * @property {string} svgClassNames - SVG class name\n * @property {string} svgStyles - SVG styles\n * @property {Function} transformFn - Function callback for translating SVG\n * @property {Function} onClickFn - Function callback for onclick event\n * @property {object} a11yAttributes - a11y attributes for SVG\n * @returns {object} Object containing custom named SVG properties\n */\nvar getDefaultSVGProps = function getDefaultSVGProps() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref$svgClassNames = _ref.svgClassNames,\n    svgClassNames = _ref$svgClassNames === void 0 ? '' : _ref$svgClassNames,\n    _ref$svgStyles = _ref.svgStyles,\n    svgStyles = _ref$svgStyles === void 0 ? '' : _ref$svgStyles,\n    _ref$transformFn = _ref.transformFn,\n    transformFn = _ref$transformFn === void 0 ? function () {} : _ref$transformFn,\n    _ref$onClickFn = _ref.onClickFn,\n    onClickFn = _ref$onClickFn === void 0 ? function () {} : _ref$onClickFn,\n    _ref$a11yAttributes = _ref.a11yAttributes,\n    a11yAttributes = _ref$a11yAttributes === void 0 ? {} : _ref$a11yAttributes,\n    _ref$additionalAttrib = _ref.additionalAttributes,\n    additionalAttributes = _ref$additionalAttrib === void 0 ? {} : _ref$additionalAttrib;\n  return {\n    svgClassNames: svgClassNames,\n    svgStyles: svgStyles,\n    transformFn: transformFn,\n    onClickFn: onClickFn,\n    a11yAttributes: a11yAttributes,\n    additionalAttributes: additionalAttributes\n  };\n};\n\n/**\n * A Shape is a data point representation in a graph.\n * This is also used as a point in the legend\n *\n * @class Shape\n */\nvar Shape = /*#__PURE__*/function () {\n  function Shape(shape) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, Shape);\n    (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.validateShape)(shape);\n    this.shape = shape;\n  }\n\n  /**\n     * Returns the shape element. Shape element is an svg element containing a path element.\n     * The consumer can customize the classNames and styles for the svg and path elements accordingly\n     * using the function parameters.\n     *\n     * @public\n     * @param {object} svgProps - SVG element attributes loaded by the consumer. This is required parameter for creating a non-generic svg\n     * @param {boolean} [includeViewBox] -  Include viewBox in the SVG element or otherwise. False by default\n     * @returns {HTMLElement} an svg element\n     */\n  return (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Shape, [{\n    key: \"getShapeElement\",\n    value: function getShapeElement(svgProps) {\n      var includeViewBox = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.createSVG)(this.shape, svgProps || getDefaultSVGProps(), includeViewBox);\n    }\n  }]);\n}();\nShape.getDefaultSVGProps = getDefaultSVGProps;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Shape);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL1NoYXBlL1NoYXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTs7QUFBQTtBQUFBO0FBRXdDOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNSSxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBO0VBQUEsSUFBQUMsSUFBQSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFPM0IsQ0FBQyxDQUFDO0lBQUFHLGtCQUFBLEdBQUFKLElBQUEsQ0FOSkssYUFBYTtJQUFiQSxhQUFhLEdBQUFELGtCQUFBLGNBQUcsRUFBRSxHQUFBQSxrQkFBQTtJQUFBRSxjQUFBLEdBQUFOLElBQUEsQ0FDbEJPLFNBQVM7SUFBVEEsU0FBUyxHQUFBRCxjQUFBLGNBQUcsRUFBRSxHQUFBQSxjQUFBO0lBQUFFLGdCQUFBLEdBQUFSLElBQUEsQ0FDZFMsV0FBVztJQUFYQSxXQUFXLEdBQUFELGdCQUFBLGNBQUcsWUFBTSxDQUFDLENBQUMsR0FBQUEsZ0JBQUE7SUFBQUUsY0FBQSxHQUFBVixJQUFBLENBQ3RCVyxTQUFTO0lBQVRBLFNBQVMsR0FBQUQsY0FBQSxjQUFHLFlBQU0sQ0FBQyxDQUFDLEdBQUFBLGNBQUE7SUFBQUUsbUJBQUEsR0FBQVosSUFBQSxDQUNwQmEsY0FBYztJQUFkQSxjQUFjLEdBQUFELG1CQUFBLGNBQUcsQ0FBQyxDQUFDLEdBQUFBLG1CQUFBO0lBQUFFLHFCQUFBLEdBQUFkLElBQUEsQ0FDbkJlLG9CQUFvQjtJQUFwQkEsb0JBQW9CLEdBQUFELHFCQUFBLGNBQUcsQ0FBQyxDQUFDLEdBQUFBLHFCQUFBO0VBQUEsT0FDZjtJQUNWVCxhQUFhLEVBQWJBLGFBQWE7SUFDYkUsU0FBUyxFQUFUQSxTQUFTO0lBQ1RFLFdBQVcsRUFBWEEsV0FBVztJQUNYRSxTQUFTLEVBQVRBLFNBQVM7SUFDVEUsY0FBYyxFQUFkQSxjQUFjO0lBQ2RFLG9CQUFvQixFQUFwQkE7RUFDRixDQUFDO0FBQUEsQ0FBQzs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQSxJQU1NQyxLQUFLO0VBQ1QsU0FBQUEsTUFBWUMsS0FBSyxFQUFFO0lBQUF0QixpRkFBQSxPQUFBcUIsS0FBQTtJQUNqQmxCLHVEQUFhLENBQUNtQixLQUFLLENBQUM7SUFDcEIsSUFBSSxDQUFDQSxLQUFLLEdBQUdBLEtBQUs7RUFDcEI7O0VBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFURSxPQUFBckIsOEVBQUEsQ0FBQW9CLEtBQUE7SUFBQUUsR0FBQTtJQUFBQyxLQUFBLEVBVUEsU0FBQUMsZ0JBQWdCQyxRQUFRLEVBQTBCO01BQUEsSUFBeEJDLGNBQWMsR0FBQXJCLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLEtBQUs7TUFDOUMsT0FBT0osbURBQVMsQ0FDZCxJQUFJLENBQUNvQixLQUFLLEVBQ1ZJLFFBQVEsSUFBSXRCLGtCQUFrQixDQUFDLENBQUMsRUFDaEN1QixjQUNGLENBQUM7SUFDSDtFQUFDO0FBQUE7QUFHSE4sS0FBSyxDQUFDakIsa0JBQWtCLEdBQUdBLGtCQUFrQjtBQUM3QywrREFBZWlCLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL1NoYXBlL1NoYXBlLmpzP2JiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgeyBjcmVhdGVTVkcsIHZhbGlkYXRlU2hhcGUgfSBmcm9tICcuL2hlbHBlcnMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBza2VsZXRvbiBmb3IgU1ZHIHByb3BzIHVzZWQgdG8gZ2VuZXJhdGUgbmVzdGVkIFNWR1xuICpcbiAqIEBwdWJsaWNcbiAqIEBwYXJhbSB7b2JqZWN0fSBbU1ZHUHJvcHNdIC0gU1ZHIGRlZmF1bHQgcHJvcHNcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBzdmdDbGFzc05hbWVzIC0gU1ZHIGNsYXNzIG5hbWVcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBzdmdTdHlsZXMgLSBTVkcgc3R5bGVzXG4gKiBAcHJvcGVydHkge0Z1bmN0aW9ufSB0cmFuc2Zvcm1GbiAtIEZ1bmN0aW9uIGNhbGxiYWNrIGZvciB0cmFuc2xhdGluZyBTVkdcbiAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IG9uQ2xpY2tGbiAtIEZ1bmN0aW9uIGNhbGxiYWNrIGZvciBvbmNsaWNrIGV2ZW50XG4gKiBAcHJvcGVydHkge29iamVjdH0gYTExeUF0dHJpYnV0ZXMgLSBhMTF5IGF0dHJpYnV0ZXMgZm9yIFNWR1xuICogQHJldHVybnMge29iamVjdH0gT2JqZWN0IGNvbnRhaW5pbmcgY3VzdG9tIG5hbWVkIFNWRyBwcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCBjb25zdCBnZXREZWZhdWx0U1ZHUHJvcHMgPSAoe1xuICBzdmdDbGFzc05hbWVzID0gJycsXG4gIHN2Z1N0eWxlcyA9ICcnLFxuICB0cmFuc2Zvcm1GbiA9ICgpID0+IHt9LFxuICBvbkNsaWNrRm4gPSAoKSA9PiB7fSxcbiAgYTExeUF0dHJpYnV0ZXMgPSB7fSxcbiAgYWRkaXRpb25hbEF0dHJpYnV0ZXMgPSB7fSxcbn0gPSB7fSkgPT4gKHtcbiAgc3ZnQ2xhc3NOYW1lcyxcbiAgc3ZnU3R5bGVzLFxuICB0cmFuc2Zvcm1GbixcbiAgb25DbGlja0ZuLFxuICBhMTF5QXR0cmlidXRlcyxcbiAgYWRkaXRpb25hbEF0dHJpYnV0ZXMsXG59KTtcblxuLyoqXG4gKiBBIFNoYXBlIGlzIGEgZGF0YSBwb2ludCByZXByZXNlbnRhdGlvbiBpbiBhIGdyYXBoLlxuICogVGhpcyBpcyBhbHNvIHVzZWQgYXMgYSBwb2ludCBpbiB0aGUgbGVnZW5kXG4gKlxuICogQGNsYXNzIFNoYXBlXG4gKi9cbmNsYXNzIFNoYXBlIHtcbiAgY29uc3RydWN0b3Ioc2hhcGUpIHtcbiAgICB2YWxpZGF0ZVNoYXBlKHNoYXBlKTtcbiAgICB0aGlzLnNoYXBlID0gc2hhcGU7XG4gIH1cblxuICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzaGFwZSBlbGVtZW50LiBTaGFwZSBlbGVtZW50IGlzIGFuIHN2ZyBlbGVtZW50IGNvbnRhaW5pbmcgYSBwYXRoIGVsZW1lbnQuXG4gICAgICogVGhlIGNvbnN1bWVyIGNhbiBjdXN0b21pemUgdGhlIGNsYXNzTmFtZXMgYW5kIHN0eWxlcyBmb3IgdGhlIHN2ZyBhbmQgcGF0aCBlbGVtZW50cyBhY2NvcmRpbmdseVxuICAgICAqIHVzaW5nIHRoZSBmdW5jdGlvbiBwYXJhbWV0ZXJzLlxuICAgICAqXG4gICAgICogQHB1YmxpY1xuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBzdmdQcm9wcyAtIFNWRyBlbGVtZW50IGF0dHJpYnV0ZXMgbG9hZGVkIGJ5IHRoZSBjb25zdW1lci4gVGhpcyBpcyByZXF1aXJlZCBwYXJhbWV0ZXIgZm9yIGNyZWF0aW5nIGEgbm9uLWdlbmVyaWMgc3ZnXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbaW5jbHVkZVZpZXdCb3hdIC0gIEluY2x1ZGUgdmlld0JveCBpbiB0aGUgU1ZHIGVsZW1lbnQgb3Igb3RoZXJ3aXNlLiBGYWxzZSBieSBkZWZhdWx0XG4gICAgICogQHJldHVybnMge0hUTUxFbGVtZW50fSBhbiBzdmcgZWxlbWVudFxuICAgICAqL1xuICBnZXRTaGFwZUVsZW1lbnQoc3ZnUHJvcHMsIGluY2x1ZGVWaWV3Qm94ID0gZmFsc2UpIHtcbiAgICByZXR1cm4gY3JlYXRlU1ZHKFxuICAgICAgdGhpcy5zaGFwZSxcbiAgICAgIHN2Z1Byb3BzIHx8IGdldERlZmF1bHRTVkdQcm9wcygpLFxuICAgICAgaW5jbHVkZVZpZXdCb3gsXG4gICAgKTtcbiAgfVxufVxuXG5TaGFwZS5nZXREZWZhdWx0U1ZHUHJvcHMgPSBnZXREZWZhdWx0U1ZHUHJvcHM7XG5leHBvcnQgZGVmYXVsdCBTaGFwZTtcbiJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJfY3JlYXRlQ2xhc3MiLCJjcmVhdGVTVkciLCJ2YWxpZGF0ZVNoYXBlIiwiZ2V0RGVmYXVsdFNWR1Byb3BzIiwiX3JlZiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsIl9yZWYkc3ZnQ2xhc3NOYW1lcyIsInN2Z0NsYXNzTmFtZXMiLCJfcmVmJHN2Z1N0eWxlcyIsInN2Z1N0eWxlcyIsIl9yZWYkdHJhbnNmb3JtRm4iLCJ0cmFuc2Zvcm1GbiIsIl9yZWYkb25DbGlja0ZuIiwib25DbGlja0ZuIiwiX3JlZiRhMTF5QXR0cmlidXRlcyIsImExMXlBdHRyaWJ1dGVzIiwiX3JlZiRhZGRpdGlvbmFsQXR0cmliIiwiYWRkaXRpb25hbEF0dHJpYnV0ZXMiLCJTaGFwZSIsInNoYXBlIiwia2V5IiwidmFsdWUiLCJnZXRTaGFwZUVsZW1lbnQiLCJzdmdQcm9wcyIsImluY2x1ZGVWaWV3Qm94Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Shape/Shape.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Shape/helpers.js":
/*!*************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Shape/helpers.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSVG: function() { return /* binding */ createSVG; },\n/* harmony export */   validateShape: function() { return /* binding */ validateShape; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _helpers_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _helpers_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _helpers_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\n\n/**\n * @enum {string} tagList\n * @private\n */\nvar tagList = {\n  PATH: 'path',\n  CIRCLE: 'circle',\n  RECT: 'rect',\n  POLYGON: 'polygon',\n  G: 'g',\n  STYLE: 'style'\n};\n/**\n * Creates an element with SVG specs. SVG or path\n *\n * @private\n * @param {string} tag - svg or path\n * @returns {HTMLElement} an SVG or path element\n */\nvar createElementNS = function createElementNS(tag) {\n  return document.createElementNS(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.namespaces.svg, tag);\n};\n/**\n * Validates a shape for basic structure\n *\n * @private\n * @throws {module:errors.THROW_MSG_SHAPE_PATH_EMPTY}\n * @throws {module:errors.THROW_MSG_SHAPE_OPTIONS_EMPTY}\n * @throws {module:errors.THROW_MSG_SHAPE_OPTIONS_PROPERTY_INVALID}\n * @param {string} shape -  Path object of the shape\n * @returns {undefined} - returns nothing\n */\nvar validateShape = function validateShape(shape) {\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(shape[tagList.PATH])) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_SHAPE_PATH_EMPTY);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(shape.options)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_SHAPE_OPTIONS_EMPTY);\n  }\n  if (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(shape.options.x) || _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(shape.options.y) || _helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isEmpty(shape.options.scale)) {\n    throw new Error(_helpers_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_SHAPE_OPTIONS_PROPERTY_INVALID);\n  }\n};\n/**\n * Returns svg path element with path description ('d' attr)\n *\n * @private\n * @param {Selection} d3Elem - d3 SVG element\n * @param {string} elementType - item from tagList enum\n * @param {string|Array} shapePath - Path object of the shape\n * @returns {Selection} A svg path element\n */\nvar setSVGChildProperty = function setSVGChildProperty(d3Elem, elementType, shapePath) {\n  var getD3PathElement = function getD3PathElement(path) {\n    var d3Element = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(createElementNS(elementType));\n    Object.keys(path).forEach(function (k) {\n      if (k === '_html') {\n        // eslint-disable-next-line no-underscore-dangle\n        d3Element.html(shapePath._html);\n        return;\n      }\n      d3Element.attr(k, path[k] || '');\n    });\n    return d3Element;\n  };\n  (_helpers_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isArray(shapePath) ? shapePath : [shapePath]).forEach(function (p) {\n    d3Elem.append(function () {\n      return getD3PathElement(p).node();\n    });\n  });\n  return d3Elem;\n};\n/**\n * Process the svg json\n * Uses enum `tagList`\n * Adds them as elements within the SVG group `g`\n *\n * @private\n * @param {Selection} groupElement - group element created within svg\n * @param {object} shape - Carbon SHAPE\n * @param {Function} transformFn - Function to transform individual paths within SVG\n * @param {number} scale - transform scale for the path\n * @returns {undefined} returns nothing\n */\nvar appendSVGChildren = function appendSVGChildren(groupElement, shape, transformFn, scale) {\n  // Add transform property to the entire \"g\" to move all child elements within nested svg\n  groupElement.attr('transform', transformFn(scale));\n  Object.keys(tagList).forEach(function (el) {\n    if (!shape[tagList[el]]) {\n      return;\n    }\n    setSVGChildProperty(groupElement, tagList[el], shape[tagList[el]]);\n  });\n};\n/**\n * Sets aria properties to the d3 element\n *\n * @private\n * @param {string} props - ARIA properties for SVG\n * @returns {Function} d3Elem - d3 SVG element\n */\nvar setA11yProperties = function setA11yProperties() {\n  for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n    props[_key] = arguments[_key];\n  }\n  return function (d3Elem, a11yAttributes) {\n    return props.forEach(function (prop) {\n      return Object.prototype.hasOwnProperty.call(a11yAttributes, prop) ? d3Elem.attr(prop, a11yAttributes[prop]) : undefined;\n    });\n  };\n};\n/**\n * Sets viewBox to the element\n *\n * @private\n * @param {Selection} d3Elem - d3 SVG element\n * @returns {Selection} d3Elem - d3 SVG element\n */\nvar setViewBoxProperty = function setViewBoxProperty(d3Elem) {\n  return d3Elem.attr('viewBox', _helpers_constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].VIEW_BOX_SIZE);\n};\n/**\n * Returns the SVG element container within which a path element is stored.\n * viewBox sizing is \"0 0 48 48\"\n * Default icon width and height is 1rem\n *\n * @private\n * @param {string} shape -  Path object of the shape\n * @param {object} svgElementProps -  SVG element props\n * @param {boolean} [includeViewBox] -  Include viewBox in the SVG element or otherwise. False by default\n * @returns {HTMLElement} Returns the SVG element with the \"icon\" path\n */\nvar createSVG = function createSVG(shape, _ref) {\n  var svgClassNames = _ref.svgClassNames,\n    svgStyles = _ref.svgStyles,\n    transformFn = _ref.transformFn,\n    onClickFn = _ref.onClickFn,\n    a11yAttributes = _ref.a11yAttributes,\n    additionalAttributes = _ref.additionalAttributes;\n  var includeViewBox = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var d3SVGElement = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(createElementNS('svg')).attr('x', shape.options.x).attr('y', shape.options.y).attr('style', svgStyles).attr('class', \"\".concat(_helpers_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].svgIcon, \" \").concat(svgClassNames)).attr('role', 'img').attr('pointer-events', additionalAttributes['pointer-events'] ? 'none' : 'auto').on('click', onClickFn);\n  if (includeViewBox) {\n    setViewBoxProperty(d3SVGElement);\n  }\n  // Set a11y attributes to svg element\n  setA11yProperties('aria-describedby', 'aria-hidden', 'aria-selected', 'aria-disabled')(d3SVGElement, a11yAttributes);\n  var groupElement = d3SVGElement.append('g');\n  appendSVGChildren(groupElement, shape, transformFn, shape.options.scale);\n  return d3SVGElement.node();\n};\n\n/**\n * @enum {Function}\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL1NoYXBlL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFhOztBQUV5QjtBQUNVO0FBQ047QUFDQTtBQUNGOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1LLE9BQU8sR0FBRztFQUNkQyxJQUFJLEVBQUUsTUFBTTtFQUNaQyxNQUFNLEVBQUUsUUFBUTtFQUNoQkMsSUFBSSxFQUFFLE1BQU07RUFDWkMsT0FBTyxFQUFFLFNBQVM7RUFDbEJDLENBQUMsRUFBRSxHQUFHO0VBQ05DLEtBQUssRUFBRTtBQUNULENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBSUMsR0FBRztFQUFBLE9BQUtDLFFBQVEsQ0FBQ0YsZUFBZSxDQUFDWixrREFBYSxDQUFDZ0IsR0FBRyxFQUFFSCxHQUFHLENBQUM7QUFBQTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1JLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBSUMsS0FBSyxFQUFLO0VBQy9CLElBQUlkLHNEQUFLLENBQUNlLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDYixPQUFPLENBQUNDLElBQUksQ0FBQyxDQUFDLEVBQUU7SUFDdEMsTUFBTSxJQUFJYyxLQUFLLENBQUNsQix1REFBTSxDQUFDbUIsMEJBQTBCLENBQUM7RUFDcEQ7RUFDQSxJQUFJakIsc0RBQUssQ0FBQ2UsT0FBTyxDQUFDRCxLQUFLLENBQUNJLE9BQU8sQ0FBQyxFQUFFO0lBQ2hDLE1BQU0sSUFBSUYsS0FBSyxDQUFDbEIsdURBQU0sQ0FBQ3FCLDZCQUE2QixDQUFDO0VBQ3ZEO0VBQ0EsSUFDRW5CLHNEQUFLLENBQUNlLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDSSxPQUFPLENBQUNFLENBQUMsQ0FBQyxJQUN2QnBCLHNEQUFLLENBQUNlLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDSSxPQUFPLENBQUNHLENBQUMsQ0FBQyxJQUM5QnJCLHNEQUFLLENBQUNlLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDSSxPQUFPLENBQUNJLEtBQUssQ0FBQyxFQUN6QztJQUNBLE1BQU0sSUFBSU4sS0FBSyxDQUFDbEIsdURBQU0sQ0FBQ3lCLHdDQUF3QyxDQUFDO0VBQ2xFO0FBQ0YsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUJBLENBQUlDLE1BQU0sRUFBRUMsV0FBVyxFQUFFQyxTQUFTLEVBQUs7RUFDOUQsSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFnQkEsQ0FBSUMsSUFBSSxFQUFLO0lBQ2pDLElBQU1DLFNBQVMsR0FBR2xDLDhDQUFTLENBQUNZLGVBQWUsQ0FBQ2tCLFdBQVcsQ0FBQyxDQUFDO0lBQ3pETSxNQUFNLENBQUNDLElBQUksQ0FBQ0osSUFBSSxDQUFDLENBQUNLLE9BQU8sQ0FBQyxVQUFDQyxDQUFDLEVBQUs7TUFDL0IsSUFBSUEsQ0FBQyxLQUFLLE9BQU8sRUFBRTtRQUNqQjtRQUNBTCxTQUFTLENBQUNNLElBQUksQ0FBQ1QsU0FBUyxDQUFDVSxLQUFLLENBQUM7UUFDL0I7TUFDRjtNQUNBUCxTQUFTLENBQUNRLElBQUksQ0FBQ0gsQ0FBQyxFQUFFTixJQUFJLENBQUNNLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQyxDQUFDLENBQUM7SUFDRixPQUFPTCxTQUFTO0VBQ2xCLENBQUM7RUFDRCxDQUFDOUIsc0RBQUssQ0FBQ3VDLE9BQU8sQ0FBQ1osU0FBUyxDQUFDLEdBQUdBLFNBQVMsR0FBRyxDQUFDQSxTQUFTLENBQUMsRUFBRU8sT0FBTyxDQUFDLFVBQUNNLENBQUMsRUFBSztJQUNsRWYsTUFBTSxDQUFDZ0IsTUFBTSxDQUFDO01BQUEsT0FBTWIsZ0JBQWdCLENBQUNZLENBQUMsQ0FBQyxDQUFDRSxJQUFJLENBQUMsQ0FBQztJQUFBLEVBQUM7RUFDakQsQ0FBQyxDQUFDO0VBRUYsT0FBT2pCLE1BQU07QUFDZixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTWtCLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBaUJBLENBQUlDLFlBQVksRUFBRTlCLEtBQUssRUFBRStCLFdBQVcsRUFBRXZCLEtBQUssRUFBSztFQUNyRTtFQUNBc0IsWUFBWSxDQUFDTixJQUFJLENBQUMsV0FBVyxFQUFFTyxXQUFXLENBQUN2QixLQUFLLENBQUMsQ0FBQztFQUNsRFUsTUFBTSxDQUFDQyxJQUFJLENBQUNoQyxPQUFPLENBQUMsQ0FBQ2lDLE9BQU8sQ0FBQyxVQUFDWSxFQUFFLEVBQUs7SUFDbkMsSUFBSSxDQUFDaEMsS0FBSyxDQUFDYixPQUFPLENBQUM2QyxFQUFFLENBQUMsQ0FBQyxFQUFFO01BQ3ZCO0lBQ0Y7SUFDQXRCLG1CQUFtQixDQUFDb0IsWUFBWSxFQUFFM0MsT0FBTyxDQUFDNkMsRUFBRSxDQUFDLEVBQUVoQyxLQUFLLENBQUNiLE9BQU8sQ0FBQzZDLEVBQUUsQ0FBQyxDQUFDLENBQUM7RUFDcEUsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFpQkEsQ0FBQTtFQUFBLFNBQUFDLElBQUEsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLEVBQU9DLEtBQUssT0FBQUMsS0FBQSxDQUFBSixJQUFBLEdBQUFLLElBQUEsTUFBQUEsSUFBQSxHQUFBTCxJQUFBLEVBQUFLLElBQUE7SUFBTEYsS0FBSyxDQUFBRSxJQUFBLElBQUFKLFNBQUEsQ0FBQUksSUFBQTtFQUFBO0VBQUEsT0FBSyxVQUFDNUIsTUFBTSxFQUFFNkIsY0FBYztJQUFBLE9BQUtILEtBQUssQ0FBQ2pCLE9BQU8sQ0FBQyxVQUFDcUIsSUFBSTtNQUFBLE9BQU12QixNQUFNLENBQUN3QixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixjQUFjLEVBQUVDLElBQUksQ0FBQyxHQUNuSjlCLE1BQU0sQ0FBQ2EsSUFBSSxDQUFDaUIsSUFBSSxFQUFFRCxjQUFjLENBQUNDLElBQUksQ0FBQyxDQUFDLEdBQ3ZDSSxTQUFTO0lBQUEsQ0FBQyxDQUFDO0VBQUE7QUFBQTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUcsU0FBckJBLGtCQUFrQkEsQ0FBSW5DLE1BQU07RUFBQSxPQUFLQSxNQUFNLENBQUNhLElBQUksQ0FBQyxTQUFTLEVBQUV6QywwREFBUyxDQUFDZ0UsYUFBYSxDQUFDO0FBQUE7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUNiaEQsS0FBSyxFQUFBaUQsSUFBQSxFQVVGO0VBQUEsSUFSREMsYUFBYSxHQUFBRCxJQUFBLENBQWJDLGFBQWE7SUFDYkMsU0FBUyxHQUFBRixJQUFBLENBQVRFLFNBQVM7SUFDVHBCLFdBQVcsR0FBQWtCLElBQUEsQ0FBWGxCLFdBQVc7SUFDWHFCLFNBQVMsR0FBQUgsSUFBQSxDQUFURyxTQUFTO0lBQ1RaLGNBQWMsR0FBQVMsSUFBQSxDQUFkVCxjQUFjO0lBQ2RhLG9CQUFvQixHQUFBSixJQUFBLENBQXBCSSxvQkFBb0I7RUFBQSxJQUV0QkMsY0FBYyxHQUFBbkIsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQVUsU0FBQSxHQUFBVixTQUFBLE1BQUcsS0FBSztFQUV0QixJQUFNb0IsWUFBWSxHQUFHekUsOENBQ1osQ0FBQ1ksZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQzlCOEIsSUFBSSxDQUFDLEdBQUcsRUFBRXhCLEtBQUssQ0FBQ0ksT0FBTyxDQUFDRSxDQUFDLENBQUMsQ0FDMUJrQixJQUFJLENBQUMsR0FBRyxFQUFFeEIsS0FBSyxDQUFDSSxPQUFPLENBQUNHLENBQUMsQ0FBQyxDQUMxQmlCLElBQUksQ0FBQyxPQUFPLEVBQUUyQixTQUFTLENBQUMsQ0FDeEIzQixJQUFJLENBQUMsT0FBTyxLQUFBZ0MsTUFBQSxDQUFLdkUsdURBQU0sQ0FBQ3dFLE9BQU8sT0FBQUQsTUFBQSxDQUFJTixhQUFhLENBQUUsQ0FBQyxDQUNuRDFCLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQ25CQSxJQUFJLENBQ0gsZ0JBQWdCLEVBQ2hCNkIsb0JBQW9CLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxNQUFNLEdBQUcsTUFDcEQsQ0FBQyxDQUNBSyxFQUFFLENBQUMsT0FBTyxFQUFFTixTQUFTLENBQUM7RUFFekIsSUFBSUUsY0FBYyxFQUFFO0lBQ2xCUixrQkFBa0IsQ0FBQ1MsWUFBWSxDQUFDO0VBQ2xDO0VBQ0E7RUFDQXRCLGlCQUFpQixDQUNmLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsZUFBZSxFQUNmLGVBQ0YsQ0FBQyxDQUFDc0IsWUFBWSxFQUFFZixjQUFjLENBQUM7RUFDL0IsSUFBTVYsWUFBWSxHQUFHeUIsWUFBWSxDQUFDNUIsTUFBTSxDQUFDLEdBQUcsQ0FBQztFQUM3Q0UsaUJBQWlCLENBQUNDLFlBQVksRUFBRTlCLEtBQUssRUFBRStCLFdBQVcsRUFBRS9CLEtBQUssQ0FBQ0ksT0FBTyxDQUFDSSxLQUFLLENBQUM7RUFDeEUsT0FBTytDLFlBQVksQ0FBQzNCLElBQUksQ0FBQyxDQUFDO0FBQzVCLENBQUM7O0FBRUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvY29yZS9TaGFwZS9oZWxwZXJzLmpzP2FlZmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgKiBhcyBkMyBmcm9tICcuLi8uLi9kM01vZHVsZXMnO1xuaW1wb3J0IGNvbnN0YW50cyBmcm9tICcuLi8uLi9oZWxwZXJzL2NvbnN0YW50cyc7XG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uLy4uL2hlbHBlcnMvZXJyb3JzJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vLi4vaGVscGVycy9zdHlsZXMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL2hlbHBlcnMvdXRpbHMnO1xuXG4vKipcbiAqIEBlbnVtIHtzdHJpbmd9IHRhZ0xpc3RcbiAqIEBwcml2YXRlXG4gKi9cbmNvbnN0IHRhZ0xpc3QgPSB7XG4gIFBBVEg6ICdwYXRoJyxcbiAgQ0lSQ0xFOiAnY2lyY2xlJyxcbiAgUkVDVDogJ3JlY3QnLFxuICBQT0xZR09OOiAncG9seWdvbicsXG4gIEc6ICdnJyxcbiAgU1RZTEU6ICdzdHlsZScsXG59O1xuLyoqXG4gKiBDcmVhdGVzIGFuIGVsZW1lbnQgd2l0aCBTVkcgc3BlY3MuIFNWRyBvciBwYXRoXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgLSBzdmcgb3IgcGF0aFxuICogQHJldHVybnMge0hUTUxFbGVtZW50fSBhbiBTVkcgb3IgcGF0aCBlbGVtZW50XG4gKi9cbmNvbnN0IGNyZWF0ZUVsZW1lbnROUyA9ICh0YWcpID0+IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhkMy5uYW1lc3BhY2VzLnN2ZywgdGFnKTtcbi8qKlxuICogVmFsaWRhdGVzIGEgc2hhcGUgZm9yIGJhc2ljIHN0cnVjdHVyZVxuICpcbiAqIEBwcml2YXRlXG4gKiBAdGhyb3dzIHttb2R1bGU6ZXJyb3JzLlRIUk9XX01TR19TSEFQRV9QQVRIX0VNUFRZfVxuICogQHRocm93cyB7bW9kdWxlOmVycm9ycy5USFJPV19NU0dfU0hBUEVfT1BUSU9OU19FTVBUWX1cbiAqIEB0aHJvd3Mge21vZHVsZTplcnJvcnMuVEhST1dfTVNHX1NIQVBFX09QVElPTlNfUFJPUEVSVFlfSU5WQUxJRH1cbiAqIEBwYXJhbSB7c3RyaW5nfSBzaGFwZSAtICBQYXRoIG9iamVjdCBvZiB0aGUgc2hhcGVcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9IC0gcmV0dXJucyBub3RoaW5nXG4gKi9cbmNvbnN0IHZhbGlkYXRlU2hhcGUgPSAoc2hhcGUpID0+IHtcbiAgaWYgKHV0aWxzLmlzRW1wdHkoc2hhcGVbdGFnTGlzdC5QQVRIXSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19TSEFQRV9QQVRIX0VNUFRZKTtcbiAgfVxuICBpZiAodXRpbHMuaXNFbXB0eShzaGFwZS5vcHRpb25zKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX1NIQVBFX09QVElPTlNfRU1QVFkpO1xuICB9XG4gIGlmIChcbiAgICB1dGlscy5pc0VtcHR5KHNoYXBlLm9wdGlvbnMueClcbiAgICAgICAgfHwgdXRpbHMuaXNFbXB0eShzaGFwZS5vcHRpb25zLnkpXG4gICAgICAgIHx8IHV0aWxzLmlzRW1wdHkoc2hhcGUub3B0aW9ucy5zY2FsZSlcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGVycm9ycy5USFJPV19NU0dfU0hBUEVfT1BUSU9OU19QUk9QRVJUWV9JTlZBTElEKTtcbiAgfVxufTtcbi8qKlxuICogUmV0dXJucyBzdmcgcGF0aCBlbGVtZW50IHdpdGggcGF0aCBkZXNjcmlwdGlvbiAoJ2QnIGF0dHIpXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U2VsZWN0aW9ufSBkM0VsZW0gLSBkMyBTVkcgZWxlbWVudFxuICogQHBhcmFtIHtzdHJpbmd9IGVsZW1lbnRUeXBlIC0gaXRlbSBmcm9tIHRhZ0xpc3QgZW51bVxuICogQHBhcmFtIHtzdHJpbmd8QXJyYXl9IHNoYXBlUGF0aCAtIFBhdGggb2JqZWN0IG9mIHRoZSBzaGFwZVxuICogQHJldHVybnMge1NlbGVjdGlvbn0gQSBzdmcgcGF0aCBlbGVtZW50XG4gKi9cbmNvbnN0IHNldFNWR0NoaWxkUHJvcGVydHkgPSAoZDNFbGVtLCBlbGVtZW50VHlwZSwgc2hhcGVQYXRoKSA9PiB7XG4gIGNvbnN0IGdldEQzUGF0aEVsZW1lbnQgPSAocGF0aCkgPT4ge1xuICAgIGNvbnN0IGQzRWxlbWVudCA9IGQzLnNlbGVjdChjcmVhdGVFbGVtZW50TlMoZWxlbWVudFR5cGUpKTtcbiAgICBPYmplY3Qua2V5cyhwYXRoKS5mb3JFYWNoKChrKSA9PiB7XG4gICAgICBpZiAoayA9PT0gJ19odG1sJykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGVcbiAgICAgICAgZDNFbGVtZW50Lmh0bWwoc2hhcGVQYXRoLl9odG1sKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZDNFbGVtZW50LmF0dHIoaywgcGF0aFtrXSB8fCAnJyk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGQzRWxlbWVudDtcbiAgfTtcbiAgKHV0aWxzLmlzQXJyYXkoc2hhcGVQYXRoKSA/IHNoYXBlUGF0aCA6IFtzaGFwZVBhdGhdKS5mb3JFYWNoKChwKSA9PiB7XG4gICAgZDNFbGVtLmFwcGVuZCgoKSA9PiBnZXREM1BhdGhFbGVtZW50KHApLm5vZGUoKSk7XG4gIH0pO1xuXG4gIHJldHVybiBkM0VsZW07XG59O1xuLyoqXG4gKiBQcm9jZXNzIHRoZSBzdmcganNvblxuICogVXNlcyBlbnVtIGB0YWdMaXN0YFxuICogQWRkcyB0aGVtIGFzIGVsZW1lbnRzIHdpdGhpbiB0aGUgU1ZHIGdyb3VwIGBnYFxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge1NlbGVjdGlvbn0gZ3JvdXBFbGVtZW50IC0gZ3JvdXAgZWxlbWVudCBjcmVhdGVkIHdpdGhpbiBzdmdcbiAqIEBwYXJhbSB7b2JqZWN0fSBzaGFwZSAtIENhcmJvbiBTSEFQRVxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtRm4gLSBGdW5jdGlvbiB0byB0cmFuc2Zvcm0gaW5kaXZpZHVhbCBwYXRocyB3aXRoaW4gU1ZHXG4gKiBAcGFyYW0ge251bWJlcn0gc2NhbGUgLSB0cmFuc2Zvcm0gc2NhbGUgZm9yIHRoZSBwYXRoXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfSByZXR1cm5zIG5vdGhpbmdcbiAqL1xuY29uc3QgYXBwZW5kU1ZHQ2hpbGRyZW4gPSAoZ3JvdXBFbGVtZW50LCBzaGFwZSwgdHJhbnNmb3JtRm4sIHNjYWxlKSA9PiB7XG4gIC8vIEFkZCB0cmFuc2Zvcm0gcHJvcGVydHkgdG8gdGhlIGVudGlyZSBcImdcIiB0byBtb3ZlIGFsbCBjaGlsZCBlbGVtZW50cyB3aXRoaW4gbmVzdGVkIHN2Z1xuICBncm91cEVsZW1lbnQuYXR0cigndHJhbnNmb3JtJywgdHJhbnNmb3JtRm4oc2NhbGUpKTtcbiAgT2JqZWN0LmtleXModGFnTGlzdCkuZm9yRWFjaCgoZWwpID0+IHtcbiAgICBpZiAoIXNoYXBlW3RhZ0xpc3RbZWxdXSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBzZXRTVkdDaGlsZFByb3BlcnR5KGdyb3VwRWxlbWVudCwgdGFnTGlzdFtlbF0sIHNoYXBlW3RhZ0xpc3RbZWxdXSk7XG4gIH0pO1xufTtcbi8qKlxuICogU2V0cyBhcmlhIHByb3BlcnRpZXMgdG8gdGhlIGQzIGVsZW1lbnRcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHByb3BzIC0gQVJJQSBwcm9wZXJ0aWVzIGZvciBTVkdcbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gZDNFbGVtIC0gZDMgU1ZHIGVsZW1lbnRcbiAqL1xuY29uc3Qgc2V0QTExeVByb3BlcnRpZXMgPSAoLi4ucHJvcHMpID0+IChkM0VsZW0sIGExMXlBdHRyaWJ1dGVzKSA9PiBwcm9wcy5mb3JFYWNoKChwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGExMXlBdHRyaWJ1dGVzLCBwcm9wKVxuICA/IGQzRWxlbS5hdHRyKHByb3AsIGExMXlBdHRyaWJ1dGVzW3Byb3BdKVxuICA6IHVuZGVmaW5lZCkpO1xuLyoqXG4gKiBTZXRzIHZpZXdCb3ggdG8gdGhlIGVsZW1lbnRcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtTZWxlY3Rpb259IGQzRWxlbSAtIGQzIFNWRyBlbGVtZW50XG4gKiBAcmV0dXJucyB7U2VsZWN0aW9ufSBkM0VsZW0gLSBkMyBTVkcgZWxlbWVudFxuICovXG5jb25zdCBzZXRWaWV3Qm94UHJvcGVydHkgPSAoZDNFbGVtKSA9PiBkM0VsZW0uYXR0cigndmlld0JveCcsIGNvbnN0YW50cy5WSUVXX0JPWF9TSVpFKTtcbi8qKlxuICogUmV0dXJucyB0aGUgU1ZHIGVsZW1lbnQgY29udGFpbmVyIHdpdGhpbiB3aGljaCBhIHBhdGggZWxlbWVudCBpcyBzdG9yZWQuXG4gKiB2aWV3Qm94IHNpemluZyBpcyBcIjAgMCA0OCA0OFwiXG4gKiBEZWZhdWx0IGljb24gd2lkdGggYW5kIGhlaWdodCBpcyAxcmVtXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzaGFwZSAtICBQYXRoIG9iamVjdCBvZiB0aGUgc2hhcGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBzdmdFbGVtZW50UHJvcHMgLSAgU1ZHIGVsZW1lbnQgcHJvcHNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2luY2x1ZGVWaWV3Qm94XSAtICBJbmNsdWRlIHZpZXdCb3ggaW4gdGhlIFNWRyBlbGVtZW50IG9yIG90aGVyd2lzZS4gRmFsc2UgYnkgZGVmYXVsdFxuICogQHJldHVybnMge0hUTUxFbGVtZW50fSBSZXR1cm5zIHRoZSBTVkcgZWxlbWVudCB3aXRoIHRoZSBcImljb25cIiBwYXRoXG4gKi9cbmNvbnN0IGNyZWF0ZVNWRyA9IChcbiAgc2hhcGUsXG4gIHtcbiAgICBzdmdDbGFzc05hbWVzLFxuICAgIHN2Z1N0eWxlcyxcbiAgICB0cmFuc2Zvcm1GbixcbiAgICBvbkNsaWNrRm4sXG4gICAgYTExeUF0dHJpYnV0ZXMsXG4gICAgYWRkaXRpb25hbEF0dHJpYnV0ZXMsXG4gIH0sXG4gIGluY2x1ZGVWaWV3Qm94ID0gZmFsc2UsXG4pID0+IHtcbiAgY29uc3QgZDNTVkdFbGVtZW50ID0gZDNcbiAgICAuc2VsZWN0KGNyZWF0ZUVsZW1lbnROUygnc3ZnJykpXG4gICAgLmF0dHIoJ3gnLCBzaGFwZS5vcHRpb25zLngpXG4gICAgLmF0dHIoJ3knLCBzaGFwZS5vcHRpb25zLnkpXG4gICAgLmF0dHIoJ3N0eWxlJywgc3ZnU3R5bGVzKVxuICAgIC5hdHRyKCdjbGFzcycsIGAke3N0eWxlcy5zdmdJY29ufSAke3N2Z0NsYXNzTmFtZXN9YClcbiAgICAuYXR0cigncm9sZScsICdpbWcnKVxuICAgIC5hdHRyKFxuICAgICAgJ3BvaW50ZXItZXZlbnRzJyxcbiAgICAgIGFkZGl0aW9uYWxBdHRyaWJ1dGVzWydwb2ludGVyLWV2ZW50cyddID8gJ25vbmUnIDogJ2F1dG8nLFxuICAgIClcbiAgICAub24oJ2NsaWNrJywgb25DbGlja0ZuKTtcblxuICBpZiAoaW5jbHVkZVZpZXdCb3gpIHtcbiAgICBzZXRWaWV3Qm94UHJvcGVydHkoZDNTVkdFbGVtZW50KTtcbiAgfVxuICAvLyBTZXQgYTExeSBhdHRyaWJ1dGVzIHRvIHN2ZyBlbGVtZW50XG4gIHNldEExMXlQcm9wZXJ0aWVzKFxuICAgICdhcmlhLWRlc2NyaWJlZGJ5JyxcbiAgICAnYXJpYS1oaWRkZW4nLFxuICAgICdhcmlhLXNlbGVjdGVkJyxcbiAgICAnYXJpYS1kaXNhYmxlZCcsXG4gICkoZDNTVkdFbGVtZW50LCBhMTF5QXR0cmlidXRlcyk7XG4gIGNvbnN0IGdyb3VwRWxlbWVudCA9IGQzU1ZHRWxlbWVudC5hcHBlbmQoJ2cnKTtcbiAgYXBwZW5kU1ZHQ2hpbGRyZW4oZ3JvdXBFbGVtZW50LCBzaGFwZSwgdHJhbnNmb3JtRm4sIHNoYXBlLm9wdGlvbnMuc2NhbGUpO1xuICByZXR1cm4gZDNTVkdFbGVtZW50Lm5vZGUoKTtcbn07XG5cbi8qKlxuICogQGVudW0ge0Z1bmN0aW9ufVxuICovXG5leHBvcnQgeyBjcmVhdGVTVkcsIHZhbGlkYXRlU2hhcGUgfTtcbiJdLCJuYW1lcyI6WyJkMyIsImNvbnN0YW50cyIsImVycm9ycyIsInN0eWxlcyIsInV0aWxzIiwidGFnTGlzdCIsIlBBVEgiLCJDSVJDTEUiLCJSRUNUIiwiUE9MWUdPTiIsIkciLCJTVFlMRSIsImNyZWF0ZUVsZW1lbnROUyIsInRhZyIsImRvY3VtZW50IiwibmFtZXNwYWNlcyIsInN2ZyIsInZhbGlkYXRlU2hhcGUiLCJzaGFwZSIsImlzRW1wdHkiLCJFcnJvciIsIlRIUk9XX01TR19TSEFQRV9QQVRIX0VNUFRZIiwib3B0aW9ucyIsIlRIUk9XX01TR19TSEFQRV9PUFRJT05TX0VNUFRZIiwieCIsInkiLCJzY2FsZSIsIlRIUk9XX01TR19TSEFQRV9PUFRJT05TX1BST1BFUlRZX0lOVkFMSUQiLCJzZXRTVkdDaGlsZFByb3BlcnR5IiwiZDNFbGVtIiwiZWxlbWVudFR5cGUiLCJzaGFwZVBhdGgiLCJnZXREM1BhdGhFbGVtZW50IiwicGF0aCIsImQzRWxlbWVudCIsInNlbGVjdCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiayIsImh0bWwiLCJfaHRtbCIsImF0dHIiLCJpc0FycmF5IiwicCIsImFwcGVuZCIsIm5vZGUiLCJhcHBlbmRTVkdDaGlsZHJlbiIsImdyb3VwRWxlbWVudCIsInRyYW5zZm9ybUZuIiwiZWwiLCJzZXRBMTF5UHJvcGVydGllcyIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJwcm9wcyIsIkFycmF5IiwiX2tleSIsImExMXlBdHRyaWJ1dGVzIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInVuZGVmaW5lZCIsInNldFZpZXdCb3hQcm9wZXJ0eSIsIlZJRVdfQk9YX1NJWkUiLCJjcmVhdGVTVkciLCJfcmVmIiwic3ZnQ2xhc3NOYW1lcyIsInN2Z1N0eWxlcyIsIm9uQ2xpY2tGbiIsImFkZGl0aW9uYWxBdHRyaWJ1dGVzIiwiaW5jbHVkZVZpZXdCb3giLCJkM1NWR0VsZW1lbnQiLCJjb25jYXQiLCJzdmdJY29uIiwib24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Shape/helpers.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Shape/index.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Shape/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _Shape__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   getDefaultSVGProps: function() { return /* reexport safe */ _Shape__WEBPACK_IMPORTED_MODULE_0__.getDefaultSVGProps; }\n/* harmony export */ });\n/* harmony import */ var _Shape__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Shape */ \"./packages/carbon-graphs/src/js/core/Shape/Shape.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL1NoYXBlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2NvcmUvU2hhcGUvaW5kZXguanM/NzNkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hhcGUsIHsgZ2V0RGVmYXVsdFNWR1Byb3BzIH0gZnJvbSAnLi9TaGFwZSc7XG5cbmV4cG9ydCB7IFNoYXBlIGFzIGRlZmF1bHQsIGdldERlZmF1bHRTVkdQcm9wcyB9O1xuIl0sIm5hbWVzIjpbIlNoYXBlIiwiZ2V0RGVmYXVsdFNWR1Byb3BzIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Shape/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/Shape/shapeDefinitions.js":
/*!**********************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/Shape/shapeDefinitions.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CIRCLE: function() { return /* binding */ CIRCLE; },\n/* harmony export */   CIRCLE_HASHED: function() { return /* binding */ CIRCLE_HASHED; },\n/* harmony export */   CIRCLE_LIGHT: function() { return /* binding */ CIRCLE_LIGHT; },\n/* harmony export */   CROSS: function() { return /* binding */ CROSS; },\n/* harmony export */   CROSS_LIGHT: function() { return /* binding */ CROSS_LIGHT; },\n/* harmony export */   DIAMOND: function() { return /* binding */ DIAMOND; },\n/* harmony export */   DIAMOND_LIGHT: function() { return /* binding */ DIAMOND_LIGHT; },\n/* harmony export */   LEFT_CHEVRON: function() { return /* binding */ LEFT_CHEVRON; },\n/* harmony export */   LINE: function() { return /* binding */ LINE; },\n/* harmony export */   LINE_DASHED: function() { return /* binding */ LINE_DASHED; },\n/* harmony export */   RHOMBUS: function() { return /* binding */ RHOMBUS; },\n/* harmony export */   RHOMBUS_LIGHT: function() { return /* binding */ RHOMBUS_LIGHT; },\n/* harmony export */   RIGHT_CHEVRON: function() { return /* binding */ RIGHT_CHEVRON; },\n/* harmony export */   SQUARE: function() { return /* binding */ SQUARE; },\n/* harmony export */   SQUARE_LIGHT: function() { return /* binding */ SQUARE_LIGHT; },\n/* harmony export */   TEAR_ALT: function() { return /* binding */ TEAR_ALT; },\n/* harmony export */   TEAR_ALT_LIGHT: function() { return /* binding */ TEAR_ALT_LIGHT; },\n/* harmony export */   TEAR_DROP: function() { return /* binding */ TEAR_DROP; },\n/* harmony export */   TEAR_DROP_LIGHT: function() { return /* binding */ TEAR_DROP_LIGHT; },\n/* harmony export */   TRIANGLE: function() { return /* binding */ TRIANGLE; },\n/* harmony export */   TRIANGLE_DOWN: function() { return /* binding */ TRIANGLE_DOWN; },\n/* harmony export */   TRIANGLE_DOWN_LIGHT: function() { return /* binding */ TRIANGLE_DOWN_LIGHT; },\n/* harmony export */   TRIANGLE_LIGHT: function() { return /* binding */ TRIANGLE_LIGHT; },\n/* harmony export */   VERTICAL_BAR: function() { return /* binding */ VERTICAL_BAR; },\n/* harmony export */   VERTICAL_BAR_LIGHT: function() { return /* binding */ VERTICAL_BAR_LIGHT; },\n/* harmony export */   X: function() { return /* binding */ X; },\n/* harmony export */   X_LIGHT: function() { return /* binding */ X_LIGHT; }\n/* harmony export */ });\n/* eslint-disable max-len */\n\n\n\n/**\n * The S_0001_circle.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar CIRCLE = {\n  path: {\n    d: 'M24 48C10.7 48 0 37.3 0 24S10.7 0 24 0s24 10.7 24 24-10.7 24-24 24z'\n  },\n  options: {\n    x: -5,\n    y: -5,\n    scale: 0.2\n  }\n};\n/**\n * The S_0002_diamond.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar RHOMBUS = {\n  path: {\n    d: 'M24 0l24 24-24 24L0 24 24 0z'\n  },\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0003_plus.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar CROSS = {\n  path: {\n    d: 'M0 16h16V0h16v16h16v16H32v16H16V32H0V16z'\n  },\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0004_rectangle.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar VERTICAL_BAR = {\n  path: {\n    d: 'M14 0h20v48H14V0'\n  },\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0005_square.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar SQUARE = {\n  path: {\n    d: 'M0 0h48v48H0V0z'\n  },\n  options: {\n    x: -5,\n    y: -5,\n    scale: 0.2\n  }\n};\n/**\n * The S_0006_teardrop.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TEAR_DROP = {\n  path: {\n    d: 'M24 0s4.8 5.9 14.5 17.6c6.4 8.1 5.1 19.9-2.9 26.3s-19.6 5.1-26-3c-5.4-6.8-5.4-16.5 0-23.4C19.2 5.9 24 0 24 0z'\n  },\n  options: {\n    x: -6.1,\n    y: -6,\n    scale: 0.24\n  }\n};\n/**\n * The S_0007_teardropUp.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TEAR_ALT = {\n  path: {\n    d: 'M24 48s-4.8-5.9-14.5-17.6c-6.4-8.1-5.1-19.9 2.9-26.3s19.6-5.1 26 3c5.4 6.8 5.4 16.5 0 23.4C28.8 42.1 24 48 24 48z'\n  },\n  options: {\n    x: -6.1,\n    y: -6,\n    scale: 0.24\n  }\n};\n/**\n * The S_0008_thinDiamond.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar DIAMOND = {\n  path: {\n    d: 'M24 0l12 24-12 24-12-24L24 0z'\n  },\n  options: {\n    x: -8.2,\n    y: -8,\n    scale: 0.33\n  }\n};\n/**\n * The S_0009_triangle.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TRIANGLE = {\n  path: {\n    d: 'M24 4l24 40H0L24 4z'\n  },\n  options: {\n    x: -6.3,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0010_triangleDown.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TRIANGLE_DOWN = {\n  path: {\n    d: 'M24 44L0 4h48L24 44z'\n  },\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0011_x.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar X = {\n  path: {\n    d: 'M0 12L12 0l12 12L36 0l12 12-12 12 12 12-12 12-12-12-12 12L0 36l12-12L0 12z'\n  },\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0001_circle_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar CIRCLE_LIGHT = {\n  circle: {\n    cx: '24',\n    cy: '24',\n    r: '21',\n    fill: '#FFF'\n  },\n  path: {\n    d: 'M24.1 0C10.7 0 0 10.7 0 24s10.7 24 24 24 24-10.7 24-24C48 10.8 37.3 0 24.1 0zM24 45C12.4 45 3 35.6 3 24S12.4 3 24 3s21 9.4 21 21-9.4 21-21 21z'\n  },\n  options: {\n    x: -5,\n    y: -5,\n    scale: 0.2\n  }\n};\n/**\n * The S_0002_rhombus_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar RHOMBUS_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M4.2 24L24 4.201 43.798 24 24 43.799z'\n  }, {\n    d: 'M24 0L0 24l24 24 24-24L24 0zm19.8 24L24 43.8 4.2 24 24 4.2 43.8 24z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0003_plus_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar CROSS_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M45 19v10H29v16H19V29H3V19h16V3h10v16z'\n  }, {\n    d: 'M32 16V0H16v16H0v16h16v16h16V32h16V16H32zm13 13H29v16H19V29H3V19h16V3h10v16h16v10z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0004_rectangle_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar VERTICAL_BAR_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M17 3h14v42H17z'\n  }, {\n    d: 'M14 0v48h20V0H14zm17 45H17V3h14v42z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0005_square_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar SQUARE_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M3 3h42v42H3z'\n  }, {\n    d: 'M0 0v48h48V0H0zm45 45H3V3h42v42z'\n  }],\n  options: {\n    x: -5,\n    y: -5,\n    scale: 0.2\n  }\n};\n/**\n * The S_0006_teardrop_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TEAR_DROP_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M33.7 41.6C27 46.9 17.4 45.9 12 39.2c0-.1-.1-.1-.1-.2-4.6-5.8-4.6-13.9 0-19.7 5.7-6.8 9.7-11.7 12-14.5 2.3 2.8 6.4 7.8 12.2 14.7 5.4 6.8 4.3 16.6-2.4 22.1z'\n  }, {\n    d: 'M38.4 17.6C28.7 5.9 23.9 0 23.9 0S19.1 5.9 9.5 17.5c-5.4 6.9-5.4 16.5 0 23.4 6.3 8 17.8 9.4 25.8 3.2.1 0 .1-.1.2-.2 8-6.5 9.3-18.2 2.9-26.3zM12 39.2c0-.1-.1-.1-.1-.2-4.6-5.8-4.6-13.9 0-19.7 5.7-6.8 9.7-11.7 12-14.5 2.3 2.8 6.4 7.8 12.2 14.7 5.4 6.8 4.3 16.6-2.4 22.1-6.7 5.3-16.3 4.3-21.7-2.4z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0007_teardropUp_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TEAR_ALT_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M36.1 28.6c-5.7 6.9-9.7 11.8-12.1 14.6-2.3-2.8-6.4-7.8-12.2-14.7-5.4-6.8-4.3-16.6 2.4-22.1C17.1 4.2 20.5 3 24 3c4.7 0 9.2 2.2 12.1 5.9 4.6 5.8 4.6 13.9 0 19.7z'\n  }, {\n    d: 'M38.5 7.1C35 2.6 29.6 0 24 0c-4.2 0-8.2 1.4-11.5 4.1-8 6.5-9.3 18.2-2.9 26.3C19.3 42.1 24.1 48 24.1 48s4.8-5.9 14.4-17.5c5.4-6.9 5.4-16.5 0-23.4zM11.8 28.5c-5.4-6.8-4.3-16.6 2.4-22.1C17.1 4.2 20.5 3 24 3c4.7 0 9.2 2.2 12.1 5.9 4.6 5.8 4.6 13.9 0 19.7-5.7 6.9-9.7 11.8-12.1 14.6-2.3-2.8-6.4-7.8-12.2-14.7z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0008_thinDiamond_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar DIAMOND_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M34.5 24L24 42 13.5 24 24 6z'\n  }, {\n    d: 'M24 0L10 24l14 24 14-24L24 0zm0 6l10.5 18L24 42 13.5 24 24 6z'\n  }],\n  options: {\n    x: -8.2,\n    y: -8,\n    scale: 0.33\n  }\n};\n/**\n * The S_0009_triangle_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TRIANGLE_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M42.7 41H5.3L24 9.8z'\n  }, {\n    d: 'M24 4L0 44h48L24 4zm0 5.8L42.7 41H5.3L24 9.8z'\n  }],\n  options: {\n    x: -6.3,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0010_triangleDown_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar TRIANGLE_DOWN_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M42.7 7L24 38.2 5.3 7z'\n  }, {\n    d: 'M0 4l24 40L48 4H0zm42.7 3L24 38.2 5.3 7h37.4z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0011_x_light.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar X_LIGHT = {\n  path: [{\n    fill: '#FFF',\n    d: 'M33.9 26.1l9.9 9.9-7.8 7.8-9.9-9.9-2.1-2.1-2.1 2.1-9.9 9.9L4.2 36l9.9-9.9 2.1-2.1-2.1-2.1L4.2 12 12 4.2l9.9 9.9 2.1 2.1 2.1-2.1L36 4.2l7.8 7.8-9.9 9.9-2.1 2.1z'\n  }, {\n    d: 'M48 12L36 0 24 12 12 0 0 12l12 12L0 36l12 12 12-12 12 12 12-12-12-12 12-12zM36 43.8l-9.9-9.9-2.1-2.1-2.1 2.1-9.9 9.9L4.2 36l9.9-9.9 2.1-2.1-2.1-2.1L4.2 12 12 4.2l9.9 9.9 2.1 2.1 2.1-2.1L36 4.2l7.8 7.8-9.9 9.9-2.1 2.1 2.1 2.1 9.9 9.9-7.8 7.8z'\n  }],\n  options: {\n    x: -6.2,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The S_0012_circleLines.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar CIRCLE_HASHED = {\n  circle: {\n    fill: '#FFF',\n    cx: '24',\n    cy: '24',\n    r: '23.5'\n  },\n  path: {\n    d: 'M45.49 34.685c.116-.233.227-.468.336-.705.1-.211.2-.419.285-.632.185-.437.353-.883.513-1.333.055-.157.108-.316.161-.475.353-1.068.629-2.16.828-3.267.006-.033.015-.065.021-.1a24.225 24.225 0 00.244-6.605 23.548 23.548 0 00-.329-2.191c-.014-.074-.025-.15-.04-.225a24.73 24.73 0 00-.22-.95c-.018-.074-.033-.149-.052-.222-.09-.349-.19-.694-.3-1.037l-.026-.092c-.022-.069-.039-.14-.062-.21l-.007.008a23.733 23.733 0 00-1.939-4.425l.014-.014c-.087-.154-.19-.3-.281-.45a23.504 23.504 0 00-.43-.693 23.802 23.802 0 00-.9-1.314l-.193-.257c-.206-.272-.4-.554-.615-.816l-.017.017A23.978 23.978 0 0039.3 5.514l.017-.017c-.262-.217-.544-.409-.816-.615l-.257-.193a23.46 23.46 0 00-1.314-.9 23.504 23.504 0 00-.693-.43c-.152-.091-.3-.194-.45-.281l-.014.014a23.733 23.733 0 00-4.425-1.939l.008-.007c-.07-.023-.142-.04-.212-.062-.027-.009-.055-.016-.082-.024a27.896 27.896 0 00-1.046-.3c-.071-.019-.143-.033-.214-.051a25.09 25.09 0 00-.957-.221L28.624.45a25.584 25.584 0 00-2.191-.329A24.21 24.21 0 0019.82.37c-.033.006-.064.015-.1.021a23.75 23.75 0 00-3.742.989c-.451.159-.9.328-1.334.513-.213.09-.42.189-.63.285a24.1 24.1 0 00-3.346 1.864l-.208.142a23.937 23.937 0 00-6.422 6.492 24.1 24.1 0 00-1.864 3.346c-.1.21-.195.417-.285.63a23.25 23.25 0 00-.673 1.807 23.75 23.75 0 00-.829 3.269c-.006.033-.015.064-.021.1a24.204 24.204 0 00-.244 6.604c.078.743.187 1.468.328 2.192.014.074.025.15.04.225.066.322.143.64.221.957.018.071.032.143.051.214.09.352.191.7.3 1.046.008.027.015.055.024.082.022.07.039.142.062.212l.007-.008a23.733 23.733 0 001.939 4.425l-.014.014c.087.154.19.3.281.45.139.234.283.464.43.693.286.449.586.887.9 1.314l.193.257c.206.272.4.554.615.816l.017-.017A23.993 23.993 0 008.7 42.486l-.017.017c.262.217.544.409.816.615l.257.193c.428.315.866.615 1.314.9.229.147.459.291.693.43.152.091.3.194.45.281l.014-.014a23.733 23.733 0 004.425 1.939l-.008.007c.07.023.141.04.21.062l.092.026c.343.105.688.205 1.037.3.073.019.148.034.222.052.315.078.63.154.95.22.075.015.151.026.225.04.72.141 1.449.255 2.191.329a24.21 24.21 0 006.609-.253c.033-.006.065-.015.1-.021a23.864 23.864 0 003.267-.828c.159-.053.318-.106.475-.161.45-.16.9-.328 1.333-.513.213-.09.421-.189.632-.285a23.733 23.733 0 003.345-1.865l.206-.14a23.967 23.967 0 006.43-6.496 23.873 23.873 0 001.522-2.636zM1 24c0-1.844.223-3.682.663-5.473L18.527 1.663A22.943 22.943 0 0124 1c.5 0 1 .022 1.5.054L1.054 25.5C1.022 25 1 24.505 1 24zm.955 6.549L30.549 1.955a22.896 22.896 0 014.49 1.874l-31.21 31.21a22.896 22.896 0 01-1.874-4.49zm4.276 8.038L38.587 6.231a23.225 23.225 0 013.182 3.182L9.413 41.769a23.225 23.225 0 01-3.182-3.182zm6.73 5.584l31.21-31.21a22.896 22.896 0 011.874 4.49L17.451 46.045a22.896 22.896 0 01-4.49-1.874zM24 47c-.5 0-1-.022-1.5-.054L46.946 22.5c.032.5.054 1 .054 1.5a22.994 22.994 0 01-.663 5.473L29.473 46.337c-1.791.44-3.629.662-5.473.663z'\n  },\n  options: {\n    x: -6,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The 0026_chevronLeft_a.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar LEFT_CHEVRON = {\n  path: {\n    d: 'M10.3 24L33.8 0l3.9 3.8L18 24l19.7 20.2-3.9 3.8z'\n  },\n  options: {\n    x: -6,\n    y: -6,\n    scale: 0.25\n  }\n};\n/**\n * The 0026_chevronRight_a.svg SVG file as an object.\n *\n * @private\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar RIGHT_CHEVRON = {\n  path: {\n    d: 'M37.7 24L14.2 48l-3.9-3.8L30 24 10.3 3.8 14.2 0z'\n  },\n  options: {\n    x: -6,\n    y: -6,\n    scale: 0.25\n  }\n};\n\n/**\n * The S_0013_line.svg SVG file as an object.\n *\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar LINE = {\n  path: {\n    d: 'M15 0h48v5H10V0'\n  },\n  options: {\n    x: -1,\n    y: -1,\n    scale: 0.25\n  }\n};\n\n/**\n * The S_0014_dashed_line.svg SVG file as an object.\n *\n * @type {{path: {d: string}, options: {x: number, y: number, scale: number}}}\n */\nvar LINE_DASHED = {\n  path: [{\n    d: 'M-22 0h48v7H8V0'\n  }, {\n    d: 'M-28 0h80v7H35V0'\n  }, {\n    d: 'M-18 0h80v7H80V0'\n  }],\n  options: {\n    x: -1,\n    y: -1,\n    scale: 0.2\n  }\n};\n/* eslint-enable max-len *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/Shape/shapeDefinitions.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/core/index.js":
/*!*****************************************************!*\
  !*** ./packages/carbon-graphs/src/js/core/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConfig: function() { return /* reexport safe */ _BaseConfig__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   GraphContent: function() { return /* reexport safe */ _GraphContent__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   Shape: function() { return /* reexport safe */ _Shape__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _BaseConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _GraphContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraphContent */ \"./packages/carbon-graphs/src/js/core/GraphContent/index.js\");\n/* harmony import */ var _Shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUNJO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9jb3JlL2luZGV4LmpzPzFkZGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2VDb25maWcgZnJvbSAnLi9CYXNlQ29uZmlnJztcbmltcG9ydCBHcmFwaENvbnRlbnQgZnJvbSAnLi9HcmFwaENvbnRlbnQnO1xuaW1wb3J0IFNoYXBlIGZyb20gJy4vU2hhcGUnO1xuXG5leHBvcnQgeyBCYXNlQ29uZmlnLCBHcmFwaENvbnRlbnQsIFNoYXBlIH07XG4iXSwibmFtZXMiOlsiQmFzZUNvbmZpZyIsIkdyYXBoQ29udGVudCIsIlNoYXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/core/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/d3Modules.js":
/*!****************************************************!*\
  !*** ./packages/carbon-graphs/src/js/d3Modules.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ \"./node_modules/d3-array/dist/d3-array.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(d3_array__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_array__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_array__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-axis */ \"./node_modules/d3-axis/dist/d3-axis.js\");\n/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3_axis__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_axis__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_axis__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-drag */ \"./node_modules/d3-drag/dist/d3-drag.js\");\n/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(d3_drag__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_drag__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_drag__WEBPACK_IMPORTED_MODULE_2__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-ease */ \"./node_modules/d3-ease/dist/d3-ease.js\");\n/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(d3_ease__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_ease__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_ease__WEBPACK_IMPORTED_MODULE_3__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-format */ \"./node_modules/d3-format/dist/d3-format.js\");\n/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(d3_format__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_format__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_format__WEBPACK_IMPORTED_MODULE_4__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-geo */ \"./node_modules/d3-geo/dist/d3-geo.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(d3_geo__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_geo__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_geo__WEBPACK_IMPORTED_MODULE_5__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-hierarchy */ \"./node_modules/d3-hierarchy/dist/d3-hierarchy.js\");\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(d3_hierarchy__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_hierarchy__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_hierarchy__WEBPACK_IMPORTED_MODULE_6__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-interpolate */ \"./node_modules/d3-interpolate/dist/d3-interpolate.js\");\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(d3_interpolate__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_interpolate__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_interpolate__WEBPACK_IMPORTED_MODULE_7__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-path */ \"./node_modules/d3-path/dist/d3-path.js\");\n/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(d3_path__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_path__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_path__WEBPACK_IMPORTED_MODULE_8__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-scale */ \"./node_modules/d3-scale/dist/d3-scale.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(d3_scale__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_scale__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_scale__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-selection */ \"./node_modules/d3-selection/dist/d3-selection.js\");\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(d3_selection__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_selection__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_selection__WEBPACK_IMPORTED_MODULE_10__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-shape */ \"./node_modules/d3-shape/dist/d3-shape.js\");\n/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(d3_shape__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_shape__WEBPACK_IMPORTED_MODULE_11__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_shape__WEBPACK_IMPORTED_MODULE_11__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-time */ \"./node_modules/d3-time/dist/d3-time.js\");\n/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(d3_time__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_time__WEBPACK_IMPORTED_MODULE_12__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_time__WEBPACK_IMPORTED_MODULE_12__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-time-format */ \"./node_modules/d3-time-format/dist/d3-time-format.js\");\n/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(d3_time_format__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_time_format__WEBPACK_IMPORTED_MODULE_13__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_time_format__WEBPACK_IMPORTED_MODULE_13__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! d3-timer */ \"./node_modules/d3-timer/dist/d3-timer.js\");\n/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(d3_timer__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_timer__WEBPACK_IMPORTED_MODULE_14__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_timer__WEBPACK_IMPORTED_MODULE_14__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! d3-transition */ \"./node_modules/d3-transition/dist/d3-transition.js\");\n/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(d3_transition__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in d3_transition__WEBPACK_IMPORTED_MODULE_15__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return d3_transition__WEBPACK_IMPORTED_MODULE_15__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9kM01vZHVsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0U7QUFDSDtBQUNNO0FBQ0U7QUFDUDtBQUNDO0FBQ0k7QUFDSjtBQUNEO0FBQ087QUFDTiIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2QzTW9kdWxlcy5qcz9iY2RjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ2QzLWFycmF5JztcbmV4cG9ydCAqIGZyb20gJ2QzLWF4aXMnO1xuZXhwb3J0ICogZnJvbSAnZDMtZHJhZyc7XG5leHBvcnQgKiBmcm9tICdkMy1lYXNlJztcbmV4cG9ydCAqIGZyb20gJ2QzLWZvcm1hdCc7XG5leHBvcnQgKiBmcm9tICdkMy1nZW8nO1xuZXhwb3J0ICogZnJvbSAnZDMtaGllcmFyY2h5JztcbmV4cG9ydCAqIGZyb20gJ2QzLWludGVycG9sYXRlJztcbmV4cG9ydCAqIGZyb20gJ2QzLXBhdGgnO1xuZXhwb3J0ICogZnJvbSAnZDMtc2NhbGUnO1xuZXhwb3J0ICogZnJvbSAnZDMtc2VsZWN0aW9uJztcbmV4cG9ydCAqIGZyb20gJ2QzLXNoYXBlJztcbmV4cG9ydCAqIGZyb20gJ2QzLXRpbWUnO1xuZXhwb3J0ICogZnJvbSAnZDMtdGltZS1mb3JtYXQnO1xuZXhwb3J0ICogZnJvbSAnZDMtdGltZXInO1xuZXhwb3J0ICogZnJvbSAnZDMtdHJhbnNpdGlvbic7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/d3Modules.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/axis.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/axis.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildAxisLabel: function() { return /* binding */ buildAxisLabel; },\n/* harmony export */   calculateAxesLabelSize: function() { return /* binding */ calculateAxesLabelSize; },\n/* harmony export */   calculateAxesSize: function() { return /* binding */ calculateAxesSize; },\n/* harmony export */   calculateVerticalPadding: function() { return /* binding */ calculateVerticalPadding; },\n/* harmony export */   createAxes: function() { return /* binding */ createAxes; },\n/* harmony export */   createAxisReferenceLine: function() { return /* binding */ createAxisReferenceLine; },\n/* harmony export */   createXAxisInfoRow: function() { return /* binding */ createXAxisInfoRow; },\n/* harmony export */   determineOutlierStretchFactorXAxis: function() { return /* binding */ determineOutlierStretchFactorXAxis; },\n/* harmony export */   determineOutlierStretchFactorYAxes: function() { return /* binding */ determineOutlierStretchFactorYAxes; },\n/* harmony export */   formatLabel: function() { return /* binding */ formatLabel; },\n/* harmony export */   generateYAxesTickValues: function() { return /* binding */ generateYAxesTickValues; },\n/* harmony export */   getAverageTicksCount: function() { return /* binding */ getAverageTicksCount; },\n/* harmony export */   getAxesDataRange: function() { return /* binding */ getAxesDataRange; },\n/* harmony export */   getAxesScale: function() { return /* binding */ getAxesScale; },\n/* harmony export */   getAxisInfoRowYPosition: function() { return /* binding */ getAxisInfoRowYPosition; },\n/* harmony export */   getAxisLabelHeight: function() { return /* binding */ getAxisLabelHeight; },\n/* harmony export */   getAxisLabelWidth: function() { return /* binding */ getAxisLabelWidth; },\n/* harmony export */   getAxisTickFormat: function() { return /* binding */ getAxisTickFormat; },\n/* harmony export */   getRotationForAxis: function() { return /* binding */ getRotationForAxis; },\n/* harmony export */   getTicksCountFromRange: function() { return /* binding */ getTicksCountFromRange; },\n/* harmony export */   getXAxisHeight: function() { return /* binding */ getXAxisHeight; },\n/* harmony export */   getXAxisLabelXPosition: function() { return /* binding */ getXAxisLabelXPosition; },\n/* harmony export */   getXAxisLabelYPosition: function() { return /* binding */ getXAxisLabelYPosition; },\n/* harmony export */   getXAxisRange: function() { return /* binding */ getXAxisRange; },\n/* harmony export */   getXAxisWidth: function() { return /* binding */ getXAxisWidth; },\n/* harmony export */   getXAxisXPosition: function() { return /* binding */ getXAxisXPosition; },\n/* harmony export */   getXAxisYPosition: function() { return /* binding */ getXAxisYPosition; },\n/* harmony export */   getY2AxisLabelShapeXPosition: function() { return /* binding */ getY2AxisLabelShapeXPosition; },\n/* harmony export */   getY2AxisLabelShapeYPosition: function() { return /* binding */ getY2AxisLabelShapeYPosition; },\n/* harmony export */   getY2AxisLabelXPosition: function() { return /* binding */ getY2AxisLabelXPosition; },\n/* harmony export */   getY2AxisXPosition: function() { return /* binding */ getY2AxisXPosition; },\n/* harmony export */   getY2AxisYPosition: function() { return /* binding */ getY2AxisYPosition; },\n/* harmony export */   getYAxisHeight: function() { return /* binding */ getYAxisHeight; },\n/* harmony export */   getYAxisLabelShapeXPosition: function() { return /* binding */ getYAxisLabelShapeXPosition; },\n/* harmony export */   getYAxisLabelShapeYPosition: function() { return /* binding */ getYAxisLabelShapeYPosition; },\n/* harmony export */   getYAxisLabelXPosition: function() { return /* binding */ getYAxisLabelXPosition; },\n/* harmony export */   getYAxisLabelYPosition: function() { return /* binding */ getYAxisLabelYPosition; },\n/* harmony export */   getYAxisRange: function() { return /* binding */ getYAxisRange; },\n/* harmony export */   getYAxisWidth: function() { return /* binding */ getYAxisWidth; },\n/* harmony export */   getYAxisXPosition: function() { return /* binding */ getYAxisXPosition; },\n/* harmony export */   getYAxisYPosition: function() { return /* binding */ getYAxisYPosition; },\n/* harmony export */   hasY2Axis: function() { return /* binding */ hasY2Axis; },\n/* harmony export */   isValidAxisType: function() { return /* binding */ isValidAxisType; },\n/* harmony export */   isXAxisOrientationTop: function() { return /* binding */ isXAxisOrientationTop; },\n/* harmony export */   prepareHorizontalAxis: function() { return /* binding */ prepareHorizontalAxis; },\n/* harmony export */   prepareXAxis: function() { return /* binding */ prepareXAxis; },\n/* harmony export */   prepareY2Axis: function() { return /* binding */ prepareY2Axis; },\n/* harmony export */   prepareYAxis: function() { return /* binding */ prepareYAxis; },\n/* harmony export */   processTickValues: function() { return /* binding */ processTickValues; },\n/* harmony export */   resetD3FontSize: function() { return /* binding */ resetD3FontSize; },\n/* harmony export */   setXAxisDomain: function() { return /* binding */ setXAxisDomain; },\n/* harmony export */   translateAxes: function() { return /* binding */ translateAxes; },\n/* harmony export */   translateAxisReferenceLine: function() { return /* binding */ translateAxisReferenceLine; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _controls_Bar_Bar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controls/Bar/Bar */ \"./packages/carbon-graphs/src/js/controls/Bar/Bar.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../locale */ \"./packages/carbon-graphs/src/js/locale/index.js\");\n/* harmony import */ var _datetimeBuckets__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./datetimeBuckets */ \"./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js\");\n/* harmony import */ var _label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./label */ \"./packages/carbon-graphs/src/js/helpers/label.js\");\n/* harmony import */ var _localeFormat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./localeFormat */ \"./packages/carbon-graphs/src/js/helpers/localeFormat.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @module axis\n * @alias module:axis\n */\n\n/**\n * Checks if Y or Y2 axis starts from Origin\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {string} yAxis - Y, Y2 etc\n * @returns {boolean} True if axis does not start from origin, false otherwise\n */\nvar hasNegativeLowerBound = function hasNegativeLowerBound(scale) {\n  var yAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS;\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.min(scale[yAxis].domain()) < 0 && _d3Modules__WEBPACK_IMPORTED_MODULE_1__.max(scale[yAxis].domain()) > 0;\n};\n/**\n * Parses the Y Axis lower and upper limits and returns it as an array for Y Axis reference line\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @returns {Array} x and y co-ordinate data for drawing a reference line\n */\nvar getReferenceLineData = function getReferenceLineData(scale) {\n  return [{\n    x: scale.x.domain()[0],\n    y: 0\n  }, {\n    x: scale.x.domain()[1],\n    y: 0\n  }];\n};\n/**\n * Creates a simple reference line with x and y attributes\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {string} yAxis - Y, Y2 etc\n * @returns {d3.Line} A d3 line\n */\nvar createReferenceLine = function createReferenceLine(scale, yAxis) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.line().x(function (value) {\n    return scale.x(value.x);\n  }).y(function (value) {\n    return scale[yAxis](value.y);\n  });\n};\n/**\n * Decides true if the input JSON y2.show is enabled and if y2 axis points are provided\n *\n * @private\n * @param {object} axis - x, y and y2 axes values\n * @returns {boolean} True if enabled\n */\nvar hasY2Axis = function hasY2Axis(axis) {\n  return _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(axis.y2) && axis.y2.show;\n};\n\n/**\n * Checks if X Axis orientation is set to top\n *\n * @private\n * @param {string} xAxisOrientation - X Axis orientation\n * @returns {boolean} - true if X Axis orientation is set to top, false if it is bottom(default)\n */\nvar isXAxisOrientationTop = function isXAxisOrientationTop(xAxisOrientation) {\n  return xAxisOrientation === _constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION.X.TOP;\n};\n\n/**\n * Inserts '~' just before the format type to suppress ticks values's trailing zeros when default d3 tick formatting is used\n *\n * @private\n * @param {object} axis - Scaled axes object\n * @returns {string} tick format string\n */\nvar tickFormatter = function tickFormatter(axis) {\n  var defaultTickFormat = axis.scale().tickFormat().toString();\n\n  // Return the default d3 tick format with the '~' character inserted just before the format type\n  // Eg: defaultTickFormat: .1f\n  // Value returned below will be: .1~f\n  return \"\".concat(defaultTickFormat.slice(0, defaultTickFormat.length - 1), \"~\").concat(defaultTickFormat.slice(defaultTickFormat.length - 1));\n};\n\n/**\n * Gets the tick values with correct format.\n * If there are no tick values provided then null is returned\n * If the ticks values are in a ISO8601 format then a date object is returned\n * No processing is done, otherwise\n *\n * @private\n * @param {Array} ticks - Array of values that represent the tick values\n * @returns {(Array|null)} returns processed ticks, null otherwise\n */\nvar processTickValues = function processTickValues(ticks) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(ticks)) {\n    return null;\n  }\n  return ticks.map(function (t) {\n    return _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDate(t) ? _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].parseDateTime(t) : t;\n  });\n};\n\n/**\n * Creates the axis using the scale provided for X Axis using d3 svg axis.\n * If tickValues are provided then they are reserved precedence over ticks/tick counts.\n *\n * @private\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {Array} tickValues - Array of values that represent the tick values\n * @param {number} width - Width of the canvas which will be used to tell d3 how many ticks to\n * keep in the X axis\n * @param {object} format - d3 locale object formatted to represent the tick.\n * @param {string} [orientation] - Axis orientation\n * @returns {object} d3 object which forms the x-axis scale\n */\nvar prepareXAxis = function prepareXAxis(scale, tickValues, width, format) {\n  var orientation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION.X.BOTTOM;\n  var lowerLimit = arguments.length > 5 ? arguments[5] : undefined;\n  var upperLimit = arguments.length > 6 ? arguments[6] : undefined;\n  var d3Axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisBottom(scale);\n  if (isXAxisOrientationTop(orientation)) {\n    d3Axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisTop(scale);\n  }\n  if (!tickValues || tickValues.length === 0) {\n    d3Axis.ticks(Math.max(width / _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MAX_TICK_VARIANCE, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MIN_TICKS)).tickValues(processTickValues(tickValues)).tickFormat(format);\n  } else if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDate(tickValues)) {\n    if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(lowerLimit) || _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(upperLimit)) {\n      d3Axis.ticks(Math.max(width / _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MAX_TICK_VARIANCE, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MIN_TICKS)).tickValues(processTickValues(tickValues)).tickFormat(format);\n    } else {\n      var filteredTickValues = tickValues.filter(function (value) {\n        var date = new Date(value);\n        return date >= lowerLimit && date <= upperLimit;\n      });\n      d3Axis.tickValues(processTickValues(filteredTickValues)).tickFormat(_d3Modules__WEBPACK_IMPORTED_MODULE_1__.timeFormat(format));\n    }\n  } else {\n    d3Axis.ticks(Math.max(width / _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MAX_TICK_VARIANCE, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].MIN_TICKS)).tickValues(processTickValues(tickValues.filter(function (value) {\n      return value >= lowerLimit && value <= upperLimit;\n    }))).tickFormat(format);\n  }\n  return d3Axis;\n};\n\n/**\n * X Axis's width that will hold equally spaced ticks\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} X Axis width\n */\nvar getXAxisWidth = function getXAxisWidth(config) {\n  return config.canvasWidth - config.axisSizes.y - config.axisSizes.y2 - config.axisLabelWidths.y - config.axisLabelWidths.y2;\n};\n\n/**\n * Ticks can be formatted by passing the format string via input JSON.\n * For Empty tick labels consumer would pass format as \"\" (blank)\n * For formatting numbers (x,y,y2 axes ticks) use Python specifiers.\n * Ticks can also be formatted for date time inputs.\n *\n * @private\n * @see https://docs.python.org/2/library/string.html#format-specification-mini-language\n * @see https://github.com/d3/d3-time-format/blob/master/README.md#locales\n * @param {object} localeObject - d3 Locale object\n * @param {string} format - tick format string\n * @param {string} type - default or timeseries chart type\n * @returns {object} d3 locale object formatter\n */\nvar getAxisTickFormat = function getAxisTickFormat(localeObject, format) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.DEFAULT;\n  if (format === '') {\n    return format;\n  }\n  var localeVar = type === _constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES ? _d3Modules__WEBPACK_IMPORTED_MODULE_1__.timeFormatDefaultLocale(localeObject) : _d3Modules__WEBPACK_IMPORTED_MODULE_1__.formatDefaultLocale(localeObject);\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(format)) {\n    if (type === 'default') {\n      return _locale__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_TICK_FORMAT;\n    }\n    switch (localeObject.locale) {\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].es_ES.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getDefaultDateFormat;\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].pt_BR.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getDefaultDateFormat;\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].de_DE.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getGermanDateFormat;\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].sv_SE.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getSwedishDateFormat;\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].nl_NL.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getDefaultDateFormat;\n      case _locale__WEBPACK_IMPORTED_MODULE_7__[\"default\"].fr_FR.locale:\n        return _localeFormat__WEBPACK_IMPORTED_MODULE_10__.getFrenchDateFormat;\n      default:\n        return _locale__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_TICK_FORMAT;\n    }\n  }\n  return localeVar.format(format);\n};\n\n/**\n * Creates the axis using the scale provided for X Axis using d3 svg axis.\n *\n * @private\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {string} [orientation] - Axis orientation\n * @returns {object} d3 object which forms the text label axis scale\n */\nvar prepareXAxisInfoRow = function prepareXAxisInfoRow(scale) {\n  var orientation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION.X.BOTTOM;\n  var d3Axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisBottom(scale);\n  if (isXAxisOrientationTop(orientation)) {\n    d3Axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisTop(scale);\n  }\n  d3Axis.tickValues([]);\n  return d3Axis;\n};\n\n/**\n * Based on x axis orientation, sets the axis info row orientation.\n * If x axis orientation is top, axis info row orientation is bottom.\n * If x axis orientation is bottom, axis info row orientation is top.\n *\n * @private\n * @param {string} xAxisOrientation - x axis orientation\n * @returns {string} returns orientation for axis info row.\n */\nvar getAxisInfoOrientation = function getAxisInfoOrientation(xAxisOrientation) {\n  return isXAxisOrientationTop(xAxisOrientation) ? _constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION.X.BOTTOM : _constants__WEBPACK_IMPORTED_MODULE_4__.AXES_ORIENTATION.X.TOP;\n};\n\n/**\n * Creates the axis using the scale provided for Y Axis using d3 svg axis\n *\n * @private\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {Array} tickValues - Array of values that represent the tick values\n * @param {number} height - Height of the Y Axis to calculate the number of Y Axis ticks\n * @param {object} format - d3 locale object formatted to represent the tick.\n * @returns {object} d3 object which forms the y-axis scale\n */\nvar prepareYAxis = function prepareYAxis(scale, tickValues, height, format) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale).ticks(height / _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_Y_AXIS_SPACING).tickValues(tickValues).tickFormat(format);\n};\n\n/**\n * Creates the axis using the scale provided for Y2 Axis using d3 svg axis\n *\n * @private\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {Array} tickValues - Array of values that represent the tick values\n * @param {number} height - Height of the Y2 Axis to calculate the number of Y2 Axis ticks\n * @param {object} format - d3 locale object formatted to represent the tick.\n * @returns {object} d3 object which forms the y2-axis scale\n */\nvar prepareY2Axis = function prepareY2Axis(scale, tickValues, height, format) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisRight(scale).ticks(height / _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_Y_AXIS_SPACING).tickValues(tickValues).tickFormat(format);\n};\n\n/**\n * Creates the Y and Y2 axis format when tick values are in between -0.5 to 0.5 or -0.05 to 0.05 or -0.005 to 0.005 and so on.\n *\n * @private\n * @param {Array} tickValues - Array of values that represent the tick values\n * @param {Object} axisData - Object which consists of Y or Y2 axis data.\n * @returns {object} d3 object which forms the y2-axis scale\n */\nvar getYAndY2AxisFormat = function getYAndY2AxisFormat(tickValues, axisData) {\n  var tickDecimalMagnitude = 0;\n  tickValues.forEach(function (tick) {\n    if (tick !== 0) {\n      var tempTick = tick;\n      tempTick = Math.abs(tick);\n      var tempTickDecimalMagnitude = -Math.floor(Math.log10(tempTick));\n      if (tempTickDecimalMagnitude > tickDecimalMagnitude) {\n        tickDecimalMagnitude = tempTickDecimalMagnitude;\n      }\n    }\n  });\n  var format;\n  if (tickDecimalMagnitude > 0 && tickDecimalMagnitude < 6) {\n    if (axisData.suppressTrailingZeros) {\n      format = \".\".concat(tickDecimalMagnitude % 10, \"~f\");\n    } else {\n      format = \".\".concat(tickDecimalMagnitude % 10, \"f\");\n    }\n  }\n  return format;\n};\n/**\n * Generates an array of tick values for to be used as the\n * tick labels on the Y & Y2 axis.\n *\n * @private\n * @param {number} lowerLimit - Lower limit of the Y or Y2 Axis\n * @param {number} upperLimit - Upper limit of the Y or Y2 Axis\n * @param {number} ticksCount - Number of ticks between the upper and lower limits\n * @returns {(Array)} returns array of values to be used as tick labels\n */\nvar generateYAxesTickValues = function generateYAxesTickValues(lowerLimit, upperLimit) {\n  var ticksCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT;\n  ticksCount = Math.abs(ticksCount);\n  var tickValues = [];\n  tickValues.push(lowerLimit);\n  tickValues.push(upperLimit);\n  if (lowerLimit < 0) {\n    tickValues.push(0);\n  }\n  var interval = (upperLimit - lowerLimit) / (ticksCount + 1);\n  for (var index = 1; index <= ticksCount; index += 1) {\n    tickValues.push(lowerLimit + interval * index);\n  }\n  tickValues.sort(function (a, b) {\n    return a - b;\n  });\n  return tickValues;\n};\n\n/**\n * Gets the number of ticks on the axis based on the upper and lower limits\n *\n * @private\n * @param {number} range - range of values (upperLimit - lowerLimits)\n * @returns {number} returns number of ticks for that range, based on a predefined set\n */\nvar getTicksCountFromRange = function getTicksCountFromRange(range) {\n  var ticksCount;\n  switch (true) {\n    case range <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].AXISRANGE_ONE:\n      ticksCount = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT - 4;\n      break;\n    case range <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].AXISRANGE_TWO:\n      ticksCount = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT - 3;\n      break;\n    case range <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].AXISRANGE_THREE:\n      ticksCount = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT - 2;\n      break;\n    case range <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].AXISRANGE_FOUR:\n      ticksCount = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT - 1;\n      break;\n    default:\n      ticksCount = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_TICKSCOUNT;\n  }\n  return ticksCount;\n};\n\n/**\n * Gets average number of ticks to be used based on the Y and Y2 axes\n * result from getTicksCountFromRange for Y and Y2 axes\n *\n * @private\n * @param {number} rangeY - Y axis range (upperLimit - lowerLimit)\n * @param {number} rangeY2 - Y2 axis range (upperLimit - lowerLimit)\n * @returns {number} returns number of ticks to be rendered between the upper limits & lower limits with\n */\nvar getAverageTicksCount = function getAverageTicksCount(rangeY, rangeY2) {\n  var yTicksCount = getTicksCountFromRange(rangeY);\n  var y2TicksCount = getTicksCountFromRange(rangeY2);\n  return Math.round((yTicksCount + y2TicksCount) / 2);\n};\n\n/**\n * Prepares X,Y,Y2 and an optional axis info row (label row for Bar graphs) Axes according to their scale and available container width and height\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {object} - Scaled axes object\n */\nvar getAxesScale = function getAxesScale(axis, scale, config) {\n  var tickFormatToTrimTrailingZeros;\n\n  // If suppressTrailingZeros is set to true and x axis type is set as\n  // DEFAULT (normal number based axes values) and x axis's tick format\n  // is not provided by the consumer, then invoke tickFormatter()\n  // to insert '~' just before the default d3 tick format type\n  // to suppress ticks values's trailing zeros\n  if (config.axis.x.suppressTrailingZeros && config.axis.x.type === _constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.DEFAULT && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.x.ticks.format)) {\n    axis.x = isXAxisOrientationTop(config.axis.x.orientation) ? _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisTop(scale.x) : _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisBottom(scale.x);\n    tickFormatToTrimTrailingZeros = tickFormatter(axis.x);\n  }\n  axis.x = prepareXAxis(scale.x, config.axis.x.ticks.values, getXAxisWidth(config), getAxisTickFormat(config.d3Locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.x.ticks.format) ? config.axis.x.ticks.format : tickFormatToTrimTrailingZeros, config.axis.x.type), config.axis.x.orientation, config.axis.x.domain.lowerLimit, config.axis.x.domain.upperLimit);\n\n  // Reset the tickFormatToTrimTrailingZeros to null, so that\n  // if the y axis suppressTrailingZeros is set to false and\n  // consumer has not defined its tick format,\n  // we can ensure we are not using the same x axis's tick format\n  // for y axis as well\n  tickFormatToTrimTrailingZeros = null;\n  axis.axisInfoRow.x = prepareXAxisInfoRow(scale.x, getAxisInfoOrientation(config.axis.x.orientation));\n  if (hasY2Axis(config.axis)) {\n    // Y and Y2 axes - custom tick values. Takes priority\n    // and ignores ticksCount if it is set. Will not work if only\n    // Y2 ticks are provided.\n    if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.values)) {\n      // If suppressTrailingZeros is set to true and y axis's tick format\n      // is not provided by the consumer, then invoke tickFormatter()\n      // to insert '~' just before the default d3 tick format type\n      // to suppress ticks values's trailing zeros\n      if (config.axis.y.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.format)) {\n        axis.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale.y);\n        tickFormatToTrimTrailingZeros = tickFormatter(axis.y);\n      }\n      axis.y = prepareYAxis(scale.y, config.axis.y.ticks.values, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.format) ? config.axis.y.ticks.format : tickFormatToTrimTrailingZeros));\n\n      // Reset the tickFormatToTrimTrailingZeros to null, so that\n      // if the y2 axis suppressTrailingZeros is set to false and\n      // consumer has not defined its tick format,\n      // we can ensure we are not using the same y axis's tick format\n      // for y2 axis as well\n      tickFormatToTrimTrailingZeros = null;\n\n      // If suppressTrailingZeros is set to true and y2 axis's tick format\n      // is not provided by the consumer, then invoke tickFormatter()\n      // to insert '~' just before the default d3 tick format type\n      // to suppress ticks values's trailing zeros\n      if (config.axis.y2.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y2.ticks.format)) {\n        axis.y2 = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisRight(scale.y2);\n        tickFormatToTrimTrailingZeros = tickFormatter(axis.y2);\n      }\n      axis.y2 = prepareY2Axis(scale.y2, config.axis.y2.ticks.values, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y2.ticks.format) ? config.axis.y2.ticks.format : tickFormatToTrimTrailingZeros));\n      return axis;\n    }\n    // Y and Y2 axes - ticksCount.\n    var yLowerLimit = config.axis.y.domain.lowerLimit;\n    var yUpperLimit = config.axis.y.domain.upperLimit;\n    var y2LowerLimit = config.axis.y2.domain.lowerLimit;\n    var y2UpperLimit = config.axis.y2.domain.upperLimit;\n    var yTickValues;\n    var y2TickValues;\n\n    // if allowCalibration is true then adjust limits\n    if (config.allowCalibration) {\n      var _d3$scaleLinear$domai = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain([yLowerLimit, yUpperLimit]).nice().domain();\n      var _d3$scaleLinear$domai2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_d3$scaleLinear$domai, 2);\n      yLowerLimit = _d3$scaleLinear$domai2[0];\n      yUpperLimit = _d3$scaleLinear$domai2[1];\n      var _d3$scaleLinear$domai3 = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain([y2LowerLimit, y2UpperLimit]).nice().domain();\n      var _d3$scaleLinear$domai4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_d3$scaleLinear$domai3, 2);\n      y2LowerLimit = _d3$scaleLinear$domai4[0];\n      y2UpperLimit = _d3$scaleLinear$domai4[1];\n    }\n    if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.ticksCount) && config.ticksCount <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TICKSCOUNT_MAXLIMIT) {\n      yTickValues = generateYAxesTickValues(yLowerLimit, yUpperLimit, config.ticksCount);\n      y2TickValues = generateYAxesTickValues(y2LowerLimit, y2UpperLimit, config.ticksCount);\n\n      // eslint-disable-next-line brace-style\n    } else {\n      // Y and Y2 axes - If ticksCount is undefined or greater than\n      // TICKS_MAXCOUNT AND if the Y2 is visible, then utilize a default value\n      // for the ticksCount. This is based on the ranges of the Y & Y2 axes.\n\n      var intervalCount;\n\n      // Divide the larger range value (a) by the smaller value (b) and determine if a whole number (c) is returned.\n      // If the return value is a whole number and does not have a value greater than 10, divide the smaller range value (b) by the return value (c)\n      // and determine if a whole number is returned. If a whole number is returned, use the initial return value to configure the tick count of the graph.\n      var yRange = yUpperLimit - yLowerLimit;\n      var y2Range = y2UpperLimit - y2LowerLimit;\n      var greaterRange = Math.max(yRange, y2Range);\n      var lowerRange = Math.min(yRange, y2Range);\n      var factor = greaterRange / lowerRange;\n      if (Number.isInteger(factor) && Number.isInteger(lowerRange / factor) && factor > 2) {\n        intervalCount = factor;\n      } else {\n        // If any part of the step above fails, determine if the two range values are both evenly divisible by\n        // any number between 3 and 9 (resulting in a whole number).\n        // If yes, choose the highest value to configure the tick count.\n        for (var _commonDenominator = 9; _commonDenominator >= 3; _commonDenominator -= 1) {\n          if (Number.isInteger(greaterRange / _commonDenominator) && Number.isInteger(lowerRange / _commonDenominator)) {\n            intervalCount = _commonDenominator;\n            break;\n          }\n        }\n      }\n\n      // Default ticksCount Behavior\n      // If both checks above fail, proceed with the current logic to configure the tick counts\n      if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(intervalCount)) {\n        intervalCount = getAverageTicksCount(yRange, y2Range) + 1;\n      }\n\n      // generating ticksCount based on the calculated value above\n      yTickValues = generateYAxesTickValues(yLowerLimit, yUpperLimit, intervalCount - 1);\n      y2TickValues = generateYAxesTickValues(y2LowerLimit, y2UpperLimit, intervalCount - 1);\n    }\n    if (config.axis.y.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.format)) {\n      axis.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale.y);\n      tickFormatToTrimTrailingZeros = tickFormatter(axis.y);\n    }\n    if (!config.axis.y.isConsumerProvidedFormat && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.values)) {\n      config.axis.y.ticks.format = getYAndY2AxisFormat(yTickValues, config.axis.y);\n    }\n    axis.y = prepareYAxis(scale.y, yTickValues, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.format) ? config.axis.y.ticks.format : tickFormatToTrimTrailingZeros));\n    tickFormatToTrimTrailingZeros = null;\n    if (config.axis.y2.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y2.ticks.format)) {\n      axis.y2 = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisRight(scale.y2);\n      tickFormatToTrimTrailingZeros = tickFormatter(axis.y2);\n    }\n    if (!config.axis.y2.isConsumerProvidedFormat && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y2.ticks.values)) {\n      config.axis.y2.ticks.format = getYAndY2AxisFormat(y2TickValues, config.axis.y2);\n    }\n    axis.y2 = prepareY2Axis(scale.y2, y2TickValues, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y2.ticks.format) ? config.axis.y2.ticks.format : tickFormatToTrimTrailingZeros));\n    // eslint-disable-next-line brace-style\n  }\n  // Only single Y axis\n  else {\n    var _yLowerLimit = config.axis.y.domain.lowerLimit;\n    var _yUpperLimit = config.axis.y.domain.upperLimit;\n\n    // Single Y axis - custom tick values\n    // eslint-disable-next-line no-lonely-if\n    if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.values)) {\n      if (config.axis.y.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.format)) {\n        axis.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale.y);\n        tickFormatToTrimTrailingZeros = tickFormatter(axis.y);\n      }\n      axis.y = prepareYAxis(scale.y, config.axis.y.ticks.values, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.format) ? config.axis.y.ticks.format : tickFormatToTrimTrailingZeros));\n      // return axis;\n      // eslint-disable-next-line brace-style\n    }\n    // Single Y axis - ticksCount is defined\n    else if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.ticksCount) || config.ticksCount <= _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].TICKSCOUNT_MAXLIMIT) {\n      var _yTickValues = generateYAxesTickValues(_yLowerLimit, _yUpperLimit, config.ticksCount);\n      if (config.axis.y.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.format)) {\n        axis.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale.y);\n        tickFormatToTrimTrailingZeros = tickFormatter(axis.y);\n      }\n      if (!config.axis.y.isConsumerProvidedFormat && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.values)) {\n        config.axis.y.ticks.format = getYAndY2AxisFormat(_yTickValues, config.axis.y);\n      }\n      axis.y = prepareYAxis(scale.y, _yTickValues, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.format) ? config.axis.y.ticks.format : tickFormatToTrimTrailingZeros));\n      // eslint-disable-next-line brace-style\n    }\n    // Single Y axis - default case when\n    // config.axis.y.ticks.values and ticksCount\n    // are not defined\n    else {\n      if (config.axis.y.suppressTrailingZeros && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isUndefined(config.axis.y.ticks.format)) {\n        axis.y = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale.y);\n        tickFormatToTrimTrailingZeros = tickFormatter(axis.y);\n      }\n      axis.y = prepareYAxis(scale.y, undefined, config.height, getAxisTickFormat(config.locale, _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.y.ticks.format) ? config.axis.y.ticks.format : tickFormatToTrimTrailingZeros));\n    }\n  }\n  return axis;\n};\n\n/**\n * Helper function to Create the axis using the scale provided for X Axis using d3 svg axis.\n *\n * @param {object} scale - d3 scale calculated using domain and range\n * @param {Array} tickValues - Array of values that represent the tick values\n * @param {object} config - config object derived from input JSON\n * @param {string} [orientation] - Axis orientation\n * @returns {object} - d3 Object which forms the axis scale\n */\nvar prepareHorizontalAxis = function prepareHorizontalAxis(scale, tickValues, config, orientation) {\n  return prepareXAxis(scale.x, tickValues, getXAxisWidth(config), getAxisTickFormat(config.d3Locale, config.axis.x.ticks.format, config.axis.x.type), orientation);\n};\n/**\n * X Axis's starting position within the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisXPosition = function getXAxisXPosition(config) {\n  return config.axisSizes.y + config.axisLabelWidths.y;\n};\n\n/**\n * Calculates Vertical Padding according to X Axis orientation\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Vertical Padding for X Axis\n */\nvar calculateVerticalPadding = function calculateVerticalPadding(config) {\n  if (!isXAxisOrientationTop(config.axis.x.orientation)) {\n    return config.padding.bottom;\n  }\n  if (!config.axisLabelHeights.x) {\n    return config.padding.top;\n  }\n  return config.axisLabelHeights.x * 2 + config.padding.top;\n};\n\n/**\n * Y Axis height for the axis and canvas region to clip the chart within\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Height of the canvas\n */\nvar getYAxisHeight = function getYAxisHeight(config) {\n  return config.height;\n};\n\n/**\n * Axis Info Row's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getXAxisYPosition = function getXAxisYPosition(config) {\n  return isXAxisOrientationTop(config.axis.x.orientation) ? calculateVerticalPadding(config) : getYAxisHeight(config) + calculateVerticalPadding(config);\n};\n\n/**\n * D3 adds font-size and font-family by default to axis, to use/inherit consumer fonts\n * we have to override the properties.\n * https://github.com/d3/d3-axis/issues/36\n *\n * @private\n * @param {d3.selection} axisD3Element - Axis element post rendering in D3\n * @returns {undefined} returns nothing\n */\nvar resetD3FontSize = function resetD3FontSize(axisD3Element) {\n  return axisD3Element.attr('font-size', null).attr('font-family', null);\n};\n/**\n * Y Axis's starting position relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getYAxisXPosition = function getYAxisXPosition(config) {\n  return getXAxisXPosition(config);\n};\n/**\n * Y Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getYAxisYPosition = function getYAxisYPosition(config) {\n  return calculateVerticalPadding(config);\n};\n/**\n * Y2 Axis's starting position relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getY2AxisXPosition = function getY2AxisXPosition(config) {\n  return getYAxisXPosition(config) + getXAxisWidth(config);\n};\n/**\n * Y2 Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getY2AxisYPosition = function getY2AxisYPosition(config) {\n  return calculateVerticalPadding(config);\n};\n/**\n * Create the d3 Axes - X, Y and Y2 and append into the canvas.\n * If axis.x.show, axis.y.show or axis.y2.show is set to false:\n * then the axis will be hidden\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createAxes = function createAxes(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  (0,_datetimeBuckets__WEBPACK_IMPORTED_MODULE_8__.prepareHAxis)(scale, axis, config, prepareHorizontalAxis);\n  canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisX, true).attr('aria-hidden', !config.axis.x.show).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \", \").concat(getXAxisYPosition(config), \")\")).call(axis.x).call(resetD3FontSize).attr('id', 'x').selectAll('text').style('text-anchor', function () {\n    if (!_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.x.ticks.tickLabelsRotation)) {\n      config.axis.x.ticks.tickLabelsRotation = 0;\n      return 'middle';\n    }\n    var rotation = config.axis.x.ticks.tickLabelsRotation;\n    if (rotation === 0) {\n      return 'middle';\n    }\n    if (rotation !== 0) {\n      return 'end';\n    }\n    if (!_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].validTickLabelRotations.has(rotation)) {\n      return 'middle';\n    }\n    return 'middle';\n  }).attr('transform', function () {\n    return \"rotate(\".concat(config.axis.x.ticks.tickLabelsRotation, \")\");\n  });\n  canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY, true).attr('aria-hidden', !config.axis.y.show).attr('transform', \"translate(\".concat(getYAxisXPosition(config), \", \").concat(getYAxisYPosition(config), \")\")).call(axis.y).call(resetD3FontSize);\n  if (hasY2Axis(config.axis)) {\n    canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY2, true).attr('transform', \"translate(\".concat(getY2AxisXPosition(config), \", \").concat(getY2AxisYPosition(config), \")\")).call(axis.y2).call(resetD3FontSize);\n  }\n};\n/**\n * X Axis's position vertically relative to the canvas\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the axis\n */\nvar getAxisInfoRowYPosition = function getAxisInfoRowYPosition(config) {\n  return isXAxisOrientationTop(config.axis.x.orientation) ? getYAxisHeight(config) + calculateVerticalPadding(config) : calculateVerticalPadding(config);\n};\n\n/**\n * Create the axis for text labels\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createXAxisInfoRow = function createXAxisInfoRow(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisInfoRow, true).attr('aria-hidden', true).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \", \").concat(getAxisInfoRowYPosition(config), \")\")).call(axis.axisInfoRow.x).call(resetD3FontSize);\n};\n\n/**\n * Creates a horizontal reference line at 0, when Y Axis does not start at 0.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createAxisReferenceLine = function createAxisReferenceLine(axis, scale, config, canvasSVG) {\n  var transformAttribute = \"translate(\".concat(getYAxisXPosition(config), \", \").concat(getYAxisYPosition(config), \")\");\n  var setReferenceLineAttributes = function setReferenceLineAttributes(path, style) {\n    return path.classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisReferenceLine, true).attr('aria-hidden', !hasNegativeLowerBound(scale, style)).attr('transform', transformAttribute).attr('d', createReferenceLine(scale, style)(getReferenceLineData(scale)));\n  };\n  setReferenceLineAttributes(canvasSVG.append('path'), _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY, true);\n  if (hasY2Axis(config.axis)) {\n    setReferenceLineAttributes(canvasSVG.append('path'), _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY2, true);\n  }\n};\n\n/**\n * Returns the number of degrees the rotation of axis needs to be performed based on axis\n *\n * @private\n * @param {string} axis - X, Y or Y2 axis\n * @returns {number} amount of degrees the rotation needs to be performed\n */\nvar getRotationForAxis = function getRotationForAxis(axis) {\n  switch (axis) {\n    case _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS:\n      return -90;\n    case _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS:\n      return 90;\n    default:\n      return 0;\n  }\n};\n/**\n * X Axis label's starting position below the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getXAxisLabelXPosition = function getXAxisLabelXPosition(config) {\n  return getXAxisXPosition(config) + getXAxisWidth(config) / 2;\n};\n/**\n * X Axis label's position vertically below the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getXAxisLabelYPosition = function getXAxisLabelYPosition(config) {\n  return isXAxisOrientationTop(config.axis.x.orientation) ? calculateVerticalPadding(config) - config.axisLabelHeights.x * 2 : getXAxisYPosition(config) + config.axisLabelHeights.x * 2 + (config.padding.bottom - config.axisInfoRowLabelHeight) * 2;\n};\n/**\n * Y Axis label's starting position vertically beside the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getYAxisLabelXPosition = function getYAxisLabelXPosition(config) {\n  // If y2-axis is true, y-axis label should move close to svg container else move closer to y-axis.\n  if (hasY2Axis(config.axis)) {\n    return config.padding.left - config.axisLabelWidths.y;\n  }\n  return config.padding.left;\n};\n/**\n * Y Axis label's position distance away from the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getYAxisLabelYPosition = function getYAxisLabelYPosition(config) {\n  return getYAxisYPosition(config) + (getYAxisHeight(config) - config.padding.left / 2) / 2;\n};\n/**\n * Y Axis label shape starting position vertically beside the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label shape\n */\nvar getYAxisLabelShapeXPosition = function getYAxisLabelShapeXPosition(config) {\n  return getYAxisLabelXPosition(config) + _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].BASE_LABEL_ICON_HEIGHT_PADDING;\n};\n/**\n * Y Axis label shape position distance away from the graph.\n * We are taking the Container height and adding it with\n * half of the width for label shape container so that it centers to the graph.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {number} shapeCount - Number of shapes within shape container\n * @returns {number} Position for the label\n */\nvar getYAxisLabelShapeYPosition = function getYAxisLabelShapeYPosition(config, shapeCount) {\n  return getYAxisLabelYPosition(config) + shapeCount * _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].BASE_LABEL_ICON_HEIGHT_PADDING / 1.5;\n};\n/**\n * Y2 Axis label shape position distance away from the graph.\n * We are taking the Container height and subtracting it with\n * Label shape container width to center it with respect to the\n * container in reverse order.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {number} shapeCount - Number of shapes within shape container\n * @returns {number} Position for the label\n */\nvar getY2AxisLabelShapeYPosition = function getY2AxisLabelShapeYPosition(config, shapeCount) {\n  return getYAxisLabelYPosition(config) - shapeCount * _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].BASE_LABEL_ICON_HEIGHT_PADDING / 1.5;\n};\n/**\n * Y2 Axis label's starting position vertically beside the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label\n */\nvar getY2AxisLabelXPosition = function getY2AxisLabelXPosition(config) {\n  return getY2AxisXPosition(config) + config.padding.right + config.axisLabelWidths.y2;\n};\n/**\n * Y2 Axis label shape starting position vertically beside the graph\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Position for the label shape\n */\nvar getY2AxisLabelShapeXPosition = function getY2AxisLabelShapeXPosition(config) {\n  return getY2AxisLabelXPosition(config) - _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].BASE_LABEL_ICON_HEIGHT_PADDING;\n};\n/**\n * X Axis height for the axis and labels to display within\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {number} Height of the X Axis ticks, labels and numbers/datetimes\n */\nvar getXAxisHeight = function getXAxisHeight(config) {\n  if (config.padding.hasCustomPadding) {\n    return config.padding.bottom;\n  }\n  var scale = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_3__.getScale)(config.axis.x.type).domain([config.axis.x.domain.lowerLimit, config.axis.x.domain.upperLimit]).range([0, config.canvasWidth]);\n  var axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisBottom(scale);\n  var dummy = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select('body').append('div');\n  var svg = dummy.append('svg');\n  var group = svg.append('g').call(axis);\n  if (config.axis.x.ticks && config.axis.x.ticks.tickLabelsRotation !== 0) {\n    // Add extra padding for rotated tick labels\n    group.selectAll('.tick text').attr('transform', \"rotate(\".concat(config.axis.x.ticks.tickLabelsRotation, \")\"));\n    var rotatedTickLabelsHeight = group.node().getBoundingClientRect().height;\n    dummy.remove();\n    return rotatedTickLabelsHeight;\n  }\n  var _group$node$getBoundi = group.node().getBoundingClientRect(),\n    height = _group$node$getBoundi.height;\n  dummy.remove();\n  return height;\n};\n/**\n * X Axis range used to instruct d3 when creating a scale\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {Array} lower and upper bound forming the range\n */\nvar getXAxisRange = function getXAxisRange(config) {\n  return [0, getXAxisWidth(config)];\n};\n/**\n * Y Axis range used to instruct d3 when creating a scale\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {Array} lower and upper bound forming the range\n */\nvar getYAxisRange = function getYAxisRange(config) {\n  return [getYAxisHeight(config), 0];\n};\n/**\n * Checks if the Axis label needs to be truncated and returns the truncated value\n *\n * @param {string} label - Axis label display property\n * @param {number} charLimit  - label character limit on axis\n * @returns {string} if more than character limit then truncates,\n * normal label otherwise\n */\nvar formatLabel = function formatLabel(label, charLimit) {\n  return (0,_label__WEBPACK_IMPORTED_MODULE_9__.shouldTruncateLabel)(label, Math.abs(charLimit)) ? (0,_label__WEBPACK_IMPORTED_MODULE_9__.truncateLabel)(label, Math.abs(charLimit)) : label;\n};\n/**\n * Returns the d3 html element after appending axis label text\n *\n * @param {Array} group - d3 html element\n * @param {string} label - Label text\n * @param {number} charLimit - character limit of label with respect to axis size\n * @returns {Array} d3 html element\n */\nvar buildAxisLabel = function buildAxisLabel(group, label, charLimit) {\n  return group.append('text').attr('text-anchor', 'middle').append('tspan').text(formatLabel(label, charLimit));\n};\n/**\n * Dynamically generate the label width for axes\n *\n * @private\n * @param {string} label - Label text\n * @param {string} axis - x, y or y2\n * @param {object} config - config object derived from input JSON\n * @returns {number} label width\n */\nvar getAxisLabelWidth = function getAxisLabelWidth(label, axis, config) {\n  var width;\n  var dummy = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select('body').append('div');\n  var svg = dummy.append('svg');\n  var grouper = svg.append('g').attr('transform', \"rotate(\".concat(getRotationForAxis(axis), \")\"));\n  buildAxisLabel(grouper, label);\n\n  // To avoid overlapping, (for y-axis shape and y-axis) we are setting default width, when space is passed as y-axis label.\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config) && hasY2Axis(config.axis) && label.trim().length === 0) {\n    width = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_CHARACTER_SVG_ELEMENT_WIDTH;\n  } else {\n    width = grouper.node().getBoundingClientRect().width;\n  }\n  dummy.remove();\n  return width;\n};\n\n/**\n * Dynamically generate the label height for axes\n *\n * @private\n * @param {string} label - Label text\n * @returns {number} label height\n */\nvar getAxisLabelHeight = function getAxisLabelHeight(label, tickLabelsRotation) {\n  var dummy = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select('body').append('div');\n  var svg = dummy.append('svg');\n  var grouper = svg.append('g');\n  if (tickLabelsRotation) {\n    // Adding extra padding for rotated labels\n    grouper.attr('transform', \"rotate(\".concat(tickLabelsRotation * _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_OVERLAPPING_PADDING, \")\"));\n  }\n  buildAxisLabel(grouper, label);\n  var _grouper$node$getBoun = grouper.node().getBoundingClientRect(),\n    height = _grouper$node$getBoun.height;\n  dummy.remove();\n  return height;\n};\n\n/**\n * Dynamically generate the label width for y axes\n *\n * @private\n * @param {string} id - y or y2\n * @param {object} config - config object derived from input JSON\n * @returns {number} label width\n */\nvar getYAxisWidth = function getYAxisWidth(id, config) {\n  if (config.padding.hasCustomPadding) {\n    return config.padding.left;\n  }\n  var scale = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.scaleLinear().domain([config.axis[id].domain.lowerLimit, config.axis[id].domain.upperLimit]).range([config.height, 0]);\n  var axis = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.axisLeft(scale);\n  var dummy = _d3Modules__WEBPACK_IMPORTED_MODULE_1__.select('body').append('div');\n  var svg = dummy.append('svg');\n  var yAxisSVG = svg.append('g').call(axis);\n  var _yAxisSVG$node$getBou = yAxisSVG.node().getBoundingClientRect(),\n    width = _yAxisSVG$node$getBou.width;\n  dummy.remove();\n  return width;\n};\n\n/**\n * Generate the label width for y2 axes.\n *\n * @private\n * @param {object} config - config object derived from input JSON.\n * @returns {number} label width\n */\nvar getY2AxisWidth = function getY2AxisWidth(config) {\n  if (config.padding.hasCustomPadding) {\n    return config.padding.right;\n  }\n  return hasY2Axis(config.axis) ? getYAxisWidth(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS, config) : 20;\n};\n\n/**\n * Calculates axes sizes, specifically:\n *  X Axis: Height\n *  Y Axis: Width\n *  Y2 Axis: Width\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesSize = function calculateAxesSize(config) {\n  config.axisSizes = {};\n  config.axisSizes.y = getYAxisWidth(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS, config) + config.padding.left;\n  config.axisSizes.y2 = getY2AxisWidth(config) + config.padding.right;\n  config.axisSizes.x = getXAxisHeight(config);\n};\n/**\n * Calculates axes label sizes, specifically:\n *  X Axis Label: Height\n *  Y Axis Label: Width\n *  Y2 Axis Label: Width\n *\n *  @private\n *  @param {object} config - config object derived from input JSON\n *  @returns {undefined} - returns nothing\n */\nvar calculateAxesLabelSize = function calculateAxesLabelSize(config) {\n  config.axisLabelHeights = {};\n  config.axisLabelWidths = {};\n  config.axisLabelHeights.x = 0;\n  config.axisLabelWidths.y = 0;\n  config.axisLabelWidths.y2 = 0;\n  if (config.showLabel) {\n    if (config.axis.x.label) {\n      var tickLabelsRotation = config.axis.x.ticks && config.axis.x.ticks.tickLabelsRotation;\n      config.axisLabelHeights.x = getAxisLabelHeight(config.axis.x.label, tickLabelsRotation);\n    }\n    if (config.axis.y.label) {\n      config.axisLabelWidths.y = _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_CHARACTER_SVG_ELEMENT_WIDTH;\n    }\n    if (hasY2Axis(config.axis) && config.axis.y2.label) {\n      config.axisLabelWidths.y2 = hasY2Axis(config.axis) ? getAxisLabelWidth(config.axis.y2.label, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS, config) : 0;\n    }\n  }\n};\n\n/**\n * Returns the mid value of the axis domain relative to the lower bound\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {string} axis - X, Y, or Y2\n * @returns {number} returns a number representing the mid value of y axes domain\n */\nvar getMidPoint = function getMidPoint(config, axis) {\n  var axisMidValue = (config.axis[axis].domain.upperLimit - config.axis[axis].domain.lowerLimit) / 2;\n  return config.axis[axis].domain.lowerLimit + axisMidValue;\n};\n\n/**\n * Sets the x axis domain values.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n */\nvar setXAxisDomain = function setXAxisDomain(config) {\n  config.axis.x.domain = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_3__.getXAxisDomain)(config.axis.x.type, config.axis.x.lowerLimit, config.axis.x.upperLimit);\n};\n\n/**\n * Calculates the upper part of the outlier based on data points.\n * If the input dataset has any data points that are outside the lower bound\n * of the given axis, then the factor to adjust the upper limit by is calculated\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {string} axis - the axis to calculate the new stretch factor for\n * @returns {number} the stretch factor for the new upper limit\n */\n\nvar getUpperOutlierStretchFactor = function getUpperOutlierStretchFactor(config, axis) {\n  var axisMaxValue = config.axis[axis].domain.upperLimit;\n  var dataRangeMaxValue = config.axis[axis].dataRange.max > axisMaxValue ? config.axis[axis].dataRange.max : axisMaxValue;\n  var axisMidPoint = getMidPoint(config, axis);\n  var upperStretchFactor = Math.abs((dataRangeMaxValue - axisMidPoint) / (axisMaxValue - axisMidPoint));\n  return upperStretchFactor > 1 ? upperStretchFactor : 1;\n};\n\n/**\n * Calculates the lower part of the outlier based on data points.\n * If the input dataset has any data points that are outside the lower bound\n * of the given axis, then the factor to adjust the lowerlimit by is calculated\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {string} axis - the axis to calculate the new stretch factor for\n * @returns {number} the stretch factor for the new lower limit\n */\nvar getLowerOutlierStretchFactor = function getLowerOutlierStretchFactor(config, axis) {\n  var axisMinValue = config.axis[axis].domain.lowerLimit;\n  var axisMidPoint = getMidPoint(config, axis);\n  var dataRangeMinValue = config.axis[axis].dataRange.min < axisMinValue ? config.axis[axis].dataRange.min : axisMinValue;\n  var lowerStretchFactor = Math.abs((axisMidPoint - dataRangeMinValue) / (axisMidPoint - axisMinValue));\n  return lowerStretchFactor > 1 ? lowerStretchFactor : 1;\n};\n\n/**\n* Determines if the values provided exceed the lower and upper bounds for a numerical x-axis\n* If the values exceed the bounds then the range and domain are adjusted accordingly.\n*\n* @private\n* @param {object} config - config object derived from input JSON\n* @returns {object} stretch factor that determines the new upper and lower limit of the x-axis\n*/\nvar determineOutlierStretchFactorXAxis = function determineOutlierStretchFactorXAxis(config) {\n  var stretchFactors = {};\n  stretchFactors.upperLimit = getUpperOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS);\n  stretchFactors.lowerLimit = getLowerOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].X_AXIS);\n  return stretchFactors;\n};\n\n/**\n * Determines if the values provided exceed the lower and upper bounds provided in the Y or Y2 axes\n * If the values exceed the bounds then the range and domain are adjusted accordingly.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @returns {object} stretch factor determines the new upper and lower limit of the vertical axes\n */\nvar determineOutlierStretchFactorYAxes = function determineOutlierStretchFactorYAxes(config) {\n  var stretchFactors = {};\n  stretchFactors.upperLimit = getUpperOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS);\n  stretchFactors.lowerLimit = getLowerOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS);\n  if (hasY2Axis(config.axis)) {\n    var upperLimitY2 = getUpperOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS);\n    var lowerLimitY2 = getLowerOutlierStretchFactor(config, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS);\n    stretchFactors.upperLimit = upperLimitY2 > stretchFactors.upperLimit ? upperLimitY2 : stretchFactors.upperLimit;\n    stretchFactors.lowerLimit = lowerLimitY2 > stretchFactors.lowerLimit ? lowerLimitY2 : stretchFactors.lowerLimit;\n  }\n  return stretchFactors;\n};\n\n/**\n * Updates the x, y, y2 (if enabled) and axis info row(if enabled) positions on resize\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateAxes = function translateAxes(axis, scale, config, canvasSVG) {\n  getAxesScale(axis, scale, config);\n  (0,_datetimeBuckets__WEBPACK_IMPORTED_MODULE_8__.prepareHAxis)(scale, axis, config, prepareHorizontalAxis);\n  canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisX)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \",\").concat(getXAxisYPosition(config), \")\")).call(axis.x).selectAll('text').style('text-anchor', function () {\n    if (!_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDefined(config.axis.x.ticks.tickLabelsRotation)) {\n      config.axis.x.ticks.tickLabelsRotation = 0;\n      return 'middle';\n    }\n    var rotation = config.axis.x.ticks.tickLabelsRotation;\n    if (rotation === 0) {\n      return 'middle';\n    }\n    if (rotation !== 0) {\n      return 'end';\n    }\n    if (!_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].validTickLabelRotations.has(rotation)) {\n      return 'middle';\n    }\n    return 'middle';\n  }).attr('transform', function () {\n    return \"rotate(\".concat(config.axis.x.ticks.tickLabelsRotation, \")\");\n  });\n  canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat(getYAxisXPosition(config), \", \").concat(getYAxisYPosition(config), \")\")).call(axis.y);\n  if (hasY2Axis(config.axis)) {\n    canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY2)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat(getY2AxisXPosition(config), \", \").concat(getY2AxisYPosition(config), \")\")).call(axis.y2);\n  }\n  canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisInfoRow)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat(getXAxisXPosition(config), \", \").concat(getAxisInfoRowYPosition(config), \")\")).call(axis.axisInfoRow.x);\n};\n/**\n * Updates the Y axis reference line when resized. This is also called\n * when a content is loaded.\n *\n * @private\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar translateAxisReferenceLine = function translateAxisReferenceLine(axis, scale, config, canvasSVG) {\n  var setTranslate = function setTranslate(path, style) {\n    return path.transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('aria-hidden', false).attr('d', createReferenceLine(scale, style)(getReferenceLineData(scale)));\n  };\n  if (hasNegativeLowerBound(scale, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS)) {\n    setTranslate(canvasSVG.select(\"path.\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, \".\").concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY, \".\").concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisReferenceLine)), _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS);\n  }\n  if (hasY2Axis(config.axis) && hasNegativeLowerBound(scale, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS)) {\n    setTranslate(canvasSVG.select(\"path.\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axis, \".\").concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisY2, \".\").concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].axisReferenceLine)), _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y2_AXIS);\n  }\n};\n/**\n * Calculates current min and max value ranges.\n * if the input is bar content and is being cascaded on top of other bars,\n * then we need to calculate top and bottom domain values by summing cascaded bars value ranges\n *\n * @private\n * @param {object} input - Object containing min and max data point values\n * @param {Array} content - array of target objects\n * @param {string} axis - y or y2\n * @returns {object} - Object with min and max value ranges\n */\nvar getCurMinMaxValueRange = function getCurMinMaxValueRange(input, content, axis) {\n  if (input instanceof _controls_Bar_Bar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n    var min = 0;\n    var max = 0;\n    var groupedBars = content.filter(function (value) {\n      if (value instanceof _controls_Bar_Bar__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n        return value.config.group === input.config.group;\n      }\n      return false;\n    });\n    groupedBars.forEach(function (bar) {\n      max += bar.valuesRange[axis].max;\n      min += bar.valuesRange[axis].min;\n    });\n    return {\n      min: min,\n      max: max\n    };\n  }\n  return {\n    min: input.valuesRange[axis].min,\n    max: input.valuesRange[axis].max\n  };\n};\n/**\n * Calculates the axes - x, y and y2 data range.\n * For each data point provided, we need to set the min and max ranges.\n * Data point sets [n]\n *  Data points [n]\n *      x, y, y2 [1]\n *\n * @private\n * @param {object} input - input content object\n * @param {string} axis - y or y2\n * @param {object} config - config object derived from input JSON\n * @param {Array} content - array of target objects\n * @returns {undefined} - returns nothing\n */\nvar getAxesDataRange = function getAxesDataRange(input) {\n  var axis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Y_AXIS;\n  var config = arguments.length > 2 ? arguments[2] : undefined;\n  var content = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(config.axis.x.dataRange)) {\n    config.axis.x.dataRange = {};\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(config.axis.y.dataRange)) {\n    config.axis.y.dataRange = {};\n  }\n  if (hasY2Axis(config.axis) && _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(config.axis.y2.dataRange)) {\n    config.axis.y2.dataRange = {};\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(input) || _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isEmpty(input.valuesRange)) {\n    return;\n  }\n  var curRange = getCurMinMaxValueRange(input, content, axis);\n  var prevMin = config.axis[axis].dataRange.oldMin;\n  var prevMax = config.axis[axis].dataRange.oldMax;\n  var isRangeModified;\n  if (prevMin === 0 || prevMax === 0) {\n    isRangeModified = !(prevMin <= curRange.min || prevMax >= curRange.max);\n  } else {\n    isRangeModified = !(prevMin && prevMax) || !(prevMin <= curRange.min || prevMax >= curRange.max);\n  }\n  config.axis[axis].dataRange.isRangeModified = isRangeModified;\n  if (!isRangeModified) {\n    return;\n  }\n  config.axis[axis].dataRange.oldMin = config.axis[axis].dataRange.min;\n  config.axis[axis].dataRange.oldMax = config.axis[axis].dataRange.max;\n  config.axis[axis].dataRange.min = curRange.min;\n  config.axis[axis].dataRange.max = curRange.max;\n};\n/**\n * Checks if provided input has valid axis type\n *\n * @param {string} x - input x value\n * @param {string} xAxisType - x axis type\n * @returns {boolean} - returns true if valid, false if invalid\n */\nvar isValidAxisType = function isValidAxisType(x, xAxisType) {\n  return (_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDate(x) || _utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDateInstance(x)) && (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_3__.getType)(xAxisType) === _constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES || !_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDate(x) && !_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"].isDateInstance(x) && (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_3__.getType)(xAxisType) !== _constants__WEBPACK_IMPORTED_MODULE_4__.AXIS_TYPE.TIME_SERIES;\n};\n\n/**\n * @enum {Function}\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/axis.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/barType.js":
/*!**********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/barType.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBar: function() { return /* binding */ getBar; },\n/* harmony export */   getBarStyle: function() { return /* binding */ getBarStyle; },\n/* harmony export */   getChunk: function() { return /* binding */ getChunk; },\n/* harmony export */   getHashedBar: function() { return /* binding */ getHashedBar; },\n/* harmony export */   getPercentageBar: function() { return /* binding */ getPercentageBar; },\n/* harmony export */   getRect: function() { return /* binding */ getRect; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n/**\n * @module barType\n * @alias module:barType\n */\n\n/**\n * @typedef d3\n */\n\n/**\n * Returns the appropriate bar based on the bar style settings.\n * For Bar, we apply the settings below in the\n * `rect` element style attribute.\n *\n * @private\n * @param {object} style - data associated to the task\n * @param {object} dataTarget - input data object\n * @returns {string} A style constant\n */\nvar getBarStyle = function getBarStyle() {\n  var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var dataTarget = arguments.length > 1 ? arguments[1] : undefined;\n  var color = dataTarget.color || _constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_BAR_COLOR;\n  var currentStyle = \"fill: \".concat(color, \"; stroke: \").concat(color, \";\");\n\n  // If style property is not provided then we use treat it as filled.\n  if (_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isEmpty(style)) {\n    return currentStyle;\n  }\n  if (style.isDotted === true) {\n    currentStyle = \"\".concat(currentStyle, \"; stroke-width: 1; stroke-dasharray: 2, 2;\");\n  }\n  if (style.isHollow === true) {\n    currentStyle = \"\".concat(currentStyle, \" fill: \").concat(_constants__WEBPACK_IMPORTED_MODULE_0__.COLORS.WHITE, \"; stroke-width: 1;\");\n  }\n  if (style.isHashed === true) {\n    currentStyle = \"\".concat(currentStyle, \" stroke-width: 1;\");\n  }\n  return currentStyle;\n};\n\n/**\n * Creates a SVG rect and appends to the d3 element provided\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @returns {Selection} d3 selection path after appending rect\n */\nvar getRect = function getRect(path, x, y, width, height) {\n  return path.append('rect').attr('x', x).attr('y', y).attr('width', width).attr('height', height);\n};\n/**\n * Creates a rect and appends it to the d3 selection element provided in the argument\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {string} style - inline styling for the bar\n * @returns {Selection} d3 selection path\n */\nvar getBar = function getBar(path, x, y, width, height, style) {\n  getRect(path, x, y, width, height).classed(_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskBar, true).attr('style', style);\n  return path;\n};\n\n/**\n * Creates a rect and appends it to the d3 selection element provided in the argument.\n * A chunk is a bar with fixed width. Uses: DEFAULT_GANTT_TASK_CHUNK_WIDTH\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {string} style - inline styling for the bar\n * @returns {Selection} d3 selection path\n */\nvar getChunk = function getChunk(path, x, y, width, height, style) {\n  getBar(path, x, y, _constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_GANTT_TASK_CHUNK_WIDTH, height, style);\n  return path;\n};\n/**\n * Creates 2 rect:\n * * Full width bar\n * * Completion bar with width as much as the percentage provided\n * We render the Completion bar on top of the Full width bar to give an illusion of\n * a percentage bar. If percentage is 100 then the Completion bar will overlap the Full width bar\n *\n * @private\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {number} percent - percent value for percentage completion\n * @param {string} color - hexa value denoting the color of the bar\n * @returns {Selection} d3 selection path\n */\nvar getPercentageBar = function getPercentageBar(path, x, y, width, height, percent, color) {\n  getRect(path, x, y, width, height).classed(_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskBar, true).attr('style', \"fill: \".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.COLORS.WHITE, \"; stroke: \").concat(color, \"; stroke-width: 1;\"));\n  getRect(path, x, y, percent, height).classed(_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskBarCompletion, true).attr('style', \"fill: \".concat(color, \";\"));\n  return path;\n};\n/**\n * Creates a patterned bar with forward backslashes\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Selection} defs - d3 selection path for defs element in the graph\n * @param {Selection} path - d3 selection path for the SVG group element\n * @param {number} x - Scaled x co-ordinate\n * @param {number} y - Scaled y co-ordinate\n * @param {number} width - width in scaled pixels\n * @param {number} height - fixed pixel height as a number\n * @param {string} style - style you want to apply for bar\n * @returns {Selection} d3 selection path\n */\nvar getHashedBar = function getHashedBar(canvasSVG, defs, path, x, y, width, height, style) {\n  var patternId = 'pattern-stripe';\n  if (_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isEmpty(defs) || defs.empty()) {\n    canvasSVG.append('defs');\n  }\n  if (canvasSVG.select(\"#\".concat(patternId)).empty()) {\n    defs.append('pattern').attr('id', patternId).attr('patternUnits', 'userSpaceOnUse').attr('patternTransform', 'rotate(45)').attr('width', _constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_GANTT_TASK_STRIPE_WIDTH).attr('height', height).attr('style', \"fill: \".concat(_constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_BAR_STRIPE_COLOR, \";\")).append('rect').attr('width', _constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_GANTT_TASK_STRIPE_DISTANCE).attr('height', height);\n  }\n  getRect(path, x, y, width, height).classed(_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskBar, true).attr('style', style || \"fill: \".concat(_constants__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DEFAULT_TASK_BAR_HASH_COLOR, \";\"));\n  getRect(path, x, y, width, height).classed(_styles__WEBPACK_IMPORTED_MODULE_1__[\"default\"].taskBar, true).attr('style', \"fill: url(#\".concat(patternId, \");\"));\n  return path;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/barType.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/constants.js":
/*!************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/constants.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AXES_ORIENTATION: function() { return /* binding */ AXES_ORIENTATION; },\n/* harmony export */   AXIS_TYPE: function() { return /* binding */ AXIS_TYPE; },\n/* harmony export */   BUBBLE: function() { return /* binding */ BUBBLE; },\n/* harmony export */   COLORS: function() { return /* binding */ COLORS; },\n/* harmony export */   LINE_TYPE: function() { return /* binding */ LINE_TYPE; },\n/* harmony export */   SHAPES: function() { return /* binding */ SHAPES; },\n/* harmony export */   SHAPES_LIGHT: function() { return /* binding */ SHAPES_LIGHT; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Shape/shapeDefinitions */ \"./packages/carbon-graphs/src/js/core/Shape/shapeDefinitions.js\");\n\n\n\n\n/**\n * @module constants\n * @alias module:constants\n */\n\n\n/**\n * Consumers can pick a color from this default list\n *\n * @public\n * @property {string} BLUE \"#176ba0\"\n * @property {string} GREEN \"#076e00\"\n * @property {string} ORANGE \"#b54900\"\n * @property {string} PINK \"#ae0868\"\n * @property {string} PURPLE \"#9c19a3\"\n * @property {string} YELLOW \"#ffc20a\"\n * @property {string} LIGHT_BLUE \"#008fe0\"\n * @property {string} LIGHT_GREEN \"#4b9b1c\"\n * @property {string} LIGHT_ORANGE \"#e46511\"\n * @property {string} LIGHT_PINK \"#e16092\"\n * @property {string} LIGHT_PURPLE \"#bc70c7\"\n * @property {string} LIGHT_YELLOW \"#ffda6c\"\n * @property {string} BLACK \"#1c1f21\"\n * @property {string} GREY \"#a7aaab\"\n * @property {string} LAVENDER: \"#8374c2\"\n * @property {string} WHITE \"#ffffff\"\n * @enum {{Object: string}}\n */\n\nvar COLORS = {\n  // Dark Colors\n  BLUE: '#176ba0',\n  GREEN: '#076e00',\n  ORANGE: '#b54900',\n  PINK: '#ae0868',\n  PURPLE: '#9c19a3',\n  YELLOW: '#ffc20a',\n  // Light Colors\n  LIGHT_BLUE: '#008fe0',\n  LIGHT_GREEN: '#4b9b1c',\n  LIGHT_ORANGE: '#e46511',\n  LIGHT_PINK: '#e16092',\n  LIGHT_PURPLE: '#bc70c7',\n  LIGHT_YELLOW: '#ffda6c',\n  // Common Colors\n  BLACK: '#1c1f21',\n  GREY: '#a7aaab',\n  LAVENDER: '#8374c2',\n  WHITE: '#ffffff'\n};\n/**\n *\n * @public\n * @property {number} MAX_BUBBLES_SINGLE_DATASET \"max number of bubbles allowed in a Bubble Single Dataset API if using shades\"\n * @property {number} MAX_DATASETS_MULTIPLE_API \"max number of datassets allowed in Bubble Multiple Dataset API\"\n * @property {object} PALETTE \"array of shades to be used for color-based bubbles in Bubble Single Dataset API\"\n */\nvar BUBBLE = {\n  MAX_BUBBLES_SINGLE_DATASET: 4,\n  MAX_DATASETS_MULTIPLE_API: 7,\n  PALETTE: {\n    BLUE: ['#008fe0', '#044e7b', '#001624'],\n    GREEN: ['#4b9b1c', '#2c5e12', '#122702'],\n    ORANGE: ['#e46511', '#883e10', '#371a06'],\n    PINK: ['#ade868', '#6d0a48', '#32062a'],\n    PURPLE: ['#9c19a3', '#5c1060', '#240425'],\n    GRAY: '#949494'\n  }\n};\n\n/**\n * Consumers can pick a shape from this default list\n *\n * @public\n * @property {string} CIRCLE \"CIRCLE\"\n * @property {string} TRIANGLE \"TRIANGLE\"\n * @property {string} SQUARE \"SQUARE\"\n * @property {string} X \"X\"\n * @property {string} DIAMOND \"DIAMOND\"\n * @property {string} CROSS \"CROSS\"\n * @property {string} VERTICAL_BAR \"VERTICAL_BAR\"\n * @property {string} RHOMBUS \"RHOMBUS\"\n * @property {string} TEAR_DROP \"TEAR_DROP\"\n * @property {string} TEAR_ALT \"TEAR_ALT\"\n * @property {string} TRIANGLE_DOWN \"TRIANGLE_DOWN\"\n * @enum {{Object: string}}\n */\nvar SHAPES = {\n  CIRCLE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.CIRCLE,\n  CROSS: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.CROSS,\n  DIAMOND: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.DIAMOND,\n  RHOMBUS: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.RHOMBUS,\n  SQUARE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.SQUARE,\n  TEAR_ALT: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TEAR_ALT,\n  TEAR_DROP: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TEAR_DROP,\n  TRIANGLE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TRIANGLE,\n  TRIANGLE_DOWN: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TRIANGLE_DOWN,\n  VERTICAL_BAR: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.VERTICAL_BAR,\n  X: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.X\n};\n/**\n * Consumers can pick a light shape from this list\n *\n * @public\n * @property {string} CIRCLE \"CIRCLE\"\n * @property {string} TRIANGLE \"TRIANGLE\"\n * @property {string} SQUARE \"SQUARE\"\n * @property {string} X \"X\"\n * @property {string} DIAMOND \"DIAMOND\"\n * @property {string} CROSS \"CROSS\"\n * @property {string} VERTICAL_BAR \"VERTICAL_BAR\"\n * @property {string} RHOMBUS \"RHOMBUS\"\n * @property {string} TEAR_DROP \"TEAR_DROP\"\n * @property {string} TEAR_ALT \"TEAR_ALT\"\n * @property {string} TRIANGLE_DOWN \"TRIANGLE_DOWN\"\n * @enum {{Object: string}}\n */\nvar SHAPES_LIGHT = {\n  CIRCLE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.CIRCLE_LIGHT,\n  CROSS: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.CROSS_LIGHT,\n  DIAMOND: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.DIAMOND_LIGHT,\n  RHOMBUS: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.RHOMBUS_LIGHT,\n  SQUARE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.SQUARE_LIGHT,\n  TEAR_ALT: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TEAR_ALT_LIGHT,\n  TEAR_DROP: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TEAR_DROP_LIGHT,\n  TRIANGLE: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TRIANGLE_LIGHT,\n  TRIANGLE_DOWN: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.TRIANGLE_DOWN_LIGHT,\n  VERTICAL_BAR: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.VERTICAL_BAR_LIGHT,\n  X: _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_1__.X_LIGHT\n};\n/**\n * Consumers can pick axes tick type from default list\n * DEFAULT is enabled by default. This represents number based axes\n * TIMESERIES is time based axes. For now it only reflects on x-Axis\n *\n * @public\n * @property {string} DEFAULT \"default\"\n * @property {string} TIME_SERIES \"timeseries\"\n * @enum {{DEFAULT: string, TIME_SERIES: string}}\n */\nvar AXIS_TYPE = {\n  DEFAULT: 'default',\n  TIME_SERIES: 'timeseries'\n};\n/**\n * Consumers can pick line type from default list\n * Linear is default\n *\n * @public\n * @property {string} LINEAR \"linear\"\n * @property {string} SPLINE \"cardinal\"\n * @enum {{LINEAR: string, SPLINE: string}}\n */\nvar LINE_TYPE = {\n  LINEAR: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.curveLinear,\n  SPLINE: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.curveCardinal\n};\n\n/**\n * @enum {object}\n * Enum for different types of Axes orientations along X and Y Axes.\n */\nvar AXES_ORIENTATION = {\n  X: {\n    TOP: 'top',\n    BOTTOM: 'bottom'\n  },\n  Y: {\n    LEFT: 'left',\n    RIGHT: 'right'\n  }\n};\n\n/**\n * @enum {object}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  PADDING: {\n    top: 10,\n    bottom: 10,\n    left: 30,\n    right: 50,\n    trackLabel: 100\n  },\n  LEGEND_PADDING: {\n    top: 4,\n    bottom: 4,\n    left: 8,\n    right: 8\n  },\n  PIE_LEGEND_PADDING: {\n    top: 8,\n    bottom: 8,\n    left: 8,\n    right: 8\n  },\n  PAIR_ITEM_TYPES: ['high', 'mid', 'low'],\n  ISO8601_DATE_TIME_MILLI: /(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}(:\\d{2}(\\.\\d+)*)*)Z/,\n  RESIZE_THROTTLE: 1000 / 60,\n  BASE_CANVAS_WIDTH_PADDING: 10,\n  BASE_LABEL_ICON_SPACING: 20,\n  BASE_LABEL_ICON_WIDTH_PADDING: 5,\n  BASE_LABEL_ICON_HEIGHT_PADDING: 12,\n  TEXT_LABEL_ICON_WIDTH_PADDING: 8,\n  TEXT_LABEL_ICON_HEIGHT_PADDING: 5,\n  TEXT_LABEL_VERTICAL_POSITION: {\n    top: -10,\n    bottom: 20\n  },\n  DEFAULT_TICKSCOUNT: 7,\n  TICKSCOUNT_MAXLIMIT: 19,\n  AXISRANGE_ONE: 20,\n  AXISRANGE_TWO: 50,\n  AXISRANGE_THREE: 100,\n  AXISRANGE_FOUR: 500,\n  TIMELINE_HEIGHT: 40,\n  PIE_CHART_DEFAULT_HEIGHT: 250,\n  DEFAULT_HEIGHT: 250,\n  DEFAULT_PLOT_SCALE: 0.275,\n  DEFAULT_PLOT_SELECTION_SCALE: {\n    posX: 1.95,\n    posY: 1.95,\n    scale: 2\n  },\n  DEFAULT_PLOT_SELECTION_SCALE_FOR_EVENTS: {\n    posX: 9,\n    posY: 7,\n    scale: 1.3\n  },\n  DEFAULT_TIMELINE_PLOT_SELECTION_SCALE: {\n    posX: 2,\n    posY: 2,\n    scale: 2.2\n  },\n  DEFAULT_TIMELINE_SCALE: {\n    posX: 1.15,\n    posY: 1.15,\n    scale: 1.25\n  },\n  DEFAULT_TIMELINE_TICK_LENGTH: 12,\n  DEFAULT_LABEL_CHARACTER_LIMIT: 12,\n  DEFAULT_GANTT_TRACK_HEIGHT: 41,\n  DEFAULT_GANTT_TRACK_SELECTION: {\n    x: 1,\n    y: 1,\n    width: 2,\n    height: 1.5\n  },\n  DEFAULT_GANTT_TASK_HEIGHT: 23,\n  DEFAULT_GANTT_TASK_PADDING: {\n    top: 9,\n    bottom: 9\n  },\n  DEFAULT_GANTT_TASK_CHUNK_WIDTH: 5,\n  DEFAULT_GANTT_ACTIVITY_CHUNK_WIDTH: 5,\n  DEFAULT_GANTT_TASK_SELECTION_PADDING: 25,\n  DEFAULT_GANTT_ACTIVITY_OPACITY: 0.5,\n  DEFAULT_GANTT_ACTIVITY_HEIGHT: 31,\n  DEFAULT_GANTT_ACTIVITY_PADDING: {\n    top: 5,\n    bottom: 5\n  },\n  DEFAULT_BAR_GRAPH_PADDING_ATTRIBUTES: {\n    WIDTH_RATIO: 0.66,\n    LEFT_SHIFT_OFFSET_RATIO: 0.5,\n    LEFT_SHIFT_OFFSET_PADDING_RATIO: 0.16,\n    OUTER_PADDING_RATIO: 2.5,\n    REGION_LEFT_SHIFT_OFFSET_PADDING_RATIO: 0.08,\n    REGION_WIDTH_RATIO: 0.83\n  },\n  DEFAULT_BAR_HASH_COLOR: '#d3d4d5',\n  DEFAULT_BAR_COLOR: COLORS.BLUE,\n  DEFAULT_BAR_REGION_COLOR: '#bcbfc0',\n  DEFAULT_GOAL_LINE_STROKE_WIDTH: 5,\n  DEFAULT_REGION_LINE_STROKE_WIDTH: 5,\n  DEFAULT_BAR_SELECTION_PADDING: 5,\n  DEFAULT_ACTIVITY_BAR_HASH_COLOR: '#d3d4d5',\n  DEFAULT_TASK_BAR_HASH_COLOR: COLORS.BLUE,\n  DEFAULT_BAR_STRIPE_COLOR: '#fff',\n  DEFAULT_GANTT_TASK_STRIPE_WIDTH: 4,\n  DEFAULT_GANTT_TASK_STRIPE_DISTANCE: 2,\n  DEFAULT_GANTT_ACTIVITY_STRIPE_WIDTH: 7,\n  DEFAULT_GANTT_ACTIVITY_STRIPE_DISTANCE: 2,\n  DEFAULT_CHARACTER_SVG_ELEMENT_WIDTH: 16.5,\n  DEFAULT_Y_AXIS_SPACING: 30,\n  HOVER_EVENT: {\n    MOUSE_ENTER: 'enter',\n    MOUSE_EXIT: 'exit'\n  },\n  VIEW_BOX_SIZE: '0 0 48 48',\n  DEFAULT_COLOR: COLORS.BLACK,\n  DEFAULT_PIE_COLOR: COLORS.BLUE,\n  DEFAULT_PIE_LEGEND_SHAPE: SHAPES.SQUARE,\n  DEFAULT_PIE_INNER_RADIUS: 1,\n  DEFAULT_PIE_PAD_ANGLE: 0.01,\n  X_AXIS: 'x',\n  Y_AXIS: 'y',\n  Y2_AXIS: 'y2',\n  MIN_TICKS: 3,\n  MAX_TICK_VARIANCE: 140,\n  DEFAULT_INTERPOLATION: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.curveLinear,\n  SELECTION_INDICATOR_X_POSITION: 10,\n  SELECTION_INDICATOR_Y_POSITION: 12.5,\n  D3_TRANSITION_PROPERTIES_ENABLED: {\n    duration: 250,\n    ease: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.easeLinear\n  },\n  D3_TRANSITION_PROPERTIES_DISABLED: {\n    duration: 0,\n    ease: _d3Modules__WEBPACK_IMPORTED_MODULE_0__.easeLinear\n  },\n  d3Transition: function d3Transition(d) {\n    return function (transition) {\n      return transition.duration(d.duration).ease(d.ease);\n    };\n  },\n  TICK_ORIENTATION: {\n    TOP: -1,\n    BOTTOM: 1\n  },\n  NO_DATA_VIEW_PROPORTION: 3,\n  NO_DATA_LABEL_PADDING: 15,\n  DEFAULT_BUBBLE_RADIUS_MIN: 3,\n  DEFAULT_BUBBLE_RADIUS_MAX: 30,\n  DEFAULT_BUBBLE_SELECTOR_RADIUS: 4,\n  DEFAULT_BUBBLE_OPACITY: '0.4',\n  DEFAULT_BUBBLE_BLUR_OPACITY: '0.1',\n  DEFAULT_BUBBLE_STROKE_OPACITY: '1',\n  DEFAULT_BUBBLE_BLUR_STROKE_OPACITY: '0.3',\n  DEFAULT_LEGEND_LINE_WIDTH: 28,\n  DEFAULT_LEGEND_LINE_WIDTH_WITH_SYMBOL: 18,\n  LEGEND_LINE_POSITION: 1.5,\n  DEFAULT_OVERLAPPING_PADDING: 0.55\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/constants.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/constructUtils.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/constructUtils.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentHandler: function() { return /* binding */ contentHandler; },\n/* harmony export */   validateData: function() { return /* binding */ validateData; },\n/* harmony export */   validatePairedResultData: function() { return /* binding */ validatePairedResultData; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _controls_PairedResult_helpers_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controls/PairedResult/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/PairedResult/helpers/helpers.js\");\n/**\n * @module constructUtils\n * @alias module:constructUtils\n */\n\n\n\n\n\n/**\n * Simple utility that checks if the input is an array or objects or simple object.\n * Iterate over the array and calls the task callback function.\n *\n * @param {object|Array} input - Input can be a single object or an array of objects\n * @param {Function} task - task callback function that will be called with the input as an argument\n * @returns {undefined} returns nothing\n */\nvar contentHandler = function contentHandler(input, task) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(input)) {\n    input.forEach(function (i) {\n      return task(i);\n    });\n  } else {\n    task(input);\n  }\n};\n\n/**\n * validates data passed by consumer.\n *\n * @param {object} data - Data points object\n * @returns {undefined} returns nothing\n */\nvar validateData = function validateData(data) {\n  // eslint-disable-next-line array-callback-return\n  data.map(function (value) {\n    if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(value.y)) {\n      throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_INVALID_DATA);\n    }\n  });\n};\n\n/**\n * validates paired result data passed by consumer.\n *\n * @param {object} data - Data points object\n * @returns {undefined} returns nothing\n */\nvar validatePairedResultData = function validatePairedResultData(data) {\n  // eslint-disable-next-line array-callback-return\n  data.map(function (value) {\n    (0,_controls_PairedResult_helpers_helpers__WEBPACK_IMPORTED_MODULE_2__.iterateOnPairType)(function (t) {\n      if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDefined((0,_controls_PairedResult_helpers_helpers__WEBPACK_IMPORTED_MODULE_2__.getValue)(value, t))) {\n        if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(value[t].y)) {\n          throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_INVALID_DATA);\n        }\n      }\n    });\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL2NvbnN0cnVjdFV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUNFO0FBQ3lEOztBQUV2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUksY0FBYyxHQUFHLFNBQWpCQSxjQUFjQSxDQUFJQyxLQUFLLEVBQUVDLElBQUksRUFBSztFQUN0QyxJQUFJTiw4Q0FBSyxDQUFDTyxPQUFPLENBQUNGLEtBQUssQ0FBQyxFQUFFO0lBQ3hCQSxLQUFLLENBQUNHLE9BQU8sQ0FBQyxVQUFDQyxDQUFDO01BQUEsT0FBS0gsSUFBSSxDQUFDRyxDQUFDLENBQUM7SUFBQSxFQUFDO0VBQy9CLENBQUMsTUFBTTtJQUNMSCxJQUFJLENBQUNELEtBQUssQ0FBQztFQUNiO0FBQ0YsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNSyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSUMsSUFBSSxFQUFLO0VBQzdCO0VBQ0FBLElBQUksQ0FBQ0MsR0FBRyxDQUFDLFVBQUNDLEtBQUssRUFBSztJQUNsQixJQUFJYiw4Q0FBSyxDQUFDYyxPQUFPLENBQUNELEtBQUssQ0FBQ0UsQ0FBQyxDQUFDLEVBQUU7TUFDMUIsTUFBTSxJQUFJQyxLQUFLLENBQUNmLCtDQUFNLENBQUNnQixzQkFBc0IsQ0FBQztJQUNoRDtFQUNGLENBQUMsQ0FBQztBQUNKLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUF3QkEsQ0FBSVAsSUFBSSxFQUFLO0VBQ3pDO0VBQ0FBLElBQUksQ0FBQ0MsR0FBRyxDQUFDLFVBQUNDLEtBQUssRUFBSztJQUNsQlgseUZBQWlCLENBQUMsVUFBQ2lCLENBQUMsRUFBSztNQUN2QixJQUFJbkIsOENBQUssQ0FBQ29CLFNBQVMsQ0FBQ2pCLGdGQUFRLENBQUNVLEtBQUssRUFBRU0sQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUN2QyxJQUFJbkIsOENBQUssQ0FBQ2MsT0FBTyxDQUFDRCxLQUFLLENBQUNNLENBQUMsQ0FBQyxDQUFDSixDQUFDLENBQUMsRUFBRTtVQUM3QixNQUFNLElBQUlDLEtBQUssQ0FBQ2YsK0NBQU0sQ0FBQ2dCLHNCQUFzQixDQUFDO1FBQ2hEO01BQ0Y7SUFDRixDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvaGVscGVycy9jb25zdHJ1Y3RVdGlscy5qcz9kYTZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBjb25zdHJ1Y3RVdGlsc1xuICogQGFsaWFzIG1vZHVsZTpjb25zdHJ1Y3RVdGlsc1xuICovXG5cbmltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBlcnJvcnMgZnJvbSAnLi9lcnJvcnMnO1xuaW1wb3J0IHsgaXRlcmF0ZU9uUGFpclR5cGUsIGdldFZhbHVlIH0gZnJvbSAnLi4vY29udHJvbHMvUGFpcmVkUmVzdWx0L2hlbHBlcnMvaGVscGVycyc7XG5cbi8qKlxuICogU2ltcGxlIHV0aWxpdHkgdGhhdCBjaGVja3MgaWYgdGhlIGlucHV0IGlzIGFuIGFycmF5IG9yIG9iamVjdHMgb3Igc2ltcGxlIG9iamVjdC5cbiAqIEl0ZXJhdGUgb3ZlciB0aGUgYXJyYXkgYW5kIGNhbGxzIHRoZSB0YXNrIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fEFycmF5fSBpbnB1dCAtIElucHV0IGNhbiBiZSBhIHNpbmdsZSBvYmplY3Qgb3IgYW4gYXJyYXkgb2Ygb2JqZWN0c1xuICogQHBhcmFtIHtGdW5jdGlvbn0gdGFzayAtIHRhc2sgY2FsbGJhY2sgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZSBpbnB1dCBhcyBhbiBhcmd1bWVudFxuICogQHJldHVybnMge3VuZGVmaW5lZH0gcmV0dXJucyBub3RoaW5nXG4gKi9cbmNvbnN0IGNvbnRlbnRIYW5kbGVyID0gKGlucHV0LCB0YXNrKSA9PiB7XG4gIGlmICh1dGlscy5pc0FycmF5KGlucHV0KSkge1xuICAgIGlucHV0LmZvckVhY2goKGkpID0+IHRhc2soaSkpO1xuICB9IGVsc2Uge1xuICAgIHRhc2soaW5wdXQpO1xuICB9XG59O1xuXG4vKipcbiAqIHZhbGlkYXRlcyBkYXRhIHBhc3NlZCBieSBjb25zdW1lci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gZGF0YSAtIERhdGEgcG9pbnRzIG9iamVjdFxuICogQHJldHVybnMge3VuZGVmaW5lZH0gcmV0dXJucyBub3RoaW5nXG4gKi9cbmNvbnN0IHZhbGlkYXRlRGF0YSA9IChkYXRhKSA9PiB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBhcnJheS1jYWxsYmFjay1yZXR1cm5cbiAgZGF0YS5tYXAoKHZhbHVlKSA9PiB7XG4gICAgaWYgKHV0aWxzLmlzRW1wdHkodmFsdWUueSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcnMuVEhST1dfTVNHX0lOVkFMSURfREFUQSk7XG4gICAgfVxuICB9KTtcbn07XG5cbi8qKlxuICogdmFsaWRhdGVzIHBhaXJlZCByZXN1bHQgZGF0YSBwYXNzZWQgYnkgY29uc3VtZXIuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IGRhdGEgLSBEYXRhIHBvaW50cyBvYmplY3RcbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9IHJldHVybnMgbm90aGluZ1xuICovXG5jb25zdCB2YWxpZGF0ZVBhaXJlZFJlc3VsdERhdGEgPSAoZGF0YSkgPT4ge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgYXJyYXktY2FsbGJhY2stcmV0dXJuXG4gIGRhdGEubWFwKCh2YWx1ZSkgPT4ge1xuICAgIGl0ZXJhdGVPblBhaXJUeXBlKCh0KSA9PiB7XG4gICAgICBpZiAodXRpbHMuaXNEZWZpbmVkKGdldFZhbHVlKHZhbHVlLCB0KSkpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRW1wdHkodmFsdWVbdF0ueSkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JzLlRIUk9XX01TR19JTlZBTElEX0RBVEEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufTtcbmV4cG9ydCB7IGNvbnRlbnRIYW5kbGVyLCB2YWxpZGF0ZURhdGEsIHZhbGlkYXRlUGFpcmVkUmVzdWx0RGF0YSB9O1xuIl0sIm5hbWVzIjpbInV0aWxzIiwiZXJyb3JzIiwiaXRlcmF0ZU9uUGFpclR5cGUiLCJnZXRWYWx1ZSIsImNvbnRlbnRIYW5kbGVyIiwiaW5wdXQiLCJ0YXNrIiwiaXNBcnJheSIsImZvckVhY2giLCJpIiwidmFsaWRhdGVEYXRhIiwiZGF0YSIsIm1hcCIsInZhbHVlIiwiaXNFbXB0eSIsInkiLCJFcnJvciIsIlRIUk9XX01TR19JTlZBTElEX0RBVEEiLCJ2YWxpZGF0ZVBhaXJlZFJlc3VsdERhdGEiLCJ0IiwiaXNEZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/constructUtils.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/dateline.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/dateline.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDateline: function() { return /* binding */ createDateline; },\n/* harmony export */   getDatelineIndicatorHeight: function() { return /* binding */ getDatelineIndicatorHeight; },\n/* harmony export */   redrawDatelineContent: function() { return /* binding */ redrawDatelineContent; },\n/* harmony export */   translateDateline: function() { return /* binding */ translateDateline; },\n/* harmony export */   validateDateline: function() { return /* binding */ validateDateline; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../controls/Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _transformUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Translates the dateline, based on each content loaded.\n * When a new content is loaded, the height of the graph changes\n * since the height is consumer provided value. We would need to\n * translate the straight line based on the new height.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @param {Function} yAxisPositionHandler - call back to get y-axis position.Functions differ based on Constructs used\n * @returns {undefined} - returns nothing\n */\nvar translateDateline = function translateDateline(scale, config, canvasSVG, yAxisPositionHandler) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(config.dateline)) {\n    return;\n  }\n  var datelineGroup = canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineGroup)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_9__.getXAxisXPosition)(config), \",\").concat(yAxisPositionHandler(config), \")\"));\n  datelineGroup.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelinePoint)).select('g').attr('transform', function (d) {\n    return \"translate(\".concat(scale.x(_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parseDateTime(d.value)), \", 0) scale(\").concat((0,_transformUtils__WEBPACK_IMPORTED_MODULE_7__.getTransformScale)(this), \")\");\n  });\n  datelineGroup.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dateline)).attr('x1', function (val) {\n    return scale.x(_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parseDateTime(val.value));\n  }).attr('y1', 0).attr('x2', function (val) {\n    return scale.x(_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parseDateTime(val.value));\n  }).attr('y2', (0,_axis__WEBPACK_IMPORTED_MODULE_9__.getYAxisHeight)(config));\n};\n/**\n * Toggles the selection of a dateline indicator, executes on click of a data point.\n *\n * @private\n * @param {object} target - DOM element of the data point clicked\n * @returns {Array} d3 html element of the selected point\n */\nvar toggleDataPointSelection = function toggleDataPointSelection(target) {\n  var selectedPointNode = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target.parentNode);\n  selectedPointNode.attr('aria-selected', !(selectedPointNode.attr('aria-selected') === 'true'));\n  return selectedPointNode;\n};\n/**\n * Handler for the dateline point on click. If the click property is present for the point\n * then the callback is executed other wise it is NOP.\n *\n * @private\n * @param {object} value - data point object\n * @param {object} target - DOM object of the clicked point\n * @returns {undefined} - returns nothing\n */\nvar datelineClickHandler = function datelineClickHandler(value, target) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(value.onClick)) {\n    return;\n  }\n  toggleDataPointSelection(target).call(function (selectedTarget) {\n    return value.onClick(function () {\n      selectedTarget.attr('aria-selected', false);\n    }, value, _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(target));\n  });\n};\n/**\n * getting the height of the dateline indicator.\n *\n * @private\n * @returns { number } returns height of the dateline indicator\n */\nvar getDatelineIndicatorHeight = function getDatelineIndicatorHeight() {\n  var shapeHeightArr = [];\n  _d3Modules__WEBPACK_IMPORTED_MODULE_0__.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelinePoint)).each(function () {\n    var shapeHeight = this.getBBox().height;\n    shapeHeightArr.push(shapeHeight);\n  });\n  var datelineIndicatorHeight = Math.max.apply(Math, shapeHeightArr);\n  return datelineIndicatorHeight;\n};\n/**\n * Creates a dateline for graph. We are not adding\n * x1, x2, y1, y2 co-ordinates for the straight line since they will be adjusted when\n * content is loaded.\n *\n * @description Dateline point is shown only when showDatelineIndicator is enabled\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createDateline = function createDateline(scale, config, canvasSVG) {\n  var datelineContent;\n  if (config.settingsDictionary.shouldCreateDatelineDefs) {\n    datelineContent = canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineContent, true).attr('clip-path', \"url(#\".concat(config.datelineClipPathId, \")\"));\n  } else {\n    datelineContent = canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineContent, true);\n  }\n  config.dateline.forEach(function (dateline) {\n    var datelineGroup = datelineContent.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineGroup, true).datum(dateline).attr('style', function (val) {\n      return \"fill: \".concat(val.color, \"; stroke: \").concat(val.color, \";\");\n    }).attr('aria-selected', false);\n    var graphConfigClickPassThrough = _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isDefined(config.clickPassThrough) ? config.clickPassThrough.datelines : false;\n    datelineGroup.append('line').classed(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dateline, true).attr('style', function (d) {\n      return \"fill: \".concat(d.color, \"; stroke: \").concat(d.color);\n    }).attr('pointer-events', graphConfigClickPassThrough ? 'none' : 'auto');\n    datelineGroup.append(function (d) {\n      return new _core__WEBPACK_IMPORTED_MODULE_4__.Shape((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_6__.getShapeForTarget)(d)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_5__.getDefaultSVGProps)({\n        svgClassNames: _styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelinePoint,\n        svgStyles: \"fill: \".concat(d.color, \"; stroke: \").concat(d.color),\n        transformFn: function transformFn(s) {\n          return \"scale(\".concat(s, \")\");\n        },\n        onClickFn: function onClickFn() {\n          datelineClickHandler(d, this);\n        },\n        a11yAttributes: {\n          'aria-hidden': !dateline.showDatelineIndicator,\n          'aria-disabled': !_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFunction(dateline.onClick)\n        }\n      }));\n    });\n  });\n  translateDateline(scale, config, canvasSVG, _axis__WEBPACK_IMPORTED_MODULE_9__.getYAxisYPosition);\n  if (config.settingsDictionary.shouldCreateDatelineDefs && config.dateline.length > 0) {\n    var datelineIndicatorHeight = Math.floor(getDatelineIndicatorHeight() / 2);\n    canvasSVG.select(\"clipPath#\".concat(config.datelineClipPathId)).selectAll('rect').attr('height', (0,_axis__WEBPACK_IMPORTED_MODULE_9__.getYAxisHeight)(config) + datelineIndicatorHeight).attr(_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Y_AXIS, (0,_axis__WEBPACK_IMPORTED_MODULE_9__.getYAxisYPosition)(config) - datelineIndicatorHeight);\n  }\n};\n/**\n * redraw a dateline for graph. To add the dateline content on top of the content\n * when content is loaded.\n *\n * @description Redrawing the dateline to keep it on top of the content.\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar redrawDatelineContent = function redrawDatelineContent(scale, config, canvasSVG) {\n  if (!canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineContent)).empty()) {\n    canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_3__[\"default\"].datelineContent)).remove();\n    createDateline(scale, config, canvasSVG);\n  }\n};\n/**\n * Validates and verifies the dateline\n * Checks if the following properties are present:\n *      color\n *      shape\n *      dateline\n *\n * @private\n * @param {object} dateline - JSON object with color, shape and date value.\n * @throws {module:errors.THROW_MSG_DATELINE_OBJECT_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_DATELINE_COLOR_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_DATELINE_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_DATELINE_TYPE_NOT_VALID}\n * @returns {undefined} - returns nothing\n */\nvar validateDateline = function validateDateline(dateline) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(dateline)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_DATELINE_OBJECT_NOT_PROVIDED);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(dateline.value)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_DATELINE_NOT_PROVIDED);\n  }\n  if (!_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isDate(dateline.value)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_DATELINE_TYPE_NOT_VALID);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(dateline.color)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_DATELINE_COLOR_NOT_PROVIDED);\n  }\n  if (dateline.showDatelineIndicator && _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(dateline.shape)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_2__[\"default\"].THROW_MSG_DATELINE_SHAPE_NOT_PROVIDED);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/dateline.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js":
/*!******************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createVGrid: function() { return /* binding */ createVGrid; },\n/* harmony export */   prepareHAxis: function() { return /* binding */ prepareHAxis; },\n/* harmony export */   translateVGrid: function() { return /* binding */ translateVGrid; }\n/* harmony export */ });\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n/**\n * @typedef d3\n */\n\n/**\n * Different types of Buckets.\n *\n * @private\n * @type {{UPPER_STEP_TICK_VALUES: string, LOWER_STEP_TICK_VALUES: string, MIDPOINT_TICK_VALUES: string}}\n */\nvar BUCKET_TYPES = {\n  LOWER_STEP_TICK_VALUES: 'lowerStepTickValues',\n  MIDPOINT_TICK_VALUES: 'midpointTickValues',\n  UPPER_STEP_TICK_VALUES: 'upperStepTickValues'\n};\n\n/**\n * Helper to create the config for dateTimeBuckets for creating and translating grids and axis.\n *\n * @private\n * @param {Array} values - list of all tick values.\n * @param {string} height - Y axis height.\n * @param {string} orientation - X axis orientation.\n * @param {object} transition - gets transition based on pannig mode is enabled or not\n * @returns {object} - config with tick values and height.\n */\nvar createDatetimeBucketConfig = function createDatetimeBucketConfig(values, height, orientation, transition) {\n  return {\n    axis: {\n      x: {\n        ticks: {\n          values: values\n        },\n        orientation: \"\".concat(orientation)\n      }\n    },\n    height: \"\".concat(height),\n    settingsDictionary: {\n      transition: transition\n    }\n  };\n};\n\n/**\n * Helper function to determine the type.\n *\n * @private\n * @param {string} type - different types of tick.\n * @returns {string} styling of the type.\n */\nvar determineBucketStyle = function determineBucketStyle(type) {\n  switch (type) {\n    case BUCKET_TYPES.LOWER_STEP_TICK_VALUES:\n      return _styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gridLowerStep;\n    case BUCKET_TYPES.MIDPOINT_TICK_VALUES:\n      return _styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gridMidpoint;\n    case BUCKET_TYPES.UPPER_STEP_TICK_VALUES:\n      return _styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gridUpperStep;\n    default:\n      return '';\n  }\n};\n\n/**\n * Helper to create the d3 Axis ticks (X-Axis ticks) of different types based on if its gantt or not.\n *\n * @private\n * @param {object} gridSVG - d3 object of the grid\n * @param {object} axis - Axis scaled according to input parameters\n * @param {Array} values - List of all tick values.\n * @param {string} orientation - X axis orientation.\n * @param {string} height - height of the grid, based on input config.\n * @param {object} transition - gets transition based on pannig mode is enabled or not\n * @param {string} type - type of tick. Either lowerStepTick or midpointTick or upperStepTick.\n * @param {Function} createVGridHandler - Call back function to create grid.\n * @returns {undefined} - returns nothing.\n */\nvar createVGridForDatetimeBuckets = function createVGridForDatetimeBuckets(gridSVG, axis, values, orientation, height, transition, type, createVGridHandler) {\n  var config = createDatetimeBucketConfig(values, height, orientation, transition);\n  var style = determineBucketStyle(type);\n  createVGridHandler(gridSVG, axis, style, config);\n};\n\n/**\n * Helper to create the d3 Axis ticks (X-Axis ticks) of different types and append into the canvas.\n *\n * @private\n * @param {object} gridSVG - d3 object of the grid\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Function} createVGridHandler - Call back function to create grid.\n * @returns {undefined} - returns nothing.\n */\nvar createDatetimeBuckets = function createDatetimeBuckets(gridSVG, axis, config, createVGridHandler) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.values) && _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(config.axis.x.ticks.lowerStepTickValues)) {\n    createVGridForDatetimeBuckets(gridSVG, axis, config.axis.x.ticks.values, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.LOWER_STEP_TICK_VALUES, createVGridHandler);\n  } else if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.lowerStepTickValues)) {\n    createVGridForDatetimeBuckets(gridSVG, axis, config.axis.x.ticks.lowerStepTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.LOWER_STEP_TICK_VALUES, createVGridHandler);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.midpointTickValues)) {\n    createVGridForDatetimeBuckets(gridSVG, axis, config.axis.x.ticks.midpointTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.MIDPOINT_TICK_VALUES, createVGridHandler);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.upperStepTickValues)) {\n    createVGridForDatetimeBuckets(gridSVG, axis, config.axis.x.ticks.upperStepTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.UPPER_STEP_TICK_VALUES, createVGridHandler);\n  }\n};\n\n/**\n * Helper to translate the d3 Axis ticks (X-Axis ticks) of different types based on if its gantt or not.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} axis - Axis scaled according to input parameters\n * @param {Array} values - List of all tick values.\n * @param {string} orientation - X axis orientation.\n * @param {string} height - height of the grid, based on input config.\n * @param {object} transition - gets transition based on pannig mode is enabled or not\n * @param {string} type - type of tick. Either lowerStepTick or midpointTick or upperStepTick.\n * @param {Function} translateVGridHandler - Call back function to translate grid.\n * @returns {undefined} - returns nothing.\n */\nvar translateVGridDatetimeBuckets = function translateVGridDatetimeBuckets(canvasSVG, axis, values, orientation, height, transition, type, translateVGridHandler) {\n  var config = createDatetimeBucketConfig(values, height, orientation, transition);\n  var style = determineBucketStyle(type);\n  translateVGridHandler(canvasSVG, axis, style, config);\n};\n\n/**\n * Helper to translate d3 Axis ticks (X-Axis ticks) of different types and append into the canvas.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Function} translateVGridHandler - Call back function to translate grid.\n * @returns {undefined} - returns nothing.\n */\nvar translateDatetimeBuckets = function translateDatetimeBuckets(canvasSVG, axis, config, translateVGridHandler) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.values) && _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(config.axis.x.ticks.lowerStepTickValues)) {\n    translateVGridDatetimeBuckets(canvasSVG, axis, config.axis.x.ticks.values, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.LOWER_STEP_TICK_VALUES, translateVGridHandler);\n  } else if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.lowerStepTickValues)) {\n    translateVGridDatetimeBuckets(canvasSVG, axis, config.axis.x.ticks.lowerStepTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.LOWER_STEP_TICK_VALUES, translateVGridHandler);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.midpointTickValues)) {\n    translateVGridDatetimeBuckets(canvasSVG, axis, config.axis.x.ticks.midpointTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.MIDPOINT_TICK_VALUES, translateVGridHandler);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(config.axis.x.ticks.upperStepTickValues)) {\n    translateVGridDatetimeBuckets(canvasSVG, axis, config.axis.x.ticks.upperStepTickValues, config.axis.x.orientation, config.height, config.settingsDictionary.transition, BUCKET_TYPES.UPPER_STEP_TICK_VALUES, translateVGridHandler);\n  }\n};\n\n/**\n * Helper function to create config for axes when dateTimeBuckets are used.\n * We only display lowerStepTickValues/values and upperStepTickValues in the axis, since,\n * midpointTickValues can be inferred.\n *\n * @private\n * @param {object} dateTimeBuckets - all tick values.\n * @returns {Array} newStepvalues - tick values based on bucket input.\n */\nvar constructDatetimeBucketValues = function constructDatetimeBucketValues(dateTimeBuckets) {\n  var newStepValues = [];\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(dateTimeBuckets.values)) {\n    newStepValues = newStepValues.concat(dateTimeBuckets.values);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(dateTimeBuckets.upperStepTickValues)) {\n    newStepValues = newStepValues.concat(dateTimeBuckets.upperStepTickValues);\n  }\n  return newStepValues;\n};\n\n/**\n * Helper function to determine if the graph config is not a DatetimeBucket\n *\n * @private\n * @param {object} ticks - ticks object derived from input JSON.\n * @returns {boolean} - True, if DatetimeBucket. False, if it is not a DatetimeBucket.\n */\nvar hasDatetimeBuckets = function hasDatetimeBuckets(ticks) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isEmpty(ticks)) {\n    return false;\n  }\n  return _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(ticks.midpointTickValues) || _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(ticks.upperStepTickValues) || _utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"].notEmpty(ticks.lowerStepTickValues);\n};\n\n/**\n * Helper function to create Vertical grid\n *\n * @private\n * @param {object} gridSVG - d3 object of the grid\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON * @param gridSVG\n * @param {Function} createVGridHandler - Call back function to create grid.\n * @returns {undefined} - returns nothing\n */\nvar createVGrid = function createVGrid(gridSVG, axis, config, createVGridHandler) {\n  if (hasDatetimeBuckets(config.axis.x.ticks)) {\n    createDatetimeBuckets(gridSVG, axis, config, createVGridHandler);\n  } else {\n    createVGridHandler(gridSVG, axis, _styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gridV, config);\n  }\n};\n\n/**\n * Helper function to update horizontal axes, if graph has datetime buckets\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON * @param gridSVG\n * @param {Function} prepareXAxisHandler - Callback function to prepare the axis with new tick values\n * @param {string} [orientation] - Axis orientation\n * @returns {undefined} - returns nothing\n */\nvar prepareHAxis = function prepareHAxis(scale, axis, config, prepareXAxisHandler) {\n  var orientation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : config.axis.x.orientation;\n  if (hasDatetimeBuckets(config.axis.x.ticks)) {\n    var values = config.axis.x.ticks.lowerStepTickValues ? config.axis.x.ticks.lowerStepTickValues : config.axis.x.ticks.values;\n    var datetimeBuckets = {\n      values: values,\n      upperStepTickValues: config.axis.x.ticks.upperStepTickValues\n    };\n    axis.x = prepareXAxisHandler(scale, constructDatetimeBucketValues(datetimeBuckets), config, orientation);\n  }\n};\n\n/**\n * Helper function to translate Vertical grid\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {object} axis - Axis scaled according to input parameters\n * @param {object} config - config object derived from input JSON * @param gridSVG\n * @param {Function} translateVGridHandler - Call back function to translate grid.\n * @returns {undefined} - returns nothing * @param axis\n */\nvar translateVGrid = function translateVGrid(canvasSVG, axis, config, translateVGridHandler) {\n  if (hasDatetimeBuckets(config.axis.x.ticks)) {\n    translateDatetimeBuckets(canvasSVG, axis, config, translateVGridHandler);\n  } else {\n    translateVGridHandler(canvasSVG, axis, _styles__WEBPACK_IMPORTED_MODULE_0__[\"default\"].gridV, config);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/datetimeBuckets.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/errors.js":
/*!*********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/errors.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @file\n * Error constants dictionary.\n * @module errors\n * @alias module:errors\n */\n\n/**\n * @enum {string}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\n     * @description Construct\n     */\n  THROW_MSG_CONSTRUCT_GENERATE_NOT_IMPLEMENTED: 'Generate function not implemented from Construct.',\n  THROW_MSG_CONSTRUCT_LOAD_NOT_IMPLEMENTED: 'LoadContent function not implemented from Construct.',\n  THROW_MSG_CONSTRUCT_UNLOAD_NOT_IMPLEMENTED: 'UnloadContent function not implemented from Construct.',\n  THROW_MSG_CONSTRUCT_RESIZE_NOT_IMPLEMENTED: 'Resize function not implemented from Construct.',\n  THROW_MSG_CONSTRUCT_DESTROY_NOT_IMPLEMENTED: 'Destroy function not implemented from Construct.',\n  /**\n     * @description Shapes\n     */\n  THROW_MSG_SHAPE_PATH_EMPTY: 'Shape Path property cannot be empty.',\n  THROW_MSG_SHAPE_OPTIONS_EMPTY: 'Shape Options property cannot be empty.',\n  THROW_MSG_SHAPE_OPTIONS_PROPERTY_INVALID: 'Invalid Shape Options property attributes (x, y, scale).',\n  /**\n     * @description Graph\n     */\n  THROW_MSG_INVALID_INPUT: 'Invalid input provided.',\n  THROW_MSG_NO_BIND: 'Invalid input format, graph DOM id must be provided.',\n  THROW_MSG_NO_AXES_DATA_LOADED: 'Graph axes data needs to be loaded.',\n  THROW_MSG_NO_DATA_LOADED: 'Graph data needs to be loaded.',\n  THROW_MSG_INVALID_CALLBACK_FUNCTION: 'Argument needs to be a function.',\n  THROW_MSG_NO_DATA_POINTS: 'Invalid input format, data points must be provided.',\n  THROW_MSG_INVALID_DATA_PROPERTY: 'Invalid input format, all data object properties must be provided.',\n  THROW_MSG_NON_UNIQUE_PROPERTY: 'Invalid input format, label and key must be unique.',\n  THROW_MSG_UNIQUE_KEY_NOT_PROVIDED: 'Invalid input format, unique key must be provided.',\n  THROW_MSG_UNIQUE_LABEL_NOT_PROVIDED: 'Invalid input format, unique label must be provided.',\n  THROW_MSG_NO_CONTENT_DATA_LOADED: 'Content data needs to be loaded.',\n  /**\n     * @description Axes\n     */\n  THROW_MSG_NO_AXIS_INFO: 'Invalid input format, axis must be provided.',\n  THROW_MSG_NO_AXIS_LIMIT_INFO: 'Invalid input format, axis limits must be provided.',\n  THROW_MSG_NO_AXIS_LABEL_INFO: 'Invalid input format, axis labels for all axes must be provided.',\n  THROW_MSG_INVALID_TYPE: 'Invalid input format, type must be valid.',\n  THROW_MSG_INVALID_AXIS_TYPE_VALUES: 'Axis type invalid, bounds need to be in ISO8601 datetime format.',\n  THROW_MSG_INVALID_FORMAT_TYPE: 'Type cannot be default, if data-points are in date time format.',\n  THROW_MSG_INVALID_OBJECT_PROVIDED: 'Invalid object provided as argument.',\n  /**\n     * @description Content\n     */\n  THROW_MSG_CONTENT_LOAD_NOT_IMPLEMENTED: 'Load function has not been implemented for this graph type.',\n  THROW_MSG_CONTENT_UNLOAD_NOT_IMPLEMENTED: 'Unload function has not been implemented for this graph type.',\n  THROW_MSG_CONTENT_RESIZE_NOT_IMPLEMENTED: 'Resize function has not been implemented for this graph type.',\n  THROW_MSG_CONTENT_REDRAW_NOT_IMPLEMENTED: 'Redraw function has not been implemented for this graph type.',\n  THROW_MSG_CONFIG_GET_CONFIG_NOT_IMPLEMENTED: 'GetInput not been implemented for BaseConfig.',\n  THROW_MSG_CONFIG_SET_INPUT_NOT_IMPLEMENTED: 'SetInput not been implemented for BaseConfig.',\n  THROW_MSG_CONFIG_VALIDATE_INPUT_NOT_IMPLEMENTED: 'Input validation has not been implemented.',\n  THROW_MSG_CONFIG_CLONE_INPUT_NOT_IMPLEMENTED: 'Clone input function has not been implemented.',\n  THROW_MSG_INVALID_LOAD_CONTENT_AT_INDEX: 'Invalid input provided. Content cannot be loaded at index less than zero.',\n  THROW_MSG_INVALID_DATA: 'Invalid data provided, data cannot consists of values like null/undefined',\n  /**\n     * @description Region\n     */\n  THROW_MSG_REGION_EMPTY: 'Region in data object cannot be empty.',\n  THROW_MSG_REGION_INVALID_AXIS_PROVIDED: 'Region axis provided is invalid.',\n  THROW_MSG_REGION_INVALID_VALUE_TYPE_PROVIDED: \"Region 'start' and 'end' value has invalid type.\",\n  THROW_MSG_REGION_START_END_MISSING: \"Region cannot have both 'start' and 'end' empty.\",\n  THROW_MSG_REGION_START_MORE_END: \"Region 'start' cannot be larger than 'end'.\",\n  /**\n     * @description Tasks\n     */\n  THROW_MSG_TASKS_NOT_PROVIDED: 'Invalid input format, task(s) must be provided for a track.',\n  THROW_MSG_TASKS_UNIQUE_KEY_NOT_PROVIDED: 'Invalid input format; unique key must be provided for each task.',\n  THROW_MSG_TASKS_START_AND_END_NOT_PROVIDED: 'Invalid input format; both start date and end date cannot be empty.',\n  THROW_MSG_TASKS_DURATION_NOT_PROVIDED: 'Invalid input format; start date or end date cannot be empty for a task. No duration function provided.',\n  THROW_MSG_TASKS_START_AND_END_TYPE_NOT_VALID: 'Input type invalid, start date and end date needs to be in ISO8601 datetime format.',\n  THROW_MSG_TASKS_START_MORE_END: 'Input input format; start date cannot be larger than end date.',\n  THROW_MSG_TASKS_DURATION_NOT_FUNCTION: 'Invalid property: duration; Duration needs to be a function.',\n  THROW_MSG_TASKS_DURATION_NOT_VALID: 'Invalid property: duration; Duration needs to return a number.',\n  /**\n     * @description Activities\n     */\n  THROW_MSG_ACTIVITIES_NOT_PROVIDED: 'Invalid input format, task(s) must be provided for a track.',\n  THROW_MSG_ACTIVITIES_UNIQUE_KEY_NOT_PROVIDED: 'Invalid input format; unique key must be provided for each task.',\n  THROW_MSG_ACTIVITIES_START_AND_END_NOT_PROVIDED: 'Invalid input format; both start date and end date cannot be empty.',\n  THROW_MSG_ACTIVITIES_DURATION_NOT_PROVIDED: 'Invalid input format; start date or end date cannot be empty for a task. No duration function provided.',\n  THROW_MSG_ACTIVITIES_START_AND_END_TYPE_NOT_VALID: 'Input type invalid, start date and end date needs to be in ISO8601 datetime format.',\n  THROW_MSG_ACTIVITIES_START_MORE_END: 'Input input format; start date cannot be larger than end date.',\n  THROW_MSG_ACTIVITIES_DURATION_NOT_FUNCTION: 'Invalid property: duration; Duration needs to be a function.',\n  THROW_MSG_ACTIVITIES_DURATION_NOT_VALID: 'Invalid property: duration; Duration needs to return a number.',\n  /**\n     * @description Actions\n     */\n  THROW_MSG_UNIQUE_ACTION_KEY_NOT_PROVIDED: 'Invalid property, a valid unique action key must be provided matching the legend key.',\n  /**\n     * @description Dateline\n     */\n  THROW_MSG_DATELINE_OBJECT_NOT_PROVIDED: 'Invalid property, a valid dateline object must be provided.',\n  THROW_MSG_DATELINE_NOT_PROVIDED: 'Invalid property, a valid dateline value must be provided.',\n  THROW_MSG_DATELINE_TYPE_NOT_VALID: 'Invalid property, dateline value type must be in ISO8601 datetime format.',\n  THROW_MSG_DATELINE_COLOR_NOT_PROVIDED: 'Invalid property, a valid dateline color value must be provided.',\n  THROW_MSG_DATELINE_SHAPE_NOT_PROVIDED: 'Invalid property, a valid dateline shape value must be provided.',\n  /**\n     * @description Eventline\n     */\n  THROW_MSG_EVENTLINE_OBJECT_NOT_PROVIDED: 'Invalid property, a valid eventline object must be provided.',\n  THROW_MSG_EVENTLINE_NOT_PROVIDED: 'Invalid property, a valid eventline value must be provided.',\n  THROW_MSG_EVENTLINE_TYPE_NOT_VALID: 'Invalid property, eventline value type must be in ISO8601 datetime format.',\n  THROW_MSG_EVENTLINE_COLOR_NOT_PROVIDED: 'Invalid property, a valid eventline color value must be provided.',\n  /**\n     * @description Bar\n     */\n  THROW_MSG_INVALID_X_AXIS_TICK_VALUES: 'Invalid X Axis, tick values are required for Bar graph content.',\n  THROW_MSG_EMPTY_X_AXIS_TICK_VALUES: 'Invalid X Axis, tick values cannot be empty.',\n  THROW_MSG_BAR_REGION_EMPTY_X_VALUE: \"Region for Bar graph content cannot have 'x' value empty.\",\n  THROW_MSG_INVALID_REGION_X_AXIS_TICK: 'Invalid X Axis, tick values are required for Bar region.',\n  THROW_MSG_REGION_INVALID_FORMAT: 'Region x type for bar graph cannot be default, if data-points are in date time format.',\n  THROW_MSG_AXIS_INFO_ROW_EMPTY_TICK_VALUES: 'Invalid X Axis Info Row, tick info values are required.',\n  THROW_MSG_AXIS_INFO_ROW_INVALID_TICK_VALUES: 'Invalid X Axis Info Row, tick info values should match with X Axis tick values.',\n  THROW_MSG_AXIS_INFO_ROW_VALUE_NOT_PROVIDED: 'Invalid X Axis Info Row input format, value property must be provided.',\n  THROW_MSG_AXIS_INFO_ROW_LABEL_DISPLAY_NOT_PROVIDED: 'Invalid X Axis Info Row input format, display must be provided for label property.',\n  /**\n     * @description Legend\n     */\n  THROW_MSG_LEGEND_LABEL_NOT_PROVIDED: 'Invalid property, a valid label object with a valid string must be provided.',\n  THROW_MSG_LEGEND_LABEL_FORMAT_NOT_PROVIDED: 'Invalid property, a valid label.format callback function property must be provided.'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/errors.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/eventline.js":
/*!************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/eventline.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEventline: function() { return /* binding */ createEventline; },\n/* harmony export */   redrawEventlineContent: function() { return /* binding */ redrawEventlineContent; },\n/* harmony export */   translateEventline: function() { return /* binding */ translateEventline; },\n/* harmony export */   validateEventline: function() { return /* binding */ validateEventline; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _transformUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Translates the eventline, based on each content loaded.\n * When a new content is loaded, the height of the graph changes\n * since the height is consumer provided value. We would need to\n * translate the straight line based on the new height.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @param {Function} yAxisPositionHandler - call back to get y-axis position.Functions differ based on Constructs used\n * @returns {undefined} - returns nothing\n */\nvar translateEventline = function translateEventline(scale, config, canvasSVG, yAxisPositionHandler) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(config.eventline)) {\n    return;\n  }\n  var eventlineGroup = canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlineGroup)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_5__.getXAxisXPosition)(config), \",\").concat(yAxisPositionHandler(config), \")\"));\n  eventlineGroup.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlinePoint)).select('g').attr('transform', function (d) {\n    return \"translate(\".concat(scale.x(_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parseDateTime(d.value)), \", 0) scale(\").concat((0,_transformUtils__WEBPACK_IMPORTED_MODULE_3__.getTransformScale)(this), \")\");\n  });\n  eventlineGroup.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventline)).attr('x1', function (val) {\n    return scale.x(_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parseDateTime(val.value));\n  }).attr('y1', 0).attr('x2', function (val) {\n    return scale.x(_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parseDateTime(val.value));\n  }).attr('y2', (0,_axis__WEBPACK_IMPORTED_MODULE_5__.getYAxisHeight)(config));\n};\n/**\n * Creates a eventline for graph. We are not adding\n * x1, x2, y1, y2 co-ordinates for the straight line since they will be adjusted when\n * content is loaded.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar createEventline = function createEventline(scale, config, canvasSVG) {\n  var eventlineContent = canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlineContent, true).attr('clip-path', \"url(#\".concat(config.clipPathId, \")\"));\n  config.eventline.forEach(function (eventline) {\n    var eventlineGroup = eventlineContent.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlineGroup, true).datum(eventline).attr('style', function (val) {\n      return \"fill: \".concat(val.color, \"; stroke: \").concat(val.color, \";\");\n    }).attr('aria-selected', false);\n    var graphConfigClickPassThrough = _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDefined(config.clickPassThrough) ? config.clickPassThrough.eventlines : false;\n    eventlineGroup.append('line').classed(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventline, true).attr('style', function (d) {\n      return \"fill: \".concat(d.color, \"; stroke: \").concat(d.color, \"; stroke-dasharray: \").concat(d.style !== undefined && d.style.strokeDashArray !== undefined ? d.style.strokeDashArray : '2,2');\n    }).attr('pointer-events', graphConfigClickPassThrough ? 'none' : 'auto').attr('aria-hidden', false);\n  });\n  translateEventline(scale, config, canvasSVG, _axis__WEBPACK_IMPORTED_MODULE_5__.getYAxisYPosition);\n};\n/**\n * redraw a eventline for graph. To add the eventline content on top of the content\n * when content is loaded.\n *\n * @description Redrawing the eventline to keep it on top of the content.\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {Array} canvasSVG - d3 object of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar redrawEventlineContent = function redrawEventlineContent(scale, config, canvasSVG) {\n  if (!canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlineContent)).empty()) {\n    canvasSVG.select(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_2__[\"default\"].eventlineContent)).remove();\n    createEventline(scale, config, canvasSVG);\n  }\n};\n/**\n * Validates and verifies the eventline\n * Checks if the following properties are present:\n *      color\n *      eventline\n *\n * @private\n * @param {object} eventline - JSON object with color, shape and date value.\n * @throws {module:errors.THROW_MSG_EVENTLINE_OBJECT_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_EVENTLINE_COLOR_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_EVENTLINE_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_EVENTLINE_TYPE_NOT_VALID}\n * @returns {undefined} - returns nothing\n */\nvar validateEventline = function validateEventline(eventline) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(eventline)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_EVENTLINE_OBJECT_NOT_PROVIDED);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(eventline.value)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_EVENTLINE_NOT_PROVIDED);\n  }\n  if (!_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(eventline.value)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_EVENTLINE_TYPE_NOT_VALID);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(eventline.color)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_1__[\"default\"].THROW_MSG_EVENTLINE_COLOR_NOT_PROVIDED);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/eventline.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/label.js":
/*!********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/label.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildY2AxisLabelShapeContainer: function() { return /* binding */ buildY2AxisLabelShapeContainer; },\n/* harmony export */   buildYAxisLabelShapeContainer: function() { return /* binding */ buildYAxisLabelShapeContainer; },\n/* harmony export */   createTooltipDiv: function() { return /* binding */ createTooltipDiv; },\n/* harmony export */   destroyTooltipDiv: function() { return /* binding */ destroyTooltipDiv; },\n/* harmony export */   loadLabelPopup: function() { return /* binding */ loadLabelPopup; },\n/* harmony export */   prepareLabelShapeItem: function() { return /* binding */ prepareLabelShapeItem; },\n/* harmony export */   removeLabelShapeItem: function() { return /* binding */ removeLabelShapeItem; },\n/* harmony export */   shouldTruncateLabel: function() { return /* binding */ shouldTruncateLabel; },\n/* harmony export */   translateLabelShapeContainer: function() { return /* binding */ translateLabelShapeContainer; },\n/* harmony export */   truncateLabel: function() { return /* binding */ truncateLabel; },\n/* harmony export */   updateShapesDuringReflow: function() { return /* binding */ updateShapesDuringReflow; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controls/Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/Shape/shapeDefinitions */ \"./packages/carbon-graphs/src/js/core/Shape/shapeDefinitions.js\");\n/**\n * @file\n * Axes Label helper functions.\n * @module label\n * @alias module:label\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Informs if a label needs truncation or otherwise\n *\n * @private\n * @param {string} labelStr - A label\n * @param {number} [charLimit] - Maximum character length before truncation\n * @returns {boolean} true if needs truncation, false otherwise\n */\nvar shouldTruncateLabel = function shouldTruncateLabel(labelStr) {\n  var charLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_LABEL_CHARACTER_LIMIT;\n  return labelStr.length > charLimit;\n};\n/**\n * Truncates the label string to the character limit provided, by default its\n * constants.DEFAULT_LABEL_CHARACTER_LIMIT\n *\n * @private\n * @param {string} labelStr - A label\n * @param {number} charLimit - Maximum character length before truncation\n * @returns {string} A truncated string with ellipsis\n */\nvar truncateLabel = function truncateLabel(labelStr) {\n  var charLimit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].DEFAULT_LABEL_CHARACTER_LIMIT;\n  return labelStr.substring(0, charLimit).concat('...');\n};\n/**\n * Removes old popup present for label.\n */\nvar removeOldPopup = function removeOldPopup() {\n  // Remove old popup\n  _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupOverlay)).remove();\n  _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip)).attr('style', '').selectAll('g').remove();\n};\n/**\n * Render Popup for the label.\n *\n * @private\n * @param {string} axisType - type of axis\n * @returns {object} d3 svg path\n */\nvar renderPopup = function renderPopup(axisType) {\n  var tip = document.querySelector(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip));\n  var clickHandler = function clickHandler() {\n    _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(tip).attr('style', 'display:none;').selectAll('g').remove();\n    _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupOverlay)).remove();\n    tip.removeEventListener('click', clickHandler);\n    window.removeEventListener('resize', clickHandler);\n  };\n  // Add new popup\n  _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select('body').append('div', \"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip)).attr('id', _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupOverlay).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupOverlay, true).on('click', clickHandler);\n  // Position popup\n  return axisType === 'y2'\n  // Since y2 axis will be on the right side of the page, we should make popup move a bit left when clicked on y2-axis label.\n  ? _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip)).style('left', \"\".concat(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.event.pageX - 250, \"px\")).style('top', \"\".concat(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.event.pageY + 5, \"px\")) : _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(\"#\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip)).style('left', \"\".concat(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.event.pageX + 5, \"px\")).style('top', \"\".concat(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.event.pageY + 5, \"px\"));\n};\n/**\n * Create popup for the label.\n *\n * @param {string} axisLabel - label of axis.\n * @param {string} axisType - type of axis.\n * @returns {object} popup with axis label in it.\n */\nvar loadLabelPopup = function loadLabelPopup(axisLabel, axisType) {\n  removeOldPopup();\n  var path = renderPopup(axisType);\n  return path.append('g').append('g').classed('popup-item', true).append('g').classed('popup-text', true).text(axisLabel);\n};\n/**\n * Loads a shape within a label container to be shown below Y and Y2 axes.\n *\n * @private\n * @param {Selection} shapeContainerPath - d3 path for label shape container\n * @param {Array} dataTarget - Data points\n * @returns {Selection} d3 path for label shape container\n */\n// eslint-disable-next-line consistent-return\nvar loadLabelShape = function loadLabelShape(shapeContainerPath, dataTarget) {\n  if (dataTarget.values.length > 0) {\n    if (dataTarget.showShapes || dataTarget.showShapes === undefined) {\n      return shapeContainerPath.append(function () {\n        return new _core__WEBPACK_IMPORTED_MODULE_2__.Shape(dataTarget.shape || _constants__WEBPACK_IMPORTED_MODULE_5__.SHAPES.CIRCLE).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n          svgStyles: \"fill: \".concat((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getColorForTarget)(dataTarget), \";\"),\n          transformFn: function transformFn(scale) {\n            return \"scale(\".concat(scale, \")\");\n          },\n          a11yAttributes: {\n            'aria-describedby': dataTarget.key\n          }\n        }));\n      });\n    }\n    shapeContainerPath.append(function () {\n      return new _core__WEBPACK_IMPORTED_MODULE_2__.Shape(dataTarget.style.strokeDashArray === '0' ? _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_8__.LINE : _core_Shape_shapeDefinitions__WEBPACK_IMPORTED_MODULE_8__.LINE_DASHED).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n        svgStyles: \"fill: \".concat((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getColorForTarget)(dataTarget), \"; stroke-dasharray: \\\"\").concat(dataTarget.style.strokeDashArray, \"\\\"\"),\n        transformFn: function transformFn(scale) {\n          return \"scale(\".concat(scale, \")\");\n        },\n        a11yAttributes: {\n          'aria-describedby': dataTarget.key\n        }\n      }));\n    });\n    return shapeContainerPath;\n  }\n};\n/**\n * Returns the amount of shapes within a shape container\n *\n * @private\n * @param {Selection} shapeContainerPath - d3 path for label shape container\n * @returns {number} Amount of svg's in the shape container\n */\nvar getShapeContainerSize = function getShapeContainerSize(shapeContainerPath) {\n  return shapeContainerPath.selectAll('svg').size();\n};\n/**\n * Translates Y Axis label shape container to correct position. Typically this is\n * to the middle of the axis.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Selection} shapeContainerPath - d3 path for label shape container\n * @returns {Selection} d3 path for label shape container\n */\nvar translateYAxisLabelShapeContainer = function translateYAxisLabelShapeContainer(config, shapeContainerPath) {\n  return shapeContainerPath.transition().call(_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getYAxisLabelShapeXPosition)(config), \", \").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getYAxisLabelShapeYPosition)(config, getShapeContainerSize(shapeContainerPath)), \") rotate(\").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getRotationForAxis)(_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y_AXIS), \")\"));\n};\n/**\n * Translates Y2 Axis label shape container to correct position. Typically this is\n * to the middle of the axis. The values are shown in reverse direction\n * Rotate is -90 deg\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Selection} shapeContainerPath - d3 path for label shape container\n * @returns {Selection} d3 path for label shape container\n */\nvar translateY2AxisLabelShapeContainer = function translateY2AxisLabelShapeContainer(config, shapeContainerPath) {\n  return shapeContainerPath.transition().call(_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getY2AxisLabelShapeXPosition)(config), \", \").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getY2AxisLabelShapeYPosition)(config, getShapeContainerSize(shapeContainerPath)), \") rotate(\").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getRotationForAxis)(_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y2_AXIS), \")\"));\n};\n/**\n * Returns the d3 html element after appending axis label shape group for Y Axis\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Selection} canvasPath - d3 html element\n * @returns {Selection} d3 html element\n */\nvar buildYAxisLabelShapeContainer = function buildYAxisLabelShapeContainer(config, canvasPath) {\n  var path = canvasPath.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisLabelYShapeContainer, true);\n  path.attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getYAxisLabelShapeXPosition)(config), \", \").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getYAxisLabelShapeYPosition)(config, getShapeContainerSize(path)), \")\"));\n  translateYAxisLabelShapeContainer(config, path);\n  return path;\n};\n/**\n * Returns the d3 html element after appending axis label shape group for Y2 axis\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Selection} canvasPath - d3 html element\n * @returns {Selection} d3 html element\n */\nvar buildY2AxisLabelShapeContainer = function buildY2AxisLabelShapeContainer(config, canvasPath) {\n  var path = canvasPath.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].axisLabelY2ShapeContainer, true);\n  path.attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getY2AxisLabelShapeXPosition)(config), \", \").concat((0,_axis__WEBPACK_IMPORTED_MODULE_4__.getY2AxisLabelShapeYPosition)(config, getShapeContainerSize(path)), \")\"));\n  translateY2AxisLabelShapeContainer(config, path);\n  return path;\n};\n\n/**\n * Translates all the shapes within the container to space correct beside each other\n * The amount of spacing is determined by constants.BASE_LABEL_ICON_SPACING\n *\n * @private\n * @param {Selection} shapeContainerPath - d3 html element\n * @returns {Selection} d3 html element containing the label shape container with\n * @param {object} config - config object derived from input JSON\n * correctly placed shapes\n */\nvar translateAllLabelShapeItem = function translateAllLabelShapeItem(shapeContainerPath, config) {\n  return shapeContainerPath.selectAll('svg').transition().call(_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].d3Transition(config.settingsDictionary.transition)).each(function (data, index) {\n    _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('x', function () {\n      return _constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].BASE_LABEL_ICON_SPACING * index;\n    });\n  });\n};\n/**\n * Creates a shape and adds it to the label container - Y or Y2 axes.\n * This only places the shapes, we need to call translate separately\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {Array} dataTarget - Data points\n * @param {Selection} shapeContainerPath - d3 html element of label item\n * @returns {undefined} - returns nothing\n */\nvar prepareLabelShapeItem = function prepareLabelShapeItem(config, dataTarget, shapeContainerPath) {\n  if (dataTarget.label && dataTarget.label.display && shapeContainerPath) {\n    loadLabelShape(shapeContainerPath, dataTarget);\n    translateAllLabelShapeItem(shapeContainerPath, config);\n  }\n};\n/**\n * Removes the label item shape from label shapes container in the graph\n *\n * @private\n * @param {Selection} shapeContainerPath - d3 svg object for label shape container\n * @param {object} dataTarget - Data points object\n * @param {object} config - config object derived from input JSON\n * @returns {undefined} - returns nothing\n */\nvar removeLabelShapeItem = function removeLabelShapeItem(shapeContainerPath, dataTarget, config) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].notEmpty(shapeContainerPath)) {\n    (0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.d3RemoveElement)(shapeContainerPath, \"svg[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n    translateAllLabelShapeItem(shapeContainerPath, config);\n  }\n};\n/**\n * Translates the shape container after the shape items are loaded. This positions\n * it correctly to the center of the graph.\n * This is only for the container and not for the positioning the shapes within.\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {object} shapeContainerPath - d3 svg object for label shape container\n * @returns {undefined} - returns nothing\n */\nvar translateLabelShapeContainer = function translateLabelShapeContainer(config, shapeContainerPath) {\n  if ((0,_axis__WEBPACK_IMPORTED_MODULE_4__.hasY2Axis)(config.axis) && _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].notEmpty(shapeContainerPath)) {\n    translateYAxisLabelShapeContainer(config, shapeContainerPath[_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y_AXIS]);\n    translateY2AxisLabelShapeContainer(config, shapeContainerPath[_constants__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Y2_AXIS]);\n  }\n};\n\n/**\n * Creates div element for popup tooltip\n */\nvar createTooltipDiv = function createTooltipDiv() {\n  _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select('body').append('div').attr('id', _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip).style('display', 'none').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip, true);\n};\n\n/**\n * Removes popup tooltip div element\n */\nvar destroyTooltipDiv = function destroyTooltipDiv() {\n  if (document.querySelector(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip))) {\n    var element = document.querySelector(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].labelPopupTooltip));\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n};\n\n/**\n * Update shapes in y and y2 axes during reflow.\n *\n * @private\n * @param {object} graph - Graph instance\n * @param {object} graphData - Graph data\n * @param {object} control - data instance\n */\nvar updateShapesDuringReflow = function updateShapesDuringReflow(graph, graphData, control) {\n  removeLabelShapeItem(graph.axesLabelShapeGroup[control.config.yAxis], control.dataTarget, graph.config);\n  if (!_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(graphData.values)) {\n    prepareLabelShapeItem(graph.config, control.dataTarget, graph.axesLabelShapeGroup[control.config.yAxis]);\n  }\n};\n\n/**\n * @enum {Function}\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/label.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/legend.js":
/*!*********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/legend.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLegend: function() { return /* binding */ createLegend; },\n/* harmony export */   getDefaultLegendOptions: function() { return /* binding */ getDefaultLegendOptions; },\n/* harmony export */   getLegendPadding: function() { return /* binding */ getLegendPadding; },\n/* harmony export */   isLegendSelected: function() { return /* binding */ isLegendSelected; },\n/* harmony export */   legendClickHandler: function() { return /* binding */ legendClickHandler; },\n/* harmony export */   legendHoverHandler: function() { return /* binding */ legendHoverHandler; },\n/* harmony export */   loadLegendItem: function() { return /* binding */ loadLegendItem; },\n/* harmony export */   loadPieLegendItem: function() { return /* binding */ loadPieLegendItem; },\n/* harmony export */   reflowLegend: function() { return /* binding */ reflowLegend; },\n/* harmony export */   removeLegendItem: function() { return /* binding */ removeLegendItem; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controls/Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core */ \"./packages/carbon-graphs/src/js/core/index.js\");\n/* harmony import */ var _core_Shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/Shape */ \"./packages/carbon-graphs/src/js/core/Shape/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n/* harmony import */ var _core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/BaseConfig */ \"./packages/carbon-graphs/src/js/core/BaseConfig/index.js\");\n/* harmony import */ var _core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/BaseConfig/helper */ \"./packages/carbon-graphs/src/js/core/BaseConfig/helper.js\");\n/**\n * @module legend\n * @alias module:legend\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Validates legend label\n *\n * @private\n * @throws {module:errors.THROW_MSG_LEGEND_LABEL_NOT_PROVIDED}\n * @throws {module:errors.THROW_MSG_LEGEND_LABEL_FORMAT_NOT_PROVIDED}\n * @param {object} label - label object\n * @returns {undefined} returns nothing\n */\nvar validateLegendLabel = function validateLegendLabel(label) {\n  if (!label) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_LEGEND_LABEL_NOT_PROVIDED);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isDefined(label.format) && !_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(label.format)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_5__[\"default\"].THROW_MSG_LEGEND_LABEL_FORMAT_NOT_PROVIDED);\n  }\n};\n/**\n * Returns the sanitized legend item display string\n *\n * @private\n * @param {string} text - legend display string\n * @returns {string} Sanitized text\n */\nvar getText = function getText(text) {\n  return _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].sanitize(text);\n};\n/**\n * Hide legend when legend item has no data and showElement is set to false\n *\n * @private\n * @param {object} input item object processed from the input JSON\n * @returns {string} returns \"none\" if legend is to be hidden otherwise returns empty string\n */\nvar legendDisplayStyle = function legendDisplayStyle(input) {\n  return input.legendOptions && input.legendOptions.showElement === false && _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmptyArray(input.values) ? 'none' : '';\n};\n/**\n * Creates an icon in the legend button\n *\n * @private\n * @param {object} buttonPath - d3 svg object\n * @param {object} input - input item object processed from the input JSON\n * @returns {object} returns the d3 element path for the legend\n */\nvar createLegendIcon = function createLegendIcon(buttonPath, input) {\n  return buttonPath.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_2__.Shape((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getShapeForTarget)(input)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n      svgClassNames: input.legendOptions && input.legendOptions.showLine ? _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemIconWithLine : _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemIcon,\n      svgStyles: \"fill: \".concat((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getColorForTarget)(input), \";\")\n    }), true);\n  });\n};\n/**\n * Creates a line in the legend button\n *\n * @private\n * @param {object} buttonPath - d3 svg object\n * @param {object} input - input item object processed from the input JSON\n */\nvar createLegendLine = function createLegendLine(buttonPath, input) {\n  var svg = buttonPath.append('svg').classed(input.legendOptions.showShape ? _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemLineWithIcon : _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemLine, true);\n  svg.append('line') // creating white line\n  .attr('x2', _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_LEGEND_LINE_WIDTH).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemWhiteLine, true);\n  svg.append('line').attr('x1', 1).attr('x2', input.legendOptions.showShape ? _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_LEGEND_LINE_WIDTH_WITH_SYMBOL - 1 : _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].DEFAULT_LEGEND_LINE_WIDTH - 1).attr('y1', _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_LINE_POSITION).attr('y2', _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_LINE_POSITION).attr('style', \"stroke: \".concat((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getColorForTarget)(input), \";\\n            stroke-dasharray: \").concat(input.legendOptions.style.strokeDashArray, \";\\n            stroke-width: 1px;\"));\n};\n/**\n * Creates legend button content based on legend options\n *\n * @private\n * @param {object} buttonPath - d3 svg object\n * @param {object} input - input item object processed from the input JSON\n */\nvar processLegendOptions = function processLegendOptions(buttonPath, input) {\n  if (input.legendOptions) {\n    // Create a legend icon only if the showShape is true\n    if ((input.showShapes || input.showShapes === undefined) && input.legendOptions.showShape) {\n      createLegendIcon(buttonPath, input);\n    }\n    if (input.legendOptions.showLine) {\n      createLegendLine(buttonPath, input);\n    }\n  } else {\n    createLegendIcon(buttonPath, input);\n  }\n};\n/**\n * Loads the legend items. The values are taken from the Labels property of the input JSON\n * The click and the hover events are only registered when there are datapoints matching the\n * unique ids or have the isDisabled flag turned off.\n *\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @param {object} t - input item object processed from the input JSON\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} eventHandlers - Callback function object executed when legend item is clicked or hovered.\n * Contains click and hover handlers as object property\n * @returns {object} returns the d3 element path for the legend\n */\nvar loadLegendItem = function loadLegendItem(legendSVG, t, config, eventHandlers) {\n  if (!_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(eventHandlers.clickHandler)) {\n    throw new Error('Invalid Argument: eventHandlers needs a clickHandler callback function.');\n  }\n  if (!_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isFunction(eventHandlers.hoverHandler)) {\n    throw new Error('Invalid Argument: eventHandlers needs a hoverHandler callback function.');\n  }\n  validateLegendLabel(t.label);\n  var text = getText(t.label.display);\n  var index = config.shownTargets.indexOf(t.key);\n  var shouldForceDisableLegendItem = !!t.label.isDisabled || _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmptyArray(t.values);\n  var itemPath = legendSVG.append('li').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItem, true).attr('aria-current', shouldForceDisableLegendItem || index > -1).attr('aria-disabled', shouldForceDisableLegendItem).style('display', legendDisplayStyle(t)).attr('role', 'listitem').attr('aria-labelledby', text).attr('aria-describedby', t.key).style('margin', config.legendPadding.hasCustomLegendPadding && 0).style('padding', \"\".concat(config.legendPadding.top, \"px \").concat(config.legendPadding.right, \"px \").concat(config.legendPadding.bottom, \"px \").concat(config.legendPadding.left, \"px\"));\n  if (!shouldForceDisableLegendItem && index > -1) {\n    itemPath.on('click', function () {\n      return eventHandlers.clickHandler(this, t);\n    }).on('mouseenter', function () {\n      return eventHandlers.hoverHandler(t, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    }).on('mouseleave', function () {\n      return eventHandlers.hoverHandler(t, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_EXIT);\n    });\n  }\n  var buttonPath = itemPath.append('button').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemBtn, true).attr('title', text).attr('tabindex', shouldForceDisableLegendItem ? -1 : 0).append('span').attr('class', _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemSpan);\n  processLegendOptions(buttonPath, t);\n  itemPath.append('label').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemText, true).attr('tabindex', -1).text(text);\n  return legendSVG;\n};\n\n/**\n * Removes the legend item from legend SVG in the graph\n *\n * @param {object} legendSVG - d3 svg object\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 svg object\n */\nvar removeLegendItem = function removeLegendItem(legendSVG, dataTarget) {\n  return (0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.d3RemoveElement)(legendSVG, \"li[aria-describedby=\\\"\".concat(dataTarget.key, \"\\\"]\"));\n};\n/**\n * Creates the legend item list and appends into the container. The container consists of\n * the canvas which houses the graph itself, and the legend <ul> which contains the list of data points labels and\n * their respective shapes.\n * Only if showLegend is enabled.\n *\n * @param {object} config - Graph config object derived from input JSON\n * @param {object} container - d3 Container svg\n * @returns {object} - d3 svg object\n */\nvar createLegend = function createLegend(config, container) {\n  return container.append('ul').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legend, true).attr('role', 'list').style('flex-direction', config.bindLegendTo && 'column');\n};\n/**\n * Returns a boolean after checking the attribute `aria-current`.\n *\n * @param {HTMLElement} target - d3 svg object\n * @returns {boolean} - returns boolean\n */\nvar isLegendSelected = function isLegendSelected(target) {\n  return target.attr('aria-current') !== 'true';\n};\n/**\n * Handler that will need to be called when a legend item is clicked along\n * with any other operations that will be need to taken care of by the parent\n * control.\n *\n * @param {HTMLElement} element - d3 element of the legend item clicked\n * @returns {object} - d3 svg object\n */\nvar legendClickHandler = function legendClickHandler(element) {\n  var target = _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(element);\n  return target.attr('aria-current', isLegendSelected(target));\n};\n/**\n * Hover handler for legend items.\n *\n * @param {Array} shownTargets - Targets/data sets that are currently displayed in graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - Data points set unique key\n * @param {string} hoverState - state of mouse hover => enter or leave\n * @param {Array} [additionalHandlers] - Additional set of handlers that consumers can execute on\n * top of the base hover handler\n * @returns {undefined} - returns nothing\n */\nvar legendHoverHandler = function legendHoverHandler(shownTargets, canvasSVG, key, hoverState) {\n  var additionalHandlers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  // Blur everything except the item hovered\n  shownTargets.filter(function (target) {\n    return target !== key;\n  }).forEach(function (k) {\n    // All Points\n    canvasSVG.selectAll(\"svg[aria-describedby=\\\"\".concat(k, \"\\\"]\")).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    // All Lines\n    canvasSVG.selectAll(\"path[aria-describedby=\\\"\".concat(k, \"\\\"]\")).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].pairedLine)).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\"rect[aria-describedby=\\\"\".concat(k, \"\\\"]\")).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].barGoalLine, \"[aria-describedby=\\\"region_\").concat(k, \"\\\"]\")).attr('aria-hidden', hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    canvasSVG.selectAll(\"[aria-describedby=\\\"text_label_\".concat(k, \"\\\"]\")).classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].blur, hoverState === _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].notEmpty(additionalHandlers)) {\n      additionalHandlers.forEach(function (fn) {\n        return fn(shownTargets, canvasSVG, key, hoverState, k);\n      });\n    }\n  });\n};\n/**\n * Constructs a legend text based on the display string, value.\n * If formatter function is provided by the consumer then that function will be called.\n *\n * @private\n * @param {string} display - legend item display string\n * @param {number} value - pie slice value\n * @param {Function} format - formatter callback function provided by the consumer\n * @returns {string} - A string that will be used in the legend item\n */\nvar getPieLegendText = function getPieLegendText(display, value, format) {\n  if (format) {\n    return format(display, value);\n  }\n  return \"\".concat(getText(display), \": \").concat(value);\n};\n/**\n * Pie chart legend items are non-clickable and they react only to hover or click\n * performed on any of a slice in pie chart itself or hovered over a legend item.\n *\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @param {object} dataTarget - input item object processed from the input JSON\n * @param {Function} hoverHandler - Callback function to be called when hovered over the legend item\n * @param {object} config - Graph config object derived from input JSON\n * @returns {undefined} returns nothing\n */\nvar loadPieLegendItem = function loadPieLegendItem(legendSVG, dataTarget, _ref, config) {\n  var hoverHandler = _ref.hoverHandler;\n  validateLegendLabel(dataTarget.label);\n  var text = getPieLegendText(dataTarget.label.display, dataTarget.value, dataTarget.label.format);\n  var itemPath = legendSVG.append('li').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].pieLegendItem, true).attr('role', 'listitem').attr('tabindex', 0).attr('aria-labelledby', text).attr('aria-describedby', dataTarget.key).style('margin', config.legendPadding.hasCustomLegendPadding && 0).style('padding', \"\".concat(config.legendPadding.top, \"px \").concat(config.legendPadding.right, \"px \").concat(config.legendPadding.bottom, \"px \").concat(config.legendPadding.left, \"px\"));\n  itemPath.append(function () {\n    return new _core__WEBPACK_IMPORTED_MODULE_2__.Shape((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getShapeForTarget)(dataTarget)).getShapeElement((0,_core_Shape__WEBPACK_IMPORTED_MODULE_3__.getDefaultSVGProps)({\n      svgClassNames: _styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].pieLegendItemIcon,\n      svgStyles: \"fill: \".concat((0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.getColorForTarget)(dataTarget), \";\")\n    }), true);\n  });\n  itemPath.append('label').classed(_styles__WEBPACK_IMPORTED_MODULE_6__[\"default\"].legendItemText, true).text(text);\n  itemPath.on('mouseenter', function () {\n    return hoverHandler(dataTarget, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n  }).on('mouseleave', function () {\n    return hoverHandler(dataTarget, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_EXIT);\n  });\n};\n/**\n * Validate and return the legendOptions property\n *\n * @param {object} graphConfig - config object of Graph API\n * @param {object} dataTarget - Data points object\n * @returns {object} legendOptions - legendOptions for the legend\n */\nvar getDefaultLegendOptions = function getDefaultLegendOptions(graphConfig, dataTarget) {\n  var legendOptions = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(dataTarget.legendOptions, {\n    showShape: true,\n    showLine: dataTarget.showShapes === false,\n    showElement: true\n  });\n  legendOptions.showShape = dataTarget.showShapes !== false ? (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(legendOptions.showShape, true) : false;\n  legendOptions.showLine = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(legendOptions.showLine, false);\n  legendOptions.showElement = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(legendOptions.showElement, true);\n  legendOptions.style = (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(legendOptions.style, {});\n  if (legendOptions.style.strokeDashArray) {\n    legendOptions.style = {\n      strokeDashArray: (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_9__.getStrokeDashArray)(legendOptions.style)\n    };\n  } else if (dataTarget.showShapes === false) {\n    legendOptions.style.strokeDashArray = dataTarget.style.strokeDashArray;\n  } else {\n    legendOptions.style = {\n      strokeDashArray: (0,_core_BaseConfig_helper__WEBPACK_IMPORTED_MODULE_9__.getStrokeDashArray)(legendOptions.style)\n    };\n  }\n  return legendOptions;\n};\n/**\n * Helper function to set the right legend padding values based on input JSON.\n *\n * @param {object} config - config which needs to be updated\n * @param {object} inputLegendPadding - input legend padding provided via input JSON.\n * @returns {object} - padding for Legend\n */\nvar getLegendPadding = function getLegendPadding(config, inputLegendPadding) {\n  // If legendPadding is provided, update the config object with the provided values, else update it with the default constants\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isDefined(config.legendPadding)) {\n    return {\n      top: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(inputLegendPadding.top, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.top),\n      bottom: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(inputLegendPadding.bottom, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.bottom),\n      right: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(inputLegendPadding.right, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.right),\n      left: (0,_core_BaseConfig__WEBPACK_IMPORTED_MODULE_8__.getDefaultValue)(inputLegendPadding.left, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.left),\n      hasCustomLegendPadding: true\n    };\n  }\n  return {\n    top: _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.top,\n    bottom: _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.bottom,\n    right: _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.right,\n    left: _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].LEGEND_PADDING.left,\n    hasCustomLegendPadding: false\n  };\n};\n\n/**\n * Updates the legend during reflow.\n *\n * @private\n * @param {object} legendSVG - d3 element path of the legend from the parent control\n * @param {object} legend - input item object processed from the input JSON\n * @param {object} graph - Graph object derived from input JSON\n * @param {object} eventHandlers - Callback function object executed when legend item is clicked or hovered.\n * Contains click and hover handlers as object property\n * @returns {object} returns the d3 element path for the legend\n */\nvar reflowLegend = function reflowLegend(legendSVG, legend, graph, eventHandlers) {\n  var index = graph.config.shownTargets.indexOf(legend.key);\n  var shouldForceDisableLegendItem = !!legend.label.isDisabled || _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmptyArray(legend.values);\n  var itemPath = legendSVG.select(\"li[aria-describedby=\\\"\".concat(legend.key, \"\\\"]\")).attr('aria-current', shouldForceDisableLegendItem || index > -1).attr('aria-disabled', shouldForceDisableLegendItem).style('display', legendDisplayStyle(legend));\n  if (!shouldForceDisableLegendItem) {\n    // set the click and hover handler, when legend have values\n    itemPath.on('click', function () {\n      return eventHandlers.clickHandler(this, legend);\n    }).on('mouseenter', function () {\n      return eventHandlers.hoverHandler(legend, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_ENTER);\n    }).on('mouseleave', function () {\n      return eventHandlers.hoverHandler(legend, _constants__WEBPACK_IMPORTED_MODULE_4__[\"default\"].HOVER_EVENT.MOUSE_EXIT);\n    });\n  } else {\n    // set the click and hover handler to null, when legend doesnot have any value\n    itemPath.on('click', function () {\n      return null;\n    }).on('mouseenter', function () {\n      return null;\n    }).on('mouseleave', function () {\n      return null;\n    });\n  }\n  return legendSVG;\n};\n\n/**\n * @enum {Function}\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/legend.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/localeFormat.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/localeFormat.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultDateFormat: function() { return /* binding */ getDefaultDateFormat; },\n/* harmony export */   getFrenchDateFormat: function() { return /* binding */ getFrenchDateFormat; },\n/* harmony export */   getGermanDateFormat: function() { return /* binding */ getGermanDateFormat; },\n/* harmony export */   getSwedishDateFormat: function() { return /* binding */ getSwedishDateFormat; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n\n\n/**\n * Creates format for locales like Spanish(es_ES), Portuguese(pt_BR) and Dutch(nl_NL).\n *\n * @private\n * @param {object} date - date object which are going to assign for axis ticks.\n * @returns {string} format to be displayed on axis.\n */\nvar getDefaultDateFormat = function getDefaultDateFormat(date) {\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeSecond(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('.%L')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMinute(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat(':%S')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeHour(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I:%M')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeDay(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I %p')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMonth(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeWeek(date) < date ? _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%a %d')(date) : _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%d %b')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeYear(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%B')(date);\n  }\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%Y')(date);\n};\n\n/**\n * Creates format for German(de_DE) locale.\n *\n * @private\n * @param {object} date - date object which are going to assign for axis ticks.\n * @returns {string} format to be displayed on axis.\n */\nvar getGermanDateFormat = function getGermanDateFormat(date) {\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeSecond(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('.%L')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMinute(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat(':%S')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeHour(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I:%M')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeDay(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I %p')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMonth(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeWeek(date) < date ? _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%a %d.')(date) : _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%d. %b')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeYear(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%B')(date);\n  }\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%Y')(date);\n};\n\n/**\n * Creates format for Swedish(sv_SE) locale.\n *\n * @private\n * @param {object} date - date object which are going to assign for axis ticks.\n * @returns {string} format to be displayed on axis.\n */\nvar getSwedishDateFormat = function getSwedishDateFormat(date) {\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeSecond(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('.%L')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMinute(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat(':%S')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeHour(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I:%M')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeDay(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I %p')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMonth(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeWeek(date) < date ? _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%a %_d')(date) : _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%_d %b')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeYear(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%B')(date);\n  }\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%Y')(date);\n};\n\n/**\n * Creates format for French(fr_FR) locale.\n *\n * @private\n * @param {object} date - date object which are going to assign for axis ticks.\n * @returns {string} format to be displayed on axis.\n */\nvar getFrenchDateFormat = function getFrenchDateFormat(date) {\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeSecond(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('.%L')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMinute(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat(':%S')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeHour(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I:%M')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeDay(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%I %p')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeMonth(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeWeek(date) < date ? _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%a %_d')(date) : _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%d %b')(date);\n  }\n  if (_d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeYear(date) < date) {\n    return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%B')(date);\n  }\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.timeFormat('%Y')(date);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/localeFormat.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/paddingUtils.js":
/*!***************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/paddingUtils.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @module paddingUtils\n * @alias module:paddingUtils\n */\n\n/**\n * Calculates the amount of width available for the graph without the padding\n * in the container. This is so that the consumer can position the graph in the page\n * however they want.\n *\n * @private\n * @param {Selection} d3Element - d3 element of the graph container provided by consumer\n * @returns {number} Total box sizing parameters for the container - margin and padding\n */\nvar getElementBoxSizingParameters = function getElementBoxSizingParameters(d3Element) {\n  var htmlElement = d3Element.node();\n  var styles = window.getComputedStyle(htmlElement);\n  var padding = parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n  var margin = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  return margin + padding;\n};\n\n/**\n * @enum {Function}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = (getElementBoxSizingParameters);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3BhZGRpbmdVdGlscy5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsNkJBQTZCLEdBQUcsU0FBaENBLDZCQUE2QkEsQ0FBSUMsU0FBUyxFQUFLO0VBQ25ELElBQU1DLFdBQVcsR0FBR0QsU0FBUyxDQUFDRSxJQUFJLENBQUMsQ0FBQztFQUNwQyxJQUFNQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUNKLFdBQVcsQ0FBQztFQUNuRCxJQUFNSyxPQUFPLEdBQUdDLFVBQVUsQ0FBQ0osTUFBTSxDQUFDSyxXQUFXLENBQUMsR0FBR0QsVUFBVSxDQUFDSixNQUFNLENBQUNNLFlBQVksQ0FBQztFQUNoRixJQUFNQyxNQUFNLEdBQUdILFVBQVUsQ0FBQ0osTUFBTSxDQUFDUSxVQUFVLENBQUMsR0FBR0osVUFBVSxDQUFDSixNQUFNLENBQUNTLFdBQVcsQ0FBQztFQUM3RSxPQUFPRixNQUFNLEdBQUdKLE9BQU87QUFDekIsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSwrREFBZVAsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVycmEtZ3JhcGhzLy4vcGFja2FnZXMvY2FyYm9uLWdyYXBocy9zcmMvanMvaGVscGVycy9wYWRkaW5nVXRpbHMuanM/YjJlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgcGFkZGluZ1V0aWxzXG4gKiBAYWxpYXMgbW9kdWxlOnBhZGRpbmdVdGlsc1xuICovXG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgYW1vdW50IG9mIHdpZHRoIGF2YWlsYWJsZSBmb3IgdGhlIGdyYXBoIHdpdGhvdXQgdGhlIHBhZGRpbmdcbiAqIGluIHRoZSBjb250YWluZXIuIFRoaXMgaXMgc28gdGhhdCB0aGUgY29uc3VtZXIgY2FuIHBvc2l0aW9uIHRoZSBncmFwaCBpbiB0aGUgcGFnZVxuICogaG93ZXZlciB0aGV5IHdhbnQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U2VsZWN0aW9ufSBkM0VsZW1lbnQgLSBkMyBlbGVtZW50IG9mIHRoZSBncmFwaCBjb250YWluZXIgcHJvdmlkZWQgYnkgY29uc3VtZXJcbiAqIEByZXR1cm5zIHtudW1iZXJ9IFRvdGFsIGJveCBzaXppbmcgcGFyYW1ldGVycyBmb3IgdGhlIGNvbnRhaW5lciAtIG1hcmdpbiBhbmQgcGFkZGluZ1xuICovXG5jb25zdCBnZXRFbGVtZW50Qm94U2l6aW5nUGFyYW1ldGVycyA9IChkM0VsZW1lbnQpID0+IHtcbiAgY29uc3QgaHRtbEVsZW1lbnQgPSBkM0VsZW1lbnQubm9kZSgpO1xuICBjb25zdCBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShodG1sRWxlbWVudCk7XG4gIGNvbnN0IHBhZGRpbmcgPSBwYXJzZUZsb2F0KHN0eWxlcy5wYWRkaW5nTGVmdCkgKyBwYXJzZUZsb2F0KHN0eWxlcy5wYWRkaW5nUmlnaHQpO1xuICBjb25zdCBtYXJnaW4gPSBwYXJzZUZsb2F0KHN0eWxlcy5tYXJnaW5MZWZ0KSArIHBhcnNlRmxvYXQoc3R5bGVzLm1hcmdpblJpZ2h0KTtcbiAgcmV0dXJuIG1hcmdpbiArIHBhZGRpbmc7XG59O1xuXG4vKipcbiAqIEBlbnVtIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZ2V0RWxlbWVudEJveFNpemluZ1BhcmFtZXRlcnM7XG4iXSwibmFtZXMiOlsiZ2V0RWxlbWVudEJveFNpemluZ1BhcmFtZXRlcnMiLCJkM0VsZW1lbnQiLCJodG1sRWxlbWVudCIsIm5vZGUiLCJzdHlsZXMiLCJ3aW5kb3ciLCJnZXRDb21wdXRlZFN0eWxlIiwicGFkZGluZyIsInBhcnNlRmxvYXQiLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsIm1hcmdpbiIsIm1hcmdpbkxlZnQiLCJtYXJnaW5SaWdodCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/paddingUtils.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/region.js":
/*!*********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/region.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areRegionsIdentical: function() { return /* binding */ areRegionsIdentical; },\n/* harmony export */   createRegion: function() { return /* binding */ createRegion; },\n/* harmony export */   createRegionContainer: function() { return /* binding */ createRegionContainer; },\n/* harmony export */   createValueRegion: function() { return /* binding */ createValueRegion; },\n/* harmony export */   hideAllRegions: function() { return /* binding */ hideAllRegions; },\n/* harmony export */   isSingleTargetDisplayed: function() { return /* binding */ isSingleTargetDisplayed; },\n/* harmony export */   processRegions: function() { return /* binding */ processRegions; },\n/* harmony export */   regionLegendHoverHandler: function() { return /* binding */ regionLegendHoverHandler; },\n/* harmony export */   removeRegion: function() { return /* binding */ removeRegion; },\n/* harmony export */   showHideRegion: function() { return /* binding */ showHideRegion; },\n/* harmony export */   translateRegion: function() { return /* binding */ translateRegion; },\n/* harmony export */   validateRegion: function() { return /* binding */ validateRegion; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n/* harmony import */ var _controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controls/Graph/helpers/helpers */ \"./packages/carbon-graphs/src/js/controls/Graph/helpers/helpers.js\");\n/* harmony import */ var _axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./axis */ \"./packages/carbon-graphs/src/js/helpers/axis.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors */ \"./packages/carbon-graphs/src/js/helpers/errors.js\");\n/* harmony import */ var _styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./styles */ \"./packages/carbon-graphs/src/js/helpers/styles.js\");\n/* harmony import */ var _transformUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transformUtils */ \"./packages/carbon-graphs/src/js/helpers/transformUtils.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @module region\n * @alias module:region\n */\n\n/**\n * Validates the input object provided for the rendering\n * regions in graph\n *\n * @private\n * @param {object} region - Region to be shown within graph\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @returns {undefined} - returns nothing\n */\nvar validateRegion = function validateRegion(region, targetAxis) {\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(region)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_EMPTY);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(region.start) && _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(region.end)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_START_END_MISSING);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].notEmpty(region.axis) && (region.axis !== _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS && region.axis !== _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y2_AXIS || region.axis !== targetAxis)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_INVALID_AXIS_PROVIDED);\n  }\n  if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(region.axis) && _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS !== targetAxis) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_INVALID_AXIS_PROVIDED);\n  }\n  if (region.start && !_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isNumber(region.start) || region.end && !_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isNumber(region.end)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_INVALID_VALUE_TYPE_PROVIDED);\n  }\n  if (Number(region.start) > Number(region.end)) {\n    throw new Error(_errors__WEBPACK_IMPORTED_MODULE_4__[\"default\"].THROW_MSG_REGION_START_MORE_END);\n  }\n};\n/**\n * Removes region from region group SVG in the graph\n *\n * @private\n * @param {object} regionGroupSVG - d3 svg object\n * @param {object} dataTarget - Data points object\n * @returns {object} - d3 svg object\n */\nvar removeRegion = function removeRegion(regionGroupSVG, dataTarget) {\n  return (0,_controls_Graph_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__.d3RemoveElement)(regionGroupSVG, \"[aria-describedby=\\\"region_\".concat(dataTarget.key, \"\\\"]\"), true);\n};\n/**\n * Creates container for regions to be rendered within.\n * Since regions are supposed to be rendered beneath grids,\n * we need to render them within a group. Since regions are part of\n * the content and not the graph in general, we cannot render them before rendering\n * the grids. Hence we are going to render a group when graph is rendered and then\n * when the content is ready to be rendered, we will side-load the regions along with\n * their respective unique ids\n *\n * @private\n * @param {object} config - config object derived from input JSON\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar createRegionContainer = function createRegionContainer(config, canvasSVG) {\n  return canvasSVG.append('g').classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].regionGroup, true);\n};\n/**\n * Returns the region axis or \"y\" as default\n *\n * @private\n * @param {object} region - Region to be shown within graph\n * @returns {string} Region axis or \"y\" as default\n */\nvar getRegionAxis = function getRegionAxis(region) {\n  return region.axis || _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n};\n/**\n * Returns the function which returns Y Axis Vertical position for Range\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {function(*=): number} Function which returns Y Axis Vertical position for Range\n */\nvar getYAxisRangePosition = function getYAxisRangePosition(scale, config) {\n  return function (bounds) {\n    return bounds.end ? (0,_transformUtils__WEBPACK_IMPORTED_MODULE_6__.round2Decimals)(scale[getRegionAxis(bounds)](bounds.end)) + (0,_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config) : (0,_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config);\n  };\n};\n/**\n * Returns the height for range based on Y Axes, start and end bounds\n * If start and end bounds arent provided then a \"region line\" number is returned with\n * height worth of padding top\n *\n * @private\n * @param {object} regionPath - d3 object of region svg\n * @param {object} bounds - Start and end values for region\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @returns {number} Height of the region for Y axes\n */\nvar getRegionHeight = function getRegionHeight(regionPath, bounds, scale, config) {\n  var graphHeight = config.height;\n  var upperBound = _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getNumber(regionPath.attr(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS));\n  var lowerBound = bounds.start ? (0,_transformUtils__WEBPACK_IMPORTED_MODULE_6__.round2Decimals)(scale[getRegionAxis(bounds)](bounds.start)) + (0,_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config) : graphHeight + (0,_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config);\n  // If start and end are the same then `padding.top` worth of height is\n  // applied to make it seem like a region line\n  return lowerBound - upperBound || _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].DEFAULT_REGION_LINE_STROKE_WIDTH;\n};\n/**\n * Creates regions based on input object provided. Region can be one or many.\n * Regions are rendered based on the content.\n * Criteria:\n * * Either start or end is mandatory.\n * * If start is not provided - 0 to end\n * * If end is not provided - start to INFINITY (end of the graph)\n * Color can be provided to identify the range.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} regionGroupSVG - d3 object of region group svg\n * @param {Array} regionList - List of regions to be shown within graph\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @returns {undefined} - returns nothing\n */\nvar createRegion = function createRegion(scale, config, regionGroupSVG, regionList, uniqueKey) {\n  var targetAxis = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n  regionList.forEach(function (item) {\n    validateRegion(item, targetAxis);\n    regionGroupSVG.append('rect').datum(item).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region, true).attr('aria-hidden', false).attr('aria-describedby', uniqueKey).attr('style', item.color ? \"fill: \".concat(item.color, \";\") : '').attr(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, (0,_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config)).attr(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisRangePosition(scale, config)(item)).attr('width', (0,_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisWidth)(config)).attr('height', function () {\n      return getRegionHeight(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), item, scale, config);\n    });\n  });\n};\n/**\n * Creates a d3 svg area\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @param {object} interpolationType Interpolation type property from line type or \"linear\"\n * @returns {object} d3 area object\n */\nvar createArea = function createArea(scale, targetAxis, interpolationType) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.area().curve(interpolationType).x(function (value) {\n    return scale.x(value.x);\n  }).y0(function (value) {\n    return scale[targetAxis](value.start);\n  }).y1(function (value) {\n    return scale[targetAxis](value.end);\n  });\n};\n\n/**\n * Creates regions based on region object provided in the value of the input object.\n * Regions are rendered based on the content.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} regionGroupSVG - d3 object of region group svg\n * @param {Array} regionList - List of regions to be shown within graph\n * @param {string} uniqueKey - unique id of the content loaded in graph\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @param {object} interpolationType Interpolation type property from line type or \"linear\"\n *\n * @returns {undefined} - returns nothing\n */\nvar createValueRegion = function createValueRegion(scale, config, regionGroupSVG, regionList, uniqueKey) {\n  var targetAxis = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n  var interpolationType = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : _constants__WEBPACK_IMPORTED_MODULE_3__.LINE_TYPE.LINEAR;\n  return regionList.forEach(function (region) {\n    return regionGroupSVG.append('g').attr('transform', \"translate(\".concat((0,_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config), \",\").concat((0,_axis__WEBPACK_IMPORTED_MODULE_2__.calculateVerticalPadding)(config), \")\")).append('path').attr('aria-describedby', uniqueKey).attr('aria-hidden', false).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region, true).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].valueRegion, region.values.length === 1).datum(region.values).attr('style', \"fill: \".concat(region.color, \"; \\n                stroke: \").concat(region.color, \";\")).attr('d', createArea(scale, targetAxis, interpolationType));\n  });\n};\n\n/**\n * Translates region. Moves the \"rect\" according the new scale generated on-resize.\n * Width and height are also flexed accordingly.\n *\n * @private\n * @param {object} scale - d3 scale taking into account the input parameters\n * @param {object} config - config object derived from input JSON\n * @param {object} regionGroupSVG - d3 object of region group\n * @param {string} targetAxis - Axis for which region needs to be shown\n * @param {boolean} isValueRegion - specify if it is a value region or not\n * @param {object} interpolationType Interpolation type property from line type or \"linear\"\n *\n * @returns {object} d3 svg path\n */\nvar translateRegion = function translateRegion(scale, config, regionGroupSVG) {\n  var targetAxis = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS;\n  var isValueRegion = arguments.length > 4 ? arguments[4] : undefined;\n  var interpolationType = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _constants__WEBPACK_IMPORTED_MODULE_3__.LINE_TYPE.LINEAR;\n  if (isValueRegion) {\n    return regionGroupSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('d', createArea(scale, targetAxis, interpolationType));\n  }\n  return regionGroupSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region)).attr(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].X_AXIS, (0,_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisXPosition)(config)).attr(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Y_AXIS, getYAxisRangePosition(scale, config)).transition().call(_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].d3Transition(config.settingsDictionary.transition)).attr('width', (0,_axis__WEBPACK_IMPORTED_MODULE_2__.getXAxisWidth)(config)).attr('height', function (d) {\n    return getRegionHeight(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this), d, scale, config);\n  });\n};\n\n/**\n * Check all the regions within a graph are same or not\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {boolean} - returns true is regions are same else false\n */\nvar areRegionsIdentical = function areRegionsIdentical(canvasSVG) {\n  var regions = canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region)).data();\n  var compare = regions[0];\n  return !regions.some(function (element) {\n    // If any one of the region is value region (i.e., an array) then we consider it as non-identical.\n    if (_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isArray(compare) || _utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isArray(element)) {\n      return true;\n    }\n    return compare.start !== element.start || compare.end !== element.end || compare.axis !== element.axis;\n  });\n};\n/**\n * Hides all the regions within a graph\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {object} d3 svg path\n */\nvar hideAllRegions = function hideAllRegions(canvasSVG) {\n  return canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region)).attr('aria-hidden', true);\n};\n/**\n * Hides/shows the region given the region path and unique identifier of the region\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - Data points set unique key\n * @param {boolean} shouldShow - true if enabled\n * @returns {object} d3 svg path\n */\nvar showHideRegion = function showHideRegion(canvasSVG, key, shouldShow) {\n  return canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region, \"[aria-describedby=\\\"\").concat(key, \"\\\"]\")).attr('aria-hidden', !shouldShow);\n};\n/**\n * Toggles region based on current display status for that region.\n *\n * @private\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {Array} keys - Data points set unique key\n * @returns {object} d3 svg path\n */\nvar toggleRegion = function toggleRegion(canvasSVG, keys) {\n  return keys.forEach(function (key) {\n    return canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region, \"[aria-describedby=\\\"region_\").concat(key, \"\\\"]\")).attr('aria-hidden', function () {\n      return !(_d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(this).attr('aria-hidden') === 'true');\n    });\n  });\n};\n/**\n * Checks if only 1 content item is present in the graph\n *\n * @private\n * @param {Array} graphTargets - List of all the items in the Graph\n * @param {Array} content - graph content\n * @returns {boolean} true if displayed targets is equal to 1, false otherwise\n */\nvar isSingleTargetDisplayed = function isSingleTargetDisplayed(graphTargets, content) {\n  var contentCount = 0;\n  content.forEach(function (element) {\n    contentCount += graphTargets.includes(element.dataTarget.key) && !_utils__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmptyArray(element.dataTarget.values) ? 1 : 0;\n  });\n  return contentCount === 1;\n};\n/**\n * Checks region for legend item click\n *\n * @private\n * @param { object } graphConfig - graph property needed to check the isRegionSame property\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar checkAllRegions = function checkAllRegions(graphConfig, canvasSVG) {\n  if (graphConfig.shownTargets.length > 1 && !graphConfig.shouldHideAllRegion && areRegionsIdentical(canvasSVG)) {\n    canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region)).attr('aria-hidden', false);\n  } else {\n    hideAllRegions(canvasSVG);\n  }\n};\n/**\n * Show/hide regions based on the following criteria:\n * * If more than 1 target is displayed -> Hide regions\n * * If only 1 target is displayed -> show the region using unique data set key\n *\n * @private\n * @param {object} graphContext - graph instance\n * @param {Array} graphContext.content - content\n * @param {object} config - Graph config object derived from input JSON\n * @param { Array } config.shownTargets - List of all the items in the Graph\n * @param { boolean } config.shouldHideAllRegion - returns true or false to hide or show regions\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @returns {undefined} - returns nothing\n */\nvar processRegions = function processRegions(_ref, _ref2, canvasSVG) {\n  var content = _ref.content;\n  var shownTargets = _ref2.shownTargets,\n    shouldHideAllRegion = _ref2.shouldHideAllRegion;\n  // eslint-disable-next-line no-unused-expressions\n  isSingleTargetDisplayed(shownTargets, content) ? toggleRegion(canvasSVG, shownTargets) : checkAllRegions({\n    shownTargets: shownTargets,\n    shouldHideAllRegion: shouldHideAllRegion\n  }, canvasSVG);\n};\n/**\n * Handler for show/hide region(s) when hovered over a legend item\n *\n * @private\n * @param {Array} shownTargets - Targets/data sets that are currently displayed in graph\n * @param {d3.selection} canvasSVG - d3 selection node of canvas svg\n * @param {string} key - Data points set unique key\n * @param {string} hoverState - state of mouse hover => enter or leave\n * @returns {undefined} - returns nothing\n */\nvar regionLegendHoverHandler = function regionLegendHoverHandler(shownTargets, canvasSVG, key, hoverState) {\n  var shouldShow = hoverState === _constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].HOVER_EVENT.MOUSE_ENTER && shownTargets.indexOf(key) > -1;\n  canvasSVG.selectAll(\".\".concat(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].region, \"[aria-describedby=\\\"region_\").concat(key, \"\\\"]\")).classed(_styles__WEBPACK_IMPORTED_MODULE_5__[\"default\"].regionHighlight, shouldShow);\n};\n\n/**\n * @enum {Function}\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/region.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/shapeSVG.js":
/*!***********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/shapeSVG.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSVGObject: function() { return /* binding */ getSVGObject; },\n/* harmony export */   getSVGObjectForEvent: function() { return /* binding */ getSVGObjectForEvent; }\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./packages/carbon-graphs/src/js/helpers/utils.js\");\n\n\n/**\n * Returns an object to create a svg circle for data point\n *\n * @param {object} shape - SHAPE object\n * @param {object} scaleFactor - Scale factor for datapoint\n * @returns {object} SVG Object\n */\nvar getSVGObject = function getSVGObject(shape, _ref) {\n  var posX = _ref.posX,\n    posY = _ref.posY,\n    scale = _ref.scale;\n  var d3Shape = _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deepClone(shape);\n  d3Shape.options.x = shape.options.x * posX;\n  d3Shape.options.y = shape.options.y * posY;\n  d3Shape.options.scale *= scale;\n  return d3Shape;\n};\n\n/**\n * Returns an object to create a svg circle for event data point\n *\n * @param {object} shape - SHAPE object\n * @param {object} eventShape - properties of event\n * @param {object} scaleFactor - Scale factor for datapoint\n * @returns {object} SVG Object\n */\nvar getSVGObjectForEvent = function getSVGObjectForEvent(shape, eventShape, _ref2) {\n  var posX = _ref2.posX,\n    posY = _ref2.posY,\n    scale = _ref2.scale;\n  var d3Shape = _utils__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deepClone(shape);\n  d3Shape.options.x = eventShape.x - posX * eventShape.scale;\n  d3Shape.options.y = eventShape.y - posY * eventShape.scale;\n  d3Shape.options.scale = eventShape.scale * scale;\n  return d3Shape;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3NoYXBlU1ZHLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0Qjs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSUMsS0FBSyxFQUFBQyxJQUFBLEVBQTRCO0VBQUEsSUFBeEJDLElBQUksR0FBQUQsSUFBQSxDQUFKQyxJQUFJO0lBQUVDLElBQUksR0FBQUYsSUFBQSxDQUFKRSxJQUFJO0lBQUVDLEtBQUssR0FBQUgsSUFBQSxDQUFMRyxLQUFLO0VBQ3JELElBQU1DLE9BQU8sR0FBR1AsOENBQUssQ0FBQ1EsU0FBUyxDQUFDTixLQUFLLENBQUM7RUFDdENLLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDQyxDQUFDLEdBQUdSLEtBQUssQ0FBQ08sT0FBTyxDQUFDQyxDQUFDLEdBQUdOLElBQUk7RUFDMUNHLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDRSxDQUFDLEdBQUdULEtBQUssQ0FBQ08sT0FBTyxDQUFDRSxDQUFDLEdBQUdOLElBQUk7RUFDMUNFLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDSCxLQUFLLElBQUlBLEtBQUs7RUFDOUIsT0FBT0MsT0FBTztBQUNoQixDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNSyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQW9CQSxDQUMvQlYsS0FBSyxFQUNMVyxVQUFVLEVBQUFDLEtBQUEsRUFFUDtFQUFBLElBRERWLElBQUksR0FBQVUsS0FBQSxDQUFKVixJQUFJO0lBQUVDLElBQUksR0FBQVMsS0FBQSxDQUFKVCxJQUFJO0lBQUVDLEtBQUssR0FBQVEsS0FBQSxDQUFMUixLQUFLO0VBRW5CLElBQU1DLE9BQU8sR0FBR1AsOENBQUssQ0FBQ1EsU0FBUyxDQUFDTixLQUFLLENBQUM7RUFDdENLLE9BQU8sQ0FBQ0UsT0FBTyxDQUFDQyxDQUFDLEdBQUdHLFVBQVUsQ0FBQ0gsQ0FBQyxHQUFHTixJQUFJLEdBQUdTLFVBQVUsQ0FBQ1AsS0FBSztFQUMxREMsT0FBTyxDQUFDRSxPQUFPLENBQUNFLENBQUMsR0FBR0UsVUFBVSxDQUFDRixDQUFDLEdBQUdOLElBQUksR0FBR1EsVUFBVSxDQUFDUCxLQUFLO0VBQzFEQyxPQUFPLENBQUNFLE9BQU8sQ0FBQ0gsS0FBSyxHQUFHTyxVQUFVLENBQUNQLEtBQUssR0FBR0EsS0FBSztFQUNoRCxPQUFPQyxPQUFPO0FBQ2hCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3NoYXBlU1ZHLmpzPzA5MGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMnO1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRvIGNyZWF0ZSBhIHN2ZyBjaXJjbGUgZm9yIGRhdGEgcG9pbnRcbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gc2hhcGUgLSBTSEFQRSBvYmplY3RcbiAqIEBwYXJhbSB7b2JqZWN0fSBzY2FsZUZhY3RvciAtIFNjYWxlIGZhY3RvciBmb3IgZGF0YXBvaW50XG4gKiBAcmV0dXJucyB7b2JqZWN0fSBTVkcgT2JqZWN0XG4gKi9cbmV4cG9ydCBjb25zdCBnZXRTVkdPYmplY3QgPSAoc2hhcGUsIHsgcG9zWCwgcG9zWSwgc2NhbGUgfSkgPT4ge1xuICBjb25zdCBkM1NoYXBlID0gdXRpbHMuZGVlcENsb25lKHNoYXBlKTtcbiAgZDNTaGFwZS5vcHRpb25zLnggPSBzaGFwZS5vcHRpb25zLnggKiBwb3NYO1xuICBkM1NoYXBlLm9wdGlvbnMueSA9IHNoYXBlLm9wdGlvbnMueSAqIHBvc1k7XG4gIGQzU2hhcGUub3B0aW9ucy5zY2FsZSAqPSBzY2FsZTtcbiAgcmV0dXJuIGQzU2hhcGU7XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRvIGNyZWF0ZSBhIHN2ZyBjaXJjbGUgZm9yIGV2ZW50IGRhdGEgcG9pbnRcbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gc2hhcGUgLSBTSEFQRSBvYmplY3RcbiAqIEBwYXJhbSB7b2JqZWN0fSBldmVudFNoYXBlIC0gcHJvcGVydGllcyBvZiBldmVudFxuICogQHBhcmFtIHtvYmplY3R9IHNjYWxlRmFjdG9yIC0gU2NhbGUgZmFjdG9yIGZvciBkYXRhcG9pbnRcbiAqIEByZXR1cm5zIHtvYmplY3R9IFNWRyBPYmplY3RcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFNWR09iamVjdEZvckV2ZW50ID0gKFxuICBzaGFwZSxcbiAgZXZlbnRTaGFwZSxcbiAgeyBwb3NYLCBwb3NZLCBzY2FsZSB9LFxuKSA9PiB7XG4gIGNvbnN0IGQzU2hhcGUgPSB1dGlscy5kZWVwQ2xvbmUoc2hhcGUpO1xuICBkM1NoYXBlLm9wdGlvbnMueCA9IGV2ZW50U2hhcGUueCAtIHBvc1ggKiBldmVudFNoYXBlLnNjYWxlO1xuICBkM1NoYXBlLm9wdGlvbnMueSA9IGV2ZW50U2hhcGUueSAtIHBvc1kgKiBldmVudFNoYXBlLnNjYWxlO1xuICBkM1NoYXBlLm9wdGlvbnMuc2NhbGUgPSBldmVudFNoYXBlLnNjYWxlICogc2NhbGU7XG4gIHJldHVybiBkM1NoYXBlO1xufTtcbiJdLCJuYW1lcyI6WyJ1dGlscyIsImdldFNWR09iamVjdCIsInNoYXBlIiwiX3JlZiIsInBvc1giLCJwb3NZIiwic2NhbGUiLCJkM1NoYXBlIiwiZGVlcENsb25lIiwib3B0aW9ucyIsIngiLCJ5IiwiZ2V0U1ZHT2JqZWN0Rm9yRXZlbnQiLCJldmVudFNoYXBlIiwiX3JlZjIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/shapeSVG.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/styles.js":
/*!*********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/styles.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/**\n * @file\n * CSS Styles constant dictionary.\n * @module styles\n * @alias module:styles\n */\n/**\n * @enum {string}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  container: 'carbon-graph-container',\n  timelineContainer: 'carbon-timeline-container',\n  canvas: 'carbon-graph-canvas',\n  canvasXAxis: 'carbon-x-axis-canvas',\n  axis: 'carbon-axis',\n  axisX: 'carbon-axis-x',\n  axisY: 'carbon-axis-y',\n  axisY2: 'carbon-axis-y2',\n  axisReferenceLine: 'carbon-axis-reference-line',\n  grid: 'carbon-grid',\n  gridH: 'carbon-horizontal-grid',\n  gridV: 'carbon-vertical-grid',\n  gridLowerStep: 'carbon-lower-step-grid',\n  gridMidpoint: 'carbon-midpoint-grid',\n  gridUpperStep: 'carbon-upper-step-grid',\n  highlight: 'carbon-highlight',\n  blur: 'carbon-blur',\n  bubbleBlur: 'carbon-bubble-blur',\n  svgIcon: 'carbon-svg-icon',\n  axisLabelX: 'carbon-x-axis-label',\n  axisLabelY: 'carbon-y-axis-label',\n  axisLabelY2: 'carbon-y2-axis-label',\n  axisLabelYShapeContainer: 'carbon-y-axis-label-shape-container',\n  axisLabelY2ShapeContainer: 'carbon-y2-axis-label-shape-container',\n  axisLabelRow: 'carbon-axis-label-row',\n  axisLabel: 'carbon-axis-label-item',\n  axisYTrackLabel: 'carbon-y-axis-track-label',\n  legend: 'carbon-legend',\n  legendItem: 'carbon-legend-item',\n  legendItemBtn: 'carbon-legend-item-btn',\n  legendItemIcon: 'carbon-legend-item-icon',\n  legendItemIconWithLine: 'carbon-legend-item-icon-with-line',\n  legendItemLine: 'carbon-legend-item-line',\n  legendItemLineWithIcon: 'carbon-legend-item-line-with-icon',\n  legendItemSpan: 'carbon-legend-item-span',\n  legendItemWhiteLine: 'carbon-legend-white-line',\n  legendItemText: 'carbon-legend-item-text',\n  contentContainer: 'carbon-content-container',\n  datelineContent: 'carbon-dateline-content',\n  datelineGroup: 'carbon-dateline-group',\n  datelinePoint: 'carbon-dateline-point',\n  dateline: 'carbon-dateline',\n  eventlineContent: 'carbon-eventline-content',\n  eventlineGroup: 'carbon-eventline-group',\n  eventline: 'carbon-eventline',\n  noDataContainer: 'carbon-no-data-container',\n  noDataLabel: 'carbon-no-data-label',\n  noDataOverlay: 'carbon-no-data-overlay',\n  labelPopupOverlay: 'carbon-label-popup-overlay',\n  labelPopupTooltip: 'carbon-label-popup-tooltip',\n  /**\n     * Line\n     */\n  lineGraphContent: 'carbon-line-graph-content',\n  currentLinesGroup: 'carbon-data-lines-group',\n  currentPointsGroup: 'carbon-data-points-group',\n  dataPointSelection: 'carbon-selected-data-point',\n  dataPointDisplayEnable: 'carbon-data-pair--selected',\n  /**\n     * Bubble\n     */\n  bubbleGraphContent: 'carbon-bubble-graph-content',\n  /**\n     * Paired Result\n     */\n  pairedBoxGroup: 'carbon-data-pairs-group',\n  pairedBox: 'carbon-data-pair',\n  pointGroup: 'carbon-data-points',\n  line: 'carbon-line',\n  point: 'carbon-point',\n  pairedLine: 'carbon-paired-line',\n  pairedPoint: 'carbon-paired-point',\n  high: 'carbon-high',\n  low: 'carbon-low',\n  mid: 'carbon-mid',\n  /**\n     * Regions\n     */\n  regionGroup: 'carbon-region-group',\n  regionPairGroup: 'carbon-region-pair-group',\n  region: 'carbon-region',\n  regionHighlight: 'carbon-region-highlight',\n  regionBlur: 'carbon-region-blur',\n  valueRegion: 'carbon-value-region',\n  /**\n     * Criticality\n     */\n  criticalityOuterPoint: 'carbon-criticality-outer',\n  criticalityInnerPoint: 'carbon-criticality-inner',\n  criticalityTimelineOuterPoint: 'carbon-timeline-criticality-outer',\n  criticalityTimelineInnerPoint: 'carbon-timeline-criticality-inner',\n  /**\n     * Gantt\n     */\n  ganttChartContent: 'carbon-gantt-chart-content',\n  trackGroup: 'carbon-data-track-group',\n  ganttTrackSelectorGroup: 'carbon-gantt-track-selector-group',\n  ganttTrackBarSelection: 'carbon-track-selected-bar',\n  taskGroup: 'carbon-data-task-group',\n  task: 'carbon-data-task',\n  taskBar: 'carbon-data-bar',\n  taskBarSelection: 'carbon-data-selected-bar',\n  taskBarCompletion: 'carbon-data-completion-bar',\n  activityGroup: 'carbon-data-activity-group',\n  activity: 'carbon-data-activity',\n  activityBar: 'carbon-data-activity-bar',\n  /**\n     * Timeline\n     */\n  timelineGraphContent: 'carbon-timeline-graph-content',\n  timelineContentGroup: 'carbon-timeline-content-group',\n  /**\n     * Bar\n     */\n  bar: 'carbon-bar-graph',\n  barGraphContent: 'carbon-bar-graph-content',\n  currentBarsGroup: 'carbon-data-bars-group',\n  barHashedRect: 'carbon-data-bar--hashed',\n  barSelectionGroup: 'carbon-bar-selector-group',\n  barGoalLine: 'carbon-bar-goal-line',\n  /**\n     * Axis Info Row\n     */\n  axisInfoRow: 'carbon-axis-info-row',\n  axisInfoRowItem: 'carbon-axis-info-row-item',\n  axisInfoRowIcon: 'carbon-axis-info-row-icon',\n  axisInfoRowDisplay: 'carbon-axis-info-row-item-display',\n  axisInfoRowSecondaryDisplay: 'carbon-axis-info-row-item-sec-display',\n  /**\n     * Pie\n     */\n  pieChartCanvas: 'carbon-pie-chart-canvas',\n  pieChartContent: 'carbon-pie-chart-content',\n  pieContentGroup: 'carbon-data-pie-group',\n  pieContentSlice: 'carbon-data-pie-slice',\n  pieLegendItem: 'carbon-pie-legend-item',\n  pieLegendItemIcon: 'carbon-pie-legend-item-icon',\n  pieLegendItemSliceHover: 'carbon-pie-legend-item-slice-hover',\n  /**\n     * Scatter\n     */\n  scatterGraphContent: 'carbon-scatter-graph-content'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/styles.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/transformUtils.js":
/*!*****************************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/transformUtils.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentTransform: function() { return /* binding */ getCurrentTransform; },\n/* harmony export */   getSVGAnimatedTransformList: function() { return /* binding */ getSVGAnimatedTransformList; },\n/* harmony export */   getTransformScale: function() { return /* binding */ getTransformScale; },\n/* harmony export */   round2Decimals: function() { return /* binding */ round2Decimals; }\n/* harmony export */ });\n/* harmony import */ var _d3Modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../d3Modules */ \"./packages/carbon-graphs/src/js/d3Modules.js\");\n\n\n/**\n * Returns the current d3 transform attribute object from context object\n *\n * @private\n * @param {object} context - d3 element\n * @returns {object} returns the current d3 transform attribute object\n */\nvar getCurrentTransform = function getCurrentTransform(context) {\n  return _d3Modules__WEBPACK_IMPORTED_MODULE_0__.select(context).attr('transform');\n};\n/**\n * Rounds to 2 decimals places. Use scaling technique\n * to bring two figures across the decimal point turning the figure into a whole number by\n * adding 0.00001 and then rounding it to 2 decimal places.\n *\n * @private\n * @param {number} v - A long decimal\n * @returns {number} decimal rounded to 2 decimal places\n */\nvar round2Decimals = function round2Decimals(v) {\n  return Math.round((v + 0.00001) * 100) / 100;\n};\nvar dot = function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\nvar normalize = function normalize(a) {\n  var k = Math.sqrt(dot(a, a));\n  if (k) {\n    a[0] /= k;\n    a[1] /= k;\n  }\n  return k;\n};\nvar combine = function combine(a, b, k) {\n  a[0] += k * b[0];\n  a[1] += k * b[1];\n  return a;\n};\n\n/**\n * Returns transform list with translate and scale properties given a transform string\n *\n * @private\n * @param {string} transform - Transform attribute as a string\n * @example \"translate(23.100000381469727,184.64285278320312),scale(0.20000000298023224,0.20000000298023224)\"\n * @returns {{scale: number[], translate: number[]}} Object containing scale and translate\n */\nvar getSVGAnimatedTransformList = function getSVGAnimatedTransformList(transform) {\n  var g = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  g.setAttributeNS(null, 'transform', transform);\n  var baseVal = g.transform.baseVal.consolidate();\n  var m = baseVal ? baseVal.matrix : {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  var r0 = [m.a, m.b];\n  var r1 = [m.c, m.d];\n  var kx = normalize(r0);\n  var kz = dot(r0, r1);\n  var ky = normalize(combine(r1, r0, -kz)) || 0;\n  if (r0[0] * r1[1] < r1[0] * r0[1]) {\n    r0[0] *= -1;\n    r0[1] *= -1;\n    kx *= -1;\n  }\n  return {\n    translate: [m.e, m.f],\n    scale: [kx, ky]\n  };\n};\n\n/**\n * Returns the scale from current d3 transform attribute object within context object\n * d3 transform for a scale returns decimal number like: 1.9000000953674316 for 1.9 or\n * 1.100000023841858 for 1.1. We are going to round this to 2 decimal places.\n *\n * @private\n * @param {object} context - d3 element\n * @returns {Array<number>} returns the scale from d3 element\n */\nvar getTransformScale = function getTransformScale(context) {\n  return getSVGAnimatedTransformList(getCurrentTransform(context)).scale.map(function (v) {\n    return round2Decimals(v);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3RyYW5zZm9ybVV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1DOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBbUJBLENBQUlDLE9BQU87RUFBQSxPQUFLRiw4Q0FBUyxDQUFDRSxPQUFPLENBQUMsQ0FBQ0UsSUFBSSxDQUFDLFdBQVcsQ0FBQztBQUFBO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBSUMsQ0FBQztFQUFBLE9BQUtDLElBQUksQ0FBQ0MsS0FBSyxDQUFDLENBQUNGLENBQUMsR0FBRyxPQUFPLElBQUksR0FBRyxDQUFDLEdBQUcsR0FBRztBQUFBO0FBQ25FLElBQU1HLEdBQUcsR0FBRyxTQUFOQSxHQUFHQSxDQUFJQyxDQUFDLEVBQUVDLENBQUM7RUFBQSxPQUFLRCxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUdDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBR0QsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQUE7QUFDL0MsSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVNBLENBQUlGLENBQUMsRUFBSztFQUN2QixJQUFNRyxDQUFDLEdBQUdOLElBQUksQ0FBQ08sSUFBSSxDQUFDTCxHQUFHLENBQUNDLENBQUMsRUFBRUEsQ0FBQyxDQUFDLENBQUM7RUFDOUIsSUFBSUcsQ0FBQyxFQUFFO0lBQ0xILENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSUcsQ0FBQztJQUNUSCxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUlHLENBQUM7RUFDWDtFQUNBLE9BQU9BLENBQUM7QUFDVixDQUFDO0FBQ0QsSUFBTUUsT0FBTyxHQUFHLFNBQVZBLE9BQU9BLENBQUlMLENBQUMsRUFBRUMsQ0FBQyxFQUFFRSxDQUFDLEVBQUs7RUFDM0JILENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSUcsQ0FBQyxHQUFHRixDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ2hCRCxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUlHLENBQUMsR0FBR0YsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUNoQixPQUFPRCxDQUFDO0FBQ1YsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTU0sMkJBQTJCLEdBQUcsU0FBOUJBLDJCQUEyQkEsQ0FBSUMsU0FBUyxFQUFLO0VBQ2pELElBQU1DLENBQUMsR0FBR0MsUUFBUSxDQUFDQyxlQUFlLENBQUMsNEJBQTRCLEVBQUUsR0FBRyxDQUFDO0VBQ3JFRixDQUFDLENBQUNHLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFSixTQUFTLENBQUM7RUFDOUMsSUFBTUssT0FBTyxHQUFHSixDQUFDLENBQUNELFNBQVMsQ0FBQ0ssT0FBTyxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUNqRCxJQUFNQyxDQUFDLEdBQUdGLE9BQU8sR0FDYkEsT0FBTyxDQUFDRyxNQUFNLEdBQ2Q7SUFDQWYsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSmUsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFLENBQUM7SUFDSkMsQ0FBQyxFQUFFO0VBQ0wsQ0FBQztFQUNILElBQU1DLEVBQUUsR0FBRyxDQUFDTixDQUFDLENBQUNkLENBQUMsRUFBRWMsQ0FBQyxDQUFDYixDQUFDLENBQUM7RUFDckIsSUFBTW9CLEVBQUUsR0FBRyxDQUFDUCxDQUFDLENBQUNFLENBQUMsRUFBRUYsQ0FBQyxDQUFDRyxDQUFDLENBQUM7RUFDckIsSUFBSUssRUFBRSxHQUFHcEIsU0FBUyxDQUFDa0IsRUFBRSxDQUFDO0VBQ3RCLElBQU1HLEVBQUUsR0FBR3hCLEdBQUcsQ0FBQ3FCLEVBQUUsRUFBRUMsRUFBRSxDQUFDO0VBQ3RCLElBQU1HLEVBQUUsR0FBR3RCLFNBQVMsQ0FBQ0csT0FBTyxDQUFDZ0IsRUFBRSxFQUFFRCxFQUFFLEVBQUUsQ0FBQ0csRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO0VBQy9DLElBQUlILEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBR0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHQSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUdELEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNqQ0EsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNYQSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ1hFLEVBQUUsSUFBSSxDQUFDLENBQUM7RUFDVjtFQUNBLE9BQU87SUFDTEcsU0FBUyxFQUFFLENBQUNYLENBQUMsQ0FBQ0ksQ0FBQyxFQUFFSixDQUFDLENBQUNLLENBQUMsQ0FBQztJQUNyQk8sS0FBSyxFQUFFLENBQUNKLEVBQUUsRUFBRUUsRUFBRTtFQUNoQixDQUFDO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQWlCQSxDQUFJbkMsT0FBTztFQUFBLE9BQUtjLDJCQUEyQixDQUFDZixtQkFBbUIsQ0FBQ0MsT0FBTyxDQUFDLENBQUMsQ0FBQ2tDLEtBQUssQ0FBQ0UsR0FBRyxDQUFDLFVBQUNoQyxDQUFDO0lBQUEsT0FBS0QsY0FBYyxDQUFDQyxDQUFDLENBQUM7RUFBQSxFQUFDO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3RyYW5zZm9ybVV0aWxzLmpzPzU5ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZDMgZnJvbSAnLi4vZDNNb2R1bGVzJztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjdXJyZW50IGQzIHRyYW5zZm9ybSBhdHRyaWJ1dGUgb2JqZWN0IGZyb20gY29udGV4dCBvYmplY3RcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IGNvbnRleHQgLSBkMyBlbGVtZW50XG4gKiBAcmV0dXJucyB7b2JqZWN0fSByZXR1cm5zIHRoZSBjdXJyZW50IGQzIHRyYW5zZm9ybSBhdHRyaWJ1dGUgb2JqZWN0XG4gKi9cbmNvbnN0IGdldEN1cnJlbnRUcmFuc2Zvcm0gPSAoY29udGV4dCkgPT4gZDMuc2VsZWN0KGNvbnRleHQpLmF0dHIoJ3RyYW5zZm9ybScpO1xuLyoqXG4gKiBSb3VuZHMgdG8gMiBkZWNpbWFscyBwbGFjZXMuIFVzZSBzY2FsaW5nIHRlY2huaXF1ZVxuICogdG8gYnJpbmcgdHdvIGZpZ3VyZXMgYWNyb3NzIHRoZSBkZWNpbWFsIHBvaW50IHR1cm5pbmcgdGhlIGZpZ3VyZSBpbnRvIGEgd2hvbGUgbnVtYmVyIGJ5XG4gKiBhZGRpbmcgMC4wMDAwMSBhbmQgdGhlbiByb3VuZGluZyBpdCB0byAyIGRlY2ltYWwgcGxhY2VzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gdiAtIEEgbG9uZyBkZWNpbWFsXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBkZWNpbWFsIHJvdW5kZWQgdG8gMiBkZWNpbWFsIHBsYWNlc1xuICovXG5jb25zdCByb3VuZDJEZWNpbWFscyA9ICh2KSA9PiBNYXRoLnJvdW5kKCh2ICsgMC4wMDAwMSkgKiAxMDApIC8gMTAwO1xuY29uc3QgZG90ID0gKGEsIGIpID0+IGFbMF0gKiBiWzBdICsgYVsxXSAqIGJbMV07XG5jb25zdCBub3JtYWxpemUgPSAoYSkgPT4ge1xuICBjb25zdCBrID0gTWF0aC5zcXJ0KGRvdChhLCBhKSk7XG4gIGlmIChrKSB7XG4gICAgYVswXSAvPSBrO1xuICAgIGFbMV0gLz0gaztcbiAgfVxuICByZXR1cm4gaztcbn07XG5jb25zdCBjb21iaW5lID0gKGEsIGIsIGspID0+IHtcbiAgYVswXSArPSBrICogYlswXTtcbiAgYVsxXSArPSBrICogYlsxXTtcbiAgcmV0dXJuIGE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJhbnNmb3JtIGxpc3Qgd2l0aCB0cmFuc2xhdGUgYW5kIHNjYWxlIHByb3BlcnRpZXMgZ2l2ZW4gYSB0cmFuc2Zvcm0gc3RyaW5nXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSB0cmFuc2Zvcm0gLSBUcmFuc2Zvcm0gYXR0cmlidXRlIGFzIGEgc3RyaW5nXG4gKiBAZXhhbXBsZSBcInRyYW5zbGF0ZSgyMy4xMDAwMDAzODE0Njk3MjcsMTg0LjY0Mjg1Mjc4MzIwMzEyKSxzY2FsZSgwLjIwMDAwMDAwMjk4MDIzMjI0LDAuMjAwMDAwMDAyOTgwMjMyMjQpXCJcbiAqIEByZXR1cm5zIHt7c2NhbGU6IG51bWJlcltdLCB0cmFuc2xhdGU6IG51bWJlcltdfX0gT2JqZWN0IGNvbnRhaW5pbmcgc2NhbGUgYW5kIHRyYW5zbGF0ZVxuICovXG5jb25zdCBnZXRTVkdBbmltYXRlZFRyYW5zZm9ybUxpc3QgPSAodHJhbnNmb3JtKSA9PiB7XG4gIGNvbnN0IGcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ2cnKTtcbiAgZy5zZXRBdHRyaWJ1dGVOUyhudWxsLCAndHJhbnNmb3JtJywgdHJhbnNmb3JtKTtcbiAgY29uc3QgYmFzZVZhbCA9IGcudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKTtcbiAgY29uc3QgbSA9IGJhc2VWYWxcbiAgICA/IGJhc2VWYWwubWF0cml4XG4gICAgOiB7XG4gICAgICBhOiAxLFxuICAgICAgYjogMCxcbiAgICAgIGM6IDAsXG4gICAgICBkOiAxLFxuICAgICAgZTogMCxcbiAgICAgIGY6IDAsXG4gICAgfTtcbiAgY29uc3QgcjAgPSBbbS5hLCBtLmJdO1xuICBjb25zdCByMSA9IFttLmMsIG0uZF07XG4gIGxldCBreCA9IG5vcm1hbGl6ZShyMCk7XG4gIGNvbnN0IGt6ID0gZG90KHIwLCByMSk7XG4gIGNvbnN0IGt5ID0gbm9ybWFsaXplKGNvbWJpbmUocjEsIHIwLCAta3opKSB8fCAwO1xuICBpZiAocjBbMF0gKiByMVsxXSA8IHIxWzBdICogcjBbMV0pIHtcbiAgICByMFswXSAqPSAtMTtcbiAgICByMFsxXSAqPSAtMTtcbiAgICBreCAqPSAtMTtcbiAgfVxuICByZXR1cm4ge1xuICAgIHRyYW5zbGF0ZTogW20uZSwgbS5mXSxcbiAgICBzY2FsZTogW2t4LCBreV0sXG4gIH07XG59O1xuXG4vKipcbiAqIFJldHVybnMgdGhlIHNjYWxlIGZyb20gY3VycmVudCBkMyB0cmFuc2Zvcm0gYXR0cmlidXRlIG9iamVjdCB3aXRoaW4gY29udGV4dCBvYmplY3RcbiAqIGQzIHRyYW5zZm9ybSBmb3IgYSBzY2FsZSByZXR1cm5zIGRlY2ltYWwgbnVtYmVyIGxpa2U6IDEuOTAwMDAwMDk1MzY3NDMxNiBmb3IgMS45IG9yXG4gKiAxLjEwMDAwMDAyMzg0MTg1OCBmb3IgMS4xLiBXZSBhcmUgZ29pbmcgdG8gcm91bmQgdGhpcyB0byAyIGRlY2ltYWwgcGxhY2VzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gY29udGV4dCAtIGQzIGVsZW1lbnRcbiAqIEByZXR1cm5zIHtBcnJheTxudW1iZXI+fSByZXR1cm5zIHRoZSBzY2FsZSBmcm9tIGQzIGVsZW1lbnRcbiAqL1xuY29uc3QgZ2V0VHJhbnNmb3JtU2NhbGUgPSAoY29udGV4dCkgPT4gZ2V0U1ZHQW5pbWF0ZWRUcmFuc2Zvcm1MaXN0KGdldEN1cnJlbnRUcmFuc2Zvcm0oY29udGV4dCkpLnNjYWxlLm1hcCgodikgPT4gcm91bmQyRGVjaW1hbHModikpO1xuXG5leHBvcnQge1xuICBnZXRUcmFuc2Zvcm1TY2FsZSxcbiAgcm91bmQyRGVjaW1hbHMsXG4gIGdldEN1cnJlbnRUcmFuc2Zvcm0sXG4gIGdldFNWR0FuaW1hdGVkVHJhbnNmb3JtTGlzdCxcbn07XG4iXSwibmFtZXMiOlsiZDMiLCJnZXRDdXJyZW50VHJhbnNmb3JtIiwiY29udGV4dCIsInNlbGVjdCIsImF0dHIiLCJyb3VuZDJEZWNpbWFscyIsInYiLCJNYXRoIiwicm91bmQiLCJkb3QiLCJhIiwiYiIsIm5vcm1hbGl6ZSIsImsiLCJzcXJ0IiwiY29tYmluZSIsImdldFNWR0FuaW1hdGVkVHJhbnNmb3JtTGlzdCIsInRyYW5zZm9ybSIsImciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnROUyIsInNldEF0dHJpYnV0ZU5TIiwiYmFzZVZhbCIsImNvbnNvbGlkYXRlIiwibSIsIm1hdHJpeCIsImMiLCJkIiwiZSIsImYiLCJyMCIsInIxIiwia3giLCJreiIsImt5IiwidHJhbnNsYXRlIiwic2NhbGUiLCJnZXRUcmFuc2Zvcm1TY2FsZSIsIm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/transformUtils.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/helpers/utils.js":
/*!********************************************************!*\
  !*** ./packages/carbon-graphs/src/js/helpers/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./packages/carbon-graphs/src/js/helpers/constants.js\");\n\n/**\n * @module utils\n * @alias module:utils\n */\n\n\n\n/**\n * Wraps a function in logical negation\n *\n * @private\n * @param {Function} [fn=x=>x] - A value-returning function - defaults to the identity function\n * @returns {Function} that forwards arguments to `fn` and takes the logical negation of the result\n */\nvar not = function not() {\n  var fn = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (x) {\n    return x;\n  };\n  return function () {\n    return !fn.apply(void 0, arguments);\n  };\n};\n/**\n * Checks if parameter is a Function\n *\n * @private\n * @param {object} o - source object\n * @returns {boolean} true if Function\n */\nvar isFunction = function isFunction(o) {\n  return typeof o === 'function';\n};\n/**\n * Checks if parameter is an Array\n *\n * @private\n * @param {object} o - source object\n * @returns {boolean} true if Array\n */\nvar isArray = function isArray(o) {\n  return Array.isArray(o);\n};\n/**\n * Checks if parameter is an Array and it is having zero elements\n *\n * @private\n * @param {object} o - source object\n * @returns {boolean} true if it is an Array and length is zero\n */\nvar isEmptyArray = function isEmptyArray(o) {\n  return Array.isArray(o) && o.length === 0;\n};\n/**\n * Checks if parameter is a String\n *\n * @private\n * @param {string} o - source object\n * @returns {boolean} true if string\n */\nvar isString = function isString(o) {\n  return typeof o === 'string';\n};\n/**\n * Checks if parameter is of type undefined\n *\n * @private\n * @param {object} v - source object\n * @returns {boolean} true if undefined\n */\nvar isUndefined = function isUndefined(v) {\n  return typeof v === 'undefined';\n};\n/**\n * Checks if parameter is not of type undefined\n *\n * @private\n * @param {object} v - source object\n * @returns {boolean} true if defined\n */\nvar isDefined = not(isUndefined);\n/**\n * Checks if parameter is empty\n *  not undefined,\n *  not null,\n *  if string => length is not 0\n *  if object => keys are not non-existent\n *\n * @private\n * @param {object} o - source object\n * @returns {boolean} true if empty\n */\nvar isEmpty = function isEmpty(o) {\n  return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o) === 'object' && Object.keys(o).length === 0;\n};\n/**\n * Checks if parameter is not empty\n *\n * @private\n * @param {object} o - source object\n * @returns {boolean} True if not empty\n */\nvar notEmpty = not(isEmpty);\n/**\n * Checks if value exists within the given dictionary\n *\n * @private\n * @param {Array} dict - target array to be searched\n * @param {*} value -  value to be searched\n * @returns {boolean} true if present\n */\nvar hasValue = function hasValue(dict, value) {\n  return Object.keys(dict).some(function (o) {\n    return dict[o] === value;\n  });\n};\n/**\n * Sanitizes the string of < and >\n *\n * @private\n * @param {string} str - input string\n * @returns {string} sanitized string\n */\nvar sanitize = function sanitize(str) {\n  return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n};\n/**\n * Deep clones the provided object\n *\n * @private\n * @param {object} o - Source object\n * @returns {object|Array} Returns a cloned object\n */\nvar deepClone = function deepClone(o) {\n  if (isArray(o)) {\n    return o.map(deepClone);\n  }\n  if (o && (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o) === 'object') {\n    return Object.keys(o).reduce(function (acc, key) {\n      if (isDefined(o[key])) {\n        acc[key] = deepClone(o[key]);\n      }\n      return acc;\n    }, {});\n  }\n  return o;\n};\n/**\n * Checks to see if the date provided is of ISO8601 datetime format.\n *\n * @private\n * @param {string} str - Datetime string in ISO8601 format: yyyy-MM-ddTHH:mm:ssZ\n * @returns {string} true if in correct format\n */\nvar isDate = function isDate(str) {\n  return _constants__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ISO8601_DATE_TIME_MILLI.test(str);\n};\n/**\n * Checks to see if the object provided is an instance of date\n *\n * @private\n * @param {object} obj - Object instance of date\n * @returns {boolean} true if instance of date\n */\nvar isDateInstance = function isDateInstance(obj) {\n  return obj instanceof Date;\n};\n/**\n * Converts ISO8601 datetime string to Date\n *\n * @private\n * @param {number|string} value - ISO8601 datetime string\n * @todo Handle DST\n * @todo Convert UTC dates to local date\n * @returns {Date} new Date object\n */\nvar parseDateTime = function parseDateTime(value) {\n  return new Date(value);\n};\n/**\n * Converts ISO8601 date string to a number\n *\n * @private\n * @param {string} value - ISO8601 datetime string\n * @returns {number} Date as a number\n */\nvar getTime = function getTime(value) {\n  return parseDateTime(value).getTime();\n};\n/**\n * Case converts to number\n *\n * @private\n * @param {string} n - source string\n * @returns {number} if not undefined or null return Number, 0 otherwise\n */\nvar getNumber = function getNumber(n) {\n  return n ? Number(n) : 0;\n};\n/**\n * Checks if input is a number or not\n *\n * @private\n * @param {*} n - input to be determined a number\n * @returns {boolean} if not undefined or null return Number, 0 otherwise\n */\nvar isNumber = function isNumber(n) {\n  return typeof n === 'number' && !Number.isNaN(n);\n};\n/**\n * Checks if input is a boolean or not\n *\n * @private\n * @param {*} n - input to be determined a number\n * @returns {boolean} if not undefined or null return Number, 0 otherwise\n */\nvar isBoolean = function isBoolean(n) {\n  return typeof n === 'boolean' && !Number.isNaN(n);\n};\n/**\n * Checks if provided dates are equal\n *\n * @private\n * @param {Date} a - date to compare\n * @param {Date} b - date to compare\n * @returns {boolean} true if dates are equal\n */\nvar isDateEqual = function isDateEqual(a, b) {\n  return a.getTime() === b.getTime();\n};\n/**\n * Compares 2 values and return true if equals. False if not.\n *\n * @private\n * @param {object} a - value to compare\n * @param {object} b - value to compare\n * @returns {boolean} - returns true or false\n */\nvar isEqual = function isEqual(a, b) {\n  return isDate(a) || isDateInstance(a) ? isDateEqual(parseDateTime(a), parseDateTime(b)) : a === b;\n};\n/**\n * Returns the date in epoc format.\n *\n * @private\n * @param {string} dateISO - Date in ISO String format\n * @returns {number} - epoc representation of given date\n */\nvar getEpocFromDateString = function getEpocFromDateString(dateISO) {\n  return parseInt(new Date(dateISO).getTime(), 10);\n};\n/**\n * Returns a date object based on the given epoc.\n *\n * @private\n * @param {number} epocDate - Date as an epoc int\n * @returns {object typeof Date} - Date object based on epoc\n */\nvar getDateFromEpoc = function getDateFromEpoc(epocDate) {\n  return new Date(epocDate);\n};\n/**\n * Enum for tick label rotations.\n * @readonly\n * @enum {number}\n */\nvar validTickLabelRotations = new Set([0, -45]);\n\n/**\n * @enum {Function}\n */\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  deepClone: deepClone,\n  getEpocFromDateString: getEpocFromDateString,\n  getDateFromEpoc: getDateFromEpoc,\n  getNumber: getNumber,\n  getTime: getTime,\n  hasValue: hasValue,\n  isArray: isArray,\n  isBoolean: isBoolean,\n  isFunction: isFunction,\n  isDate: isDate,\n  isDateInstance: isDateInstance,\n  isDefined: isDefined,\n  isEmptyArray: isEmptyArray,\n  isEmpty: isEmpty,\n  isEqual: isEqual,\n  isNumber: isNumber,\n  isUndefined: isUndefined,\n  notEmpty: notEmpty,\n  parseDateTime: parseDateTime,\n  sanitize: sanitize,\n  validTickLabelRotations: validTickLabelRotations\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9oZWxwZXJzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0M7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsR0FBRyxHQUFHLFNBQU5BLEdBQUdBLENBQUE7RUFBQSxJQUFJQyxFQUFFLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLFVBQUNHLENBQUM7SUFBQSxPQUFLQSxDQUFDO0VBQUE7RUFBQSxPQUFLO0lBQUEsT0FBYSxDQUFDSixFQUFFLENBQUFLLEtBQUEsU0FBQUosU0FBUSxDQUFDO0VBQUE7QUFBQTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1LLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFJQyxDQUFDO0VBQUEsT0FBSyxPQUFPQSxDQUFDLEtBQUssVUFBVTtBQUFBO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQU9BLENBQUlELENBQUM7RUFBQSxPQUFLRSxLQUFLLENBQUNELE9BQU8sQ0FBQ0QsQ0FBQyxDQUFDO0FBQUE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBSUgsQ0FBQztFQUFBLE9BQUtFLEtBQUssQ0FBQ0QsT0FBTyxDQUFDRCxDQUFDLENBQUMsSUFBSUEsQ0FBQyxDQUFDTCxNQUFNLEtBQUssQ0FBQztBQUFBO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTVMsUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUlKLENBQUM7RUFBQSxPQUFLLE9BQU9BLENBQUMsS0FBSyxRQUFRO0FBQUE7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNSyxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBSUMsQ0FBQztFQUFBLE9BQUssT0FBT0EsQ0FBQyxLQUFLLFdBQVc7QUFBQTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1DLFNBQVMsR0FBR2YsR0FBRyxDQUFDYSxXQUFXLENBQUM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1HLE9BQU8sR0FBRyxTQUFWQSxPQUFPQSxDQUFJUixDQUFDO0VBQUEsT0FBSyxPQUFPQSxDQUFDLEtBQUssV0FBVyxJQUN4Q0EsQ0FBQyxLQUFLLElBQUksSUFDVEksUUFBUSxDQUFDSixDQUFDLENBQUMsSUFBSUEsQ0FBQyxDQUFDTCxNQUFNLEtBQUssQ0FBRSxJQUM5QmMseUVBQUEsQ0FBT1QsQ0FBQyxNQUFLLFFBQVEsSUFBSVUsTUFBTSxDQUFDQyxJQUFJLENBQUNYLENBQUMsQ0FBQyxDQUFDTCxNQUFNLEtBQUssQ0FBRTtBQUFBO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTWlCLFFBQVEsR0FBR3BCLEdBQUcsQ0FBQ2dCLE9BQU8sQ0FBQztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUssUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUlDLElBQUksRUFBRUMsS0FBSztFQUFBLE9BQUtMLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDRyxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDLFVBQUNoQixDQUFDO0lBQUEsT0FBS2MsSUFBSSxDQUFDZCxDQUFDLENBQUMsS0FBS2UsS0FBSztFQUFBLEVBQUM7QUFBQTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1FLFFBQVEsR0FBRyxTQUFYQSxRQUFRQSxDQUFJQyxHQUFHO0VBQUEsT0FBTSxPQUFPQSxHQUFHLEtBQUssUUFBUSxHQUM5Q0EsR0FBRyxDQUFDQyxPQUFPLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDQSxPQUFPLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUMvQ0QsR0FBRztBQUFBLENBQUM7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1FLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFJcEIsQ0FBQyxFQUFLO0VBQ3ZCLElBQUlDLE9BQU8sQ0FBQ0QsQ0FBQyxDQUFDLEVBQUU7SUFDZCxPQUFPQSxDQUFDLENBQUNxQixHQUFHLENBQUNELFNBQVMsQ0FBQztFQUN6QjtFQUFFLElBQUlwQixDQUFDLElBQUlTLHlFQUFBLENBQU9ULENBQUMsTUFBSyxRQUFRLEVBQUU7SUFDaEMsT0FBT1UsTUFBTSxDQUFDQyxJQUFJLENBQUNYLENBQUMsQ0FBQyxDQUFDc0IsTUFBTSxDQUFDLFVBQUNDLEdBQUcsRUFBRUMsR0FBRyxFQUFLO01BQ3pDLElBQUlqQixTQUFTLENBQUNQLENBQUMsQ0FBQ3dCLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDckJELEdBQUcsQ0FBQ0MsR0FBRyxDQUFDLEdBQUdKLFNBQVMsQ0FBQ3BCLENBQUMsQ0FBQ3dCLEdBQUcsQ0FBQyxDQUFDO01BQzlCO01BQ0EsT0FBT0QsR0FBRztJQUNaLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNSO0VBQ0EsT0FBT3ZCLENBQUM7QUFDVixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNeUIsTUFBTSxHQUFHLFNBQVRBLE1BQU1BLENBQUlQLEdBQUc7RUFBQSxPQUFLM0Isa0RBQVMsQ0FBQ21DLHVCQUF1QixDQUFDQyxJQUFJLENBQUNULEdBQUcsQ0FBQztBQUFBO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTVUsY0FBYyxHQUFHLFNBQWpCQSxjQUFjQSxDQUFJQyxHQUFHO0VBQUEsT0FBS0EsR0FBRyxZQUFZQyxJQUFJO0FBQUE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFhQSxDQUFJaEIsS0FBSztFQUFBLE9BQUssSUFBSWUsSUFBSSxDQUFDZixLQUFLLENBQUM7QUFBQTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1pQixPQUFPLEdBQUcsU0FBVkEsT0FBT0EsQ0FBSWpCLEtBQUs7RUFBQSxPQUFLZ0IsYUFBYSxDQUFDaEIsS0FBSyxDQUFDLENBQUNpQixPQUFPLENBQUMsQ0FBQztBQUFBO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVNBLENBQUlDLENBQUM7RUFBQSxPQUFNQSxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0QsQ0FBQyxDQUFDLEdBQUcsQ0FBQztBQUFBLENBQUM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRSxRQUFRLEdBQUcsU0FBWEEsUUFBUUEsQ0FBSUYsQ0FBQztFQUFBLE9BQUssT0FBT0EsQ0FBQyxLQUFLLFFBQVEsSUFBSSxDQUFDQyxNQUFNLENBQUNFLEtBQUssQ0FBQ0gsQ0FBQyxDQUFDO0FBQUE7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNSSxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBSUosQ0FBQztFQUFBLE9BQUssT0FBT0EsQ0FBQyxLQUFLLFNBQVMsSUFBSSxDQUFDQyxNQUFNLENBQUNFLEtBQUssQ0FBQ0gsQ0FBQyxDQUFDO0FBQUE7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1LLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFJQyxDQUFDLEVBQUVDLENBQUM7RUFBQSxPQUFLRCxDQUFDLENBQUNSLE9BQU8sQ0FBQyxDQUFDLEtBQUtTLENBQUMsQ0FBQ1QsT0FBTyxDQUFDLENBQUM7QUFBQTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTVUsT0FBTyxHQUFHLFNBQVZBLE9BQU9BLENBQUlGLENBQUMsRUFBRUMsQ0FBQztFQUFBLE9BQU1oQixNQUFNLENBQUNlLENBQUMsQ0FBQyxJQUFJWixjQUFjLENBQUNZLENBQUMsQ0FBQyxHQUNyREQsV0FBVyxDQUFDUixhQUFhLENBQUNTLENBQUMsQ0FBQyxFQUFFVCxhQUFhLENBQUNVLENBQUMsQ0FBQyxDQUFDLEdBQy9DRCxDQUFDLEtBQUtDLENBQUM7QUFBQSxDQUFDO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNRSxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXFCQSxDQUFJQyxPQUFPO0VBQUEsT0FBS0MsUUFBUSxDQUFDLElBQUlmLElBQUksQ0FBQ2MsT0FBTyxDQUFDLENBQUNaLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQUE7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNYyxlQUFlLEdBQUcsU0FBbEJBLGVBQWVBLENBQUlDLFFBQVE7RUFBQSxPQUFLLElBQUlqQixJQUFJLENBQUNpQixRQUFRLENBQUM7QUFBQTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsdUJBQXVCLEdBQUcsSUFBSUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBLCtEQUFlO0VBQ2I3QixTQUFTLEVBQVRBLFNBQVM7RUFDVHVCLHFCQUFxQixFQUFyQkEscUJBQXFCO0VBQ3JCRyxlQUFlLEVBQWZBLGVBQWU7RUFDZmIsU0FBUyxFQUFUQSxTQUFTO0VBQ1RELE9BQU8sRUFBUEEsT0FBTztFQUNQbkIsUUFBUSxFQUFSQSxRQUFRO0VBQ1JaLE9BQU8sRUFBUEEsT0FBTztFQUNQcUMsU0FBUyxFQUFUQSxTQUFTO0VBQ1R2QyxVQUFVLEVBQVZBLFVBQVU7RUFDVjBCLE1BQU0sRUFBTkEsTUFBTTtFQUNORyxjQUFjLEVBQWRBLGNBQWM7RUFDZHJCLFNBQVMsRUFBVEEsU0FBUztFQUNUSixZQUFZLEVBQVpBLFlBQVk7RUFDWkssT0FBTyxFQUFQQSxPQUFPO0VBQ1BrQyxPQUFPLEVBQVBBLE9BQU87RUFDUE4sUUFBUSxFQUFSQSxRQUFRO0VBQ1IvQixXQUFXLEVBQVhBLFdBQVc7RUFDWE8sUUFBUSxFQUFSQSxRQUFRO0VBQ1JtQixhQUFhLEVBQWJBLGFBQWE7RUFDYmQsUUFBUSxFQUFSQSxRQUFRO0VBQ1IrQix1QkFBdUIsRUFBdkJBO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2hlbHBlcnMvdXRpbHMuanM/MjBkYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgdXRpbHNcbiAqIEBhbGlhcyBtb2R1bGU6dXRpbHNcbiAqL1xuXG5pbXBvcnQgY29uc3RhbnRzIGZyb20gJy4vY29uc3RhbnRzJztcblxuLyoqXG4gKiBXcmFwcyBhIGZ1bmN0aW9uIGluIGxvZ2ljYWwgbmVnYXRpb25cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZuPXg9PnhdIC0gQSB2YWx1ZS1yZXR1cm5pbmcgZnVuY3Rpb24gLSBkZWZhdWx0cyB0byB0aGUgaWRlbnRpdHkgZnVuY3Rpb25cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gdGhhdCBmb3J3YXJkcyBhcmd1bWVudHMgdG8gYGZuYCBhbmQgdGFrZXMgdGhlIGxvZ2ljYWwgbmVnYXRpb24gb2YgdGhlIHJlc3VsdFxuICovXG5jb25zdCBub3QgPSAoZm4gPSAoeCkgPT4geCkgPT4gKC4uLmFyZ3MpID0+ICFmbiguLi5hcmdzKTtcbi8qKlxuICogQ2hlY2tzIGlmIHBhcmFtZXRlciBpcyBhIEZ1bmN0aW9uXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvIC0gc291cmNlIG9iamVjdFxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgRnVuY3Rpb25cbiAqL1xuY29uc3QgaXNGdW5jdGlvbiA9IChvKSA9PiB0eXBlb2YgbyA9PT0gJ2Z1bmN0aW9uJztcbi8qKlxuICogQ2hlY2tzIGlmIHBhcmFtZXRlciBpcyBhbiBBcnJheVxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gbyAtIHNvdXJjZSBvYmplY3RcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIEFycmF5XG4gKi9cbmNvbnN0IGlzQXJyYXkgPSAobykgPT4gQXJyYXkuaXNBcnJheShvKTtcbi8qKlxuICogQ2hlY2tzIGlmIHBhcmFtZXRlciBpcyBhbiBBcnJheSBhbmQgaXQgaXMgaGF2aW5nIHplcm8gZWxlbWVudHNcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IG8gLSBzb3VyY2Ugb2JqZWN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBpdCBpcyBhbiBBcnJheSBhbmQgbGVuZ3RoIGlzIHplcm9cbiAqL1xuY29uc3QgaXNFbXB0eUFycmF5ID0gKG8pID0+IEFycmF5LmlzQXJyYXkobykgJiYgby5sZW5ndGggPT09IDA7XG4vKipcbiAqIENoZWNrcyBpZiBwYXJhbWV0ZXIgaXMgYSBTdHJpbmdcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IG8gLSBzb3VyY2Ugb2JqZWN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBzdHJpbmdcbiAqL1xuY29uc3QgaXNTdHJpbmcgPSAobykgPT4gdHlwZW9mIG8gPT09ICdzdHJpbmcnO1xuLyoqXG4gKiBDaGVja3MgaWYgcGFyYW1ldGVyIGlzIG9mIHR5cGUgdW5kZWZpbmVkXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2IC0gc291cmNlIG9iamVjdFxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgdW5kZWZpbmVkXG4gKi9cbmNvbnN0IGlzVW5kZWZpbmVkID0gKHYpID0+IHR5cGVvZiB2ID09PSAndW5kZWZpbmVkJztcbi8qKlxuICogQ2hlY2tzIGlmIHBhcmFtZXRlciBpcyBub3Qgb2YgdHlwZSB1bmRlZmluZWRcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IHYgLSBzb3VyY2Ugb2JqZWN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBkZWZpbmVkXG4gKi9cbmNvbnN0IGlzRGVmaW5lZCA9IG5vdChpc1VuZGVmaW5lZCk7XG4vKipcbiAqIENoZWNrcyBpZiBwYXJhbWV0ZXIgaXMgZW1wdHlcbiAqICBub3QgdW5kZWZpbmVkLFxuICogIG5vdCBudWxsLFxuICogIGlmIHN0cmluZyA9PiBsZW5ndGggaXMgbm90IDBcbiAqICBpZiBvYmplY3QgPT4ga2V5cyBhcmUgbm90IG5vbi1leGlzdGVudFxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gbyAtIHNvdXJjZSBvYmplY3RcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGVtcHR5XG4gKi9cbmNvbnN0IGlzRW1wdHkgPSAobykgPT4gdHlwZW9mIG8gPT09ICd1bmRlZmluZWQnXG4gICAgfHwgbyA9PT0gbnVsbFxuICAgIHx8IChpc1N0cmluZyhvKSAmJiBvLmxlbmd0aCA9PT0gMClcbiAgICB8fCAodHlwZW9mIG8gPT09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKG8pLmxlbmd0aCA9PT0gMCk7XG4vKipcbiAqIENoZWNrcyBpZiBwYXJhbWV0ZXIgaXMgbm90IGVtcHR5XG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7b2JqZWN0fSBvIC0gc291cmNlIG9iamVjdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgbm90IGVtcHR5XG4gKi9cbmNvbnN0IG5vdEVtcHR5ID0gbm90KGlzRW1wdHkpO1xuLyoqXG4gKiBDaGVja3MgaWYgdmFsdWUgZXhpc3RzIHdpdGhpbiB0aGUgZ2l2ZW4gZGljdGlvbmFyeVxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBkaWN0IC0gdGFyZ2V0IGFycmF5IHRvIGJlIHNlYXJjaGVkXG4gKiBAcGFyYW0geyp9IHZhbHVlIC0gIHZhbHVlIHRvIGJlIHNlYXJjaGVkXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBwcmVzZW50XG4gKi9cbmNvbnN0IGhhc1ZhbHVlID0gKGRpY3QsIHZhbHVlKSA9PiBPYmplY3Qua2V5cyhkaWN0KS5zb21lKChvKSA9PiBkaWN0W29dID09PSB2YWx1ZSk7XG4vKipcbiAqIFNhbml0aXplcyB0aGUgc3RyaW5nIG9mIDwgYW5kID5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHN0ciAtIGlucHV0IHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ30gc2FuaXRpemVkIHN0cmluZ1xuICovXG5jb25zdCBzYW5pdGl6ZSA9IChzdHIpID0+ICh0eXBlb2Ygc3RyID09PSAnc3RyaW5nJ1xuICA/IHN0ci5yZXBsYWNlKC88L2csICcmbHQ7JykucmVwbGFjZSgvPi9nLCAnJmd0OycpXG4gIDogc3RyKTtcbi8qKlxuICogRGVlcCBjbG9uZXMgdGhlIHByb3ZpZGVkIG9iamVjdFxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gbyAtIFNvdXJjZSBvYmplY3RcbiAqIEByZXR1cm5zIHtvYmplY3R8QXJyYXl9IFJldHVybnMgYSBjbG9uZWQgb2JqZWN0XG4gKi9cbmNvbnN0IGRlZXBDbG9uZSA9IChvKSA9PiB7XG4gIGlmIChpc0FycmF5KG8pKSB7XG4gICAgcmV0dXJuIG8ubWFwKGRlZXBDbG9uZSk7XG4gIH0gaWYgKG8gJiYgdHlwZW9mIG8gPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG8pLnJlZHVjZSgoYWNjLCBrZXkpID0+IHtcbiAgICAgIGlmIChpc0RlZmluZWQob1trZXldKSkge1xuICAgICAgICBhY2Nba2V5XSA9IGRlZXBDbG9uZShvW2tleV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSk7XG4gIH1cbiAgcmV0dXJuIG87XG59O1xuLyoqXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBkYXRlIHByb3ZpZGVkIGlzIG9mIElTTzg2MDEgZGF0ZXRpbWUgZm9ybWF0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIC0gRGF0ZXRpbWUgc3RyaW5nIGluIElTTzg2MDEgZm9ybWF0OiB5eXl5LU1NLWRkVEhIOm1tOnNzWlxuICogQHJldHVybnMge3N0cmluZ30gdHJ1ZSBpZiBpbiBjb3JyZWN0IGZvcm1hdFxuICovXG5jb25zdCBpc0RhdGUgPSAoc3RyKSA9PiBjb25zdGFudHMuSVNPODYwMV9EQVRFX1RJTUVfTUlMTEkudGVzdChzdHIpO1xuLyoqXG4gKiBDaGVja3MgdG8gc2VlIGlmIHRoZSBvYmplY3QgcHJvdmlkZWQgaXMgYW4gaW5zdGFuY2Ugb2YgZGF0ZVxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqIC0gT2JqZWN0IGluc3RhbmNlIG9mIGRhdGVcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGluc3RhbmNlIG9mIGRhdGVcbiAqL1xuY29uc3QgaXNEYXRlSW5zdGFuY2UgPSAob2JqKSA9PiBvYmogaW5zdGFuY2VvZiBEYXRlO1xuLyoqXG4gKiBDb252ZXJ0cyBJU084NjAxIGRhdGV0aW1lIHN0cmluZyB0byBEYXRlXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7bnVtYmVyfHN0cmluZ30gdmFsdWUgLSBJU084NjAxIGRhdGV0aW1lIHN0cmluZ1xuICogQHRvZG8gSGFuZGxlIERTVFxuICogQHRvZG8gQ29udmVydCBVVEMgZGF0ZXMgdG8gbG9jYWwgZGF0ZVxuICogQHJldHVybnMge0RhdGV9IG5ldyBEYXRlIG9iamVjdFxuICovXG5jb25zdCBwYXJzZURhdGVUaW1lID0gKHZhbHVlKSA9PiBuZXcgRGF0ZSh2YWx1ZSk7XG4vKipcbiAqIENvbnZlcnRzIElTTzg2MDEgZGF0ZSBzdHJpbmcgdG8gYSBudW1iZXJcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIC0gSVNPODYwMSBkYXRldGltZSBzdHJpbmdcbiAqIEByZXR1cm5zIHtudW1iZXJ9IERhdGUgYXMgYSBudW1iZXJcbiAqL1xuY29uc3QgZ2V0VGltZSA9ICh2YWx1ZSkgPT4gcGFyc2VEYXRlVGltZSh2YWx1ZSkuZ2V0VGltZSgpO1xuLyoqXG4gKiBDYXNlIGNvbnZlcnRzIHRvIG51bWJlclxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gbiAtIHNvdXJjZSBzdHJpbmdcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGlmIG5vdCB1bmRlZmluZWQgb3IgbnVsbCByZXR1cm4gTnVtYmVyLCAwIG90aGVyd2lzZVxuICovXG5jb25zdCBnZXROdW1iZXIgPSAobikgPT4gKG4gPyBOdW1iZXIobikgOiAwKTtcbi8qKlxuICogQ2hlY2tzIGlmIGlucHV0IGlzIGEgbnVtYmVyIG9yIG5vdFxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IG4gLSBpbnB1dCB0byBiZSBkZXRlcm1pbmVkIGEgbnVtYmVyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gaWYgbm90IHVuZGVmaW5lZCBvciBudWxsIHJldHVybiBOdW1iZXIsIDAgb3RoZXJ3aXNlXG4gKi9cbmNvbnN0IGlzTnVtYmVyID0gKG4pID0+IHR5cGVvZiBuID09PSAnbnVtYmVyJyAmJiAhTnVtYmVyLmlzTmFOKG4pO1xuLyoqXG4gKiBDaGVja3MgaWYgaW5wdXQgaXMgYSBib29sZWFuIG9yIG5vdFxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IG4gLSBpbnB1dCB0byBiZSBkZXRlcm1pbmVkIGEgbnVtYmVyXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gaWYgbm90IHVuZGVmaW5lZCBvciBudWxsIHJldHVybiBOdW1iZXIsIDAgb3RoZXJ3aXNlXG4gKi9cbmNvbnN0IGlzQm9vbGVhbiA9IChuKSA9PiB0eXBlb2YgbiA9PT0gJ2Jvb2xlYW4nICYmICFOdW1iZXIuaXNOYU4obik7XG4vKipcbiAqIENoZWNrcyBpZiBwcm92aWRlZCBkYXRlcyBhcmUgZXF1YWxcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtEYXRlfSBhIC0gZGF0ZSB0byBjb21wYXJlXG4gKiBAcGFyYW0ge0RhdGV9IGIgLSBkYXRlIHRvIGNvbXBhcmVcbiAqIEByZXR1cm5zIHtib29sZWFufSB0cnVlIGlmIGRhdGVzIGFyZSBlcXVhbFxuICovXG5jb25zdCBpc0RhdGVFcXVhbCA9IChhLCBiKSA9PiBhLmdldFRpbWUoKSA9PT0gYi5nZXRUaW1lKCk7XG4vKipcbiAqIENvbXBhcmVzIDIgdmFsdWVzIGFuZCByZXR1cm4gdHJ1ZSBpZiBlcXVhbHMuIEZhbHNlIGlmIG5vdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtvYmplY3R9IGEgLSB2YWx1ZSB0byBjb21wYXJlXG4gKiBAcGFyYW0ge29iamVjdH0gYiAtIHZhbHVlIHRvIGNvbXBhcmVcbiAqIEByZXR1cm5zIHtib29sZWFufSAtIHJldHVybnMgdHJ1ZSBvciBmYWxzZVxuICovXG5jb25zdCBpc0VxdWFsID0gKGEsIGIpID0+IChpc0RhdGUoYSkgfHwgaXNEYXRlSW5zdGFuY2UoYSlcbiAgPyBpc0RhdGVFcXVhbChwYXJzZURhdGVUaW1lKGEpLCBwYXJzZURhdGVUaW1lKGIpKVxuICA6IGEgPT09IGIpO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBkYXRlIGluIGVwb2MgZm9ybWF0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0ZUlTTyAtIERhdGUgaW4gSVNPIFN0cmluZyBmb3JtYXRcbiAqIEByZXR1cm5zIHtudW1iZXJ9IC0gZXBvYyByZXByZXNlbnRhdGlvbiBvZiBnaXZlbiBkYXRlXG4gKi9cbmNvbnN0IGdldEVwb2NGcm9tRGF0ZVN0cmluZyA9IChkYXRlSVNPKSA9PiBwYXJzZUludChuZXcgRGF0ZShkYXRlSVNPKS5nZXRUaW1lKCksIDEwKTtcbi8qKlxuICogUmV0dXJucyBhIGRhdGUgb2JqZWN0IGJhc2VkIG9uIHRoZSBnaXZlbiBlcG9jLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gZXBvY0RhdGUgLSBEYXRlIGFzIGFuIGVwb2MgaW50XG4gKiBAcmV0dXJucyB7b2JqZWN0IHR5cGVvZiBEYXRlfSAtIERhdGUgb2JqZWN0IGJhc2VkIG9uIGVwb2NcbiAqL1xuY29uc3QgZ2V0RGF0ZUZyb21FcG9jID0gKGVwb2NEYXRlKSA9PiBuZXcgRGF0ZShlcG9jRGF0ZSk7XG4vKipcbiAqIEVudW0gZm9yIHRpY2sgbGFiZWwgcm90YXRpb25zLlxuICogQHJlYWRvbmx5XG4gKiBAZW51bSB7bnVtYmVyfVxuICovXG5jb25zdCB2YWxpZFRpY2tMYWJlbFJvdGF0aW9ucyA9IG5ldyBTZXQoWzAsIC00NV0pO1xuXG4vKipcbiAqIEBlbnVtIHtGdW5jdGlvbn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQge1xuICBkZWVwQ2xvbmUsXG4gIGdldEVwb2NGcm9tRGF0ZVN0cmluZyxcbiAgZ2V0RGF0ZUZyb21FcG9jLFxuICBnZXROdW1iZXIsXG4gIGdldFRpbWUsXG4gIGhhc1ZhbHVlLFxuICBpc0FycmF5LFxuICBpc0Jvb2xlYW4sXG4gIGlzRnVuY3Rpb24sXG4gIGlzRGF0ZSxcbiAgaXNEYXRlSW5zdGFuY2UsXG4gIGlzRGVmaW5lZCxcbiAgaXNFbXB0eUFycmF5LFxuICBpc0VtcHR5LFxuICBpc0VxdWFsLFxuICBpc051bWJlcixcbiAgaXNVbmRlZmluZWQsXG4gIG5vdEVtcHR5LFxuICBwYXJzZURhdGVUaW1lLFxuICBzYW5pdGl6ZSxcbiAgdmFsaWRUaWNrTGFiZWxSb3RhdGlvbnMsXG59O1xuIl0sIm5hbWVzIjpbImNvbnN0YW50cyIsIm5vdCIsImZuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwieCIsImFwcGx5IiwiaXNGdW5jdGlvbiIsIm8iLCJpc0FycmF5IiwiQXJyYXkiLCJpc0VtcHR5QXJyYXkiLCJpc1N0cmluZyIsImlzVW5kZWZpbmVkIiwidiIsImlzRGVmaW5lZCIsImlzRW1wdHkiLCJfdHlwZW9mIiwiT2JqZWN0Iiwia2V5cyIsIm5vdEVtcHR5IiwiaGFzVmFsdWUiLCJkaWN0IiwidmFsdWUiLCJzb21lIiwic2FuaXRpemUiLCJzdHIiLCJyZXBsYWNlIiwiZGVlcENsb25lIiwibWFwIiwicmVkdWNlIiwiYWNjIiwia2V5IiwiaXNEYXRlIiwiSVNPODYwMV9EQVRFX1RJTUVfTUlMTEkiLCJ0ZXN0IiwiaXNEYXRlSW5zdGFuY2UiLCJvYmoiLCJEYXRlIiwicGFyc2VEYXRlVGltZSIsImdldFRpbWUiLCJnZXROdW1iZXIiLCJuIiwiTnVtYmVyIiwiaXNOdW1iZXIiLCJpc05hTiIsImlzQm9vbGVhbiIsImlzRGF0ZUVxdWFsIiwiYSIsImIiLCJpc0VxdWFsIiwiZ2V0RXBvY0Zyb21EYXRlU3RyaW5nIiwiZGF0ZUlTTyIsInBhcnNlSW50IiwiZ2V0RGF0ZUZyb21FcG9jIiwiZXBvY0RhdGUiLCJ2YWxpZFRpY2tMYWJlbFJvdGF0aW9ucyIsIlNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/helpers/utils.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/de-DE.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/de-DE.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'de_DE',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['', ' €'],\n  dateTime: '%A, der %e. %B %Y, %X',\n  date: '%d.%m.%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  // unused\n  days: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n  shortDays: ['So,', 'Mo,', 'Di,', 'Mi,', 'Do,', 'Fr,', 'Sa,'],\n  months: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n  shortMonths: ['Jan', 'Feb', 'Mrz', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n  noData: 'Keine Daten'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZGUtREUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO0VBQ3BCQyxRQUFRLEVBQUUsdUJBQXVCO0VBQ2pDQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFBRTtFQUN2QkMsSUFBSSxFQUFFLENBQ0osU0FBUyxFQUNULFFBQVEsRUFDUixVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixTQUFTLEVBQ1QsU0FBUyxDQUNWO0VBQ0RDLFNBQVMsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQztFQUM1REMsTUFBTSxFQUFFLENBQ04sUUFBUSxFQUNSLFNBQVMsRUFDVCxNQUFNLEVBQ04sT0FBTyxFQUNQLEtBQUssRUFDTCxNQUFNLEVBQ04sTUFBTSxFQUNOLFFBQVEsRUFDUixXQUFXLEVBQ1gsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLENBQ1g7RUFDREMsV0FBVyxFQUFFLENBQ1gsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLENBQ047RUFDREMsTUFBTSxFQUFFO0FBQ1YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2xvY2FsZS9kZS1ERS5qcz82NjI1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgbG9jYWxlOiAnZGVfREUnLFxuICBkZWNpbWFsOiAnLCcsXG4gIHRob3VzYW5kczogJy4nLFxuICBncm91cGluZzogWzNdLFxuICBjdXJyZW5jeTogWycnLCAnIOKCrCddLFxuICBkYXRlVGltZTogJyVBLCBkZXIgJWUuICVCICVZLCAlWCcsXG4gIGRhdGU6ICclZC4lbS4lWScsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSwgLy8gdW51c2VkXG4gIGRheXM6IFtcbiAgICAnU29ubnRhZycsXG4gICAgJ01vbnRhZycsXG4gICAgJ0RpZW5zdGFnJyxcbiAgICAnTWl0dHdvY2gnLFxuICAgICdEb25uZXJzdGFnJyxcbiAgICAnRnJlaXRhZycsXG4gICAgJ1NhbXN0YWcnLFxuICBdLFxuICBzaG9ydERheXM6IFsnU28sJywgJ01vLCcsICdEaSwnLCAnTWksJywgJ0RvLCcsICdGciwnLCAnU2EsJ10sXG4gIG1vbnRoczogW1xuICAgICdKYW51YXInLFxuICAgICdGZWJydWFyJyxcbiAgICAnTcOkcnonLFxuICAgICdBcHJpbCcsXG4gICAgJ01haScsXG4gICAgJ0p1bmknLFxuICAgICdKdWxpJyxcbiAgICAnQXVndXN0JyxcbiAgICAnU2VwdGVtYmVyJyxcbiAgICAnT2t0b2JlcicsXG4gICAgJ05vdmVtYmVyJyxcbiAgICAnRGV6ZW1iZXInLFxuICBdLFxuICBzaG9ydE1vbnRoczogW1xuICAgICdKYW4nLFxuICAgICdGZWInLFxuICAgICdNcnonLFxuICAgICdBcHInLFxuICAgICdNYWknLFxuICAgICdKdW4nLFxuICAgICdKdWwnLFxuICAgICdBdWcnLFxuICAgICdTZXAnLFxuICAgICdPa3QnLFxuICAgICdOb3YnLFxuICAgICdEZXonLFxuICBdLFxuICBub0RhdGE6ICdLZWluZSBEYXRlbicsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/de-DE.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/en-AU.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/en-AU.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'en_AU',\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['$', ''],\n  dateTime: '%a %e %b %X %Y',\n  date: '%d/%m/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  noData: 'No Data'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tQVUuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0VBQ25CQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixRQUFRLEVBQ1IsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLEVBQ1YsUUFBUSxFQUNSLFVBQVUsQ0FDWDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsT0FBTyxFQUNQLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixRQUFRLEVBQ1IsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tQVUuanM/ZjBhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2VuX0FVJyxcbiAgZGVjaW1hbDogJy4nLFxuICB0aG91c2FuZHM6ICcsJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJCcsICcnXSxcbiAgZGF0ZVRpbWU6ICclYSAlZSAlYiAlWCAlWScsXG4gIGRhdGU6ICclZC8lbS8lWScsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSxcbiAgZGF5czogW1xuICAgICdTdW5kYXknLFxuICAgICdNb25kYXknLFxuICAgICdUdWVzZGF5JyxcbiAgICAnV2VkbmVzZGF5JyxcbiAgICAnVGh1cnNkYXknLFxuICAgICdGcmlkYXknLFxuICAgICdTYXR1cmRheScsXG4gIF0sXG4gIHNob3J0RGF5czogWydTdW4nLCAnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnXSxcbiAgbW9udGhzOiBbXG4gICAgJ0phbnVhcnknLFxuICAgICdGZWJydWFyeScsXG4gICAgJ01hcmNoJyxcbiAgICAnQXByaWwnLFxuICAgICdNYXknLFxuICAgICdKdW5lJyxcbiAgICAnSnVseScsXG4gICAgJ0F1Z3VzdCcsXG4gICAgJ1NlcHRlbWJlcicsXG4gICAgJ09jdG9iZXInLFxuICAgICdOb3ZlbWJlcicsXG4gICAgJ0RlY2VtYmVyJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnSmFuJyxcbiAgICAnRmViJyxcbiAgICAnTWFyJyxcbiAgICAnQXByJyxcbiAgICAnTWF5JyxcbiAgICAnSnVuJyxcbiAgICAnSnVsJyxcbiAgICAnQXVnJyxcbiAgICAnU2VwJyxcbiAgICAnT2N0JyxcbiAgICAnTm92JyxcbiAgICAnRGVjJyxcbiAgXSxcbiAgbm9EYXRhOiAnTm8gRGF0YScsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/en-AU.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/en-CA.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/en-CA.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'en_CA',\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['$', ''],\n  dateTime: '%a %b %e %X %Y',\n  date: '%Y-%m-%d',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  noData: 'No Data'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tQ0EuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0VBQ25CQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixRQUFRLEVBQ1IsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLEVBQ1YsUUFBUSxFQUNSLFVBQVUsQ0FDWDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsT0FBTyxFQUNQLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixRQUFRLEVBQ1IsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tQ0EuanM/YmE4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2VuX0NBJyxcbiAgZGVjaW1hbDogJy4nLFxuICB0aG91c2FuZHM6ICcsJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJCcsICcnXSxcbiAgZGF0ZVRpbWU6ICclYSAlYiAlZSAlWCAlWScsXG4gIGRhdGU6ICclWS0lbS0lZCcsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSxcbiAgZGF5czogW1xuICAgICdTdW5kYXknLFxuICAgICdNb25kYXknLFxuICAgICdUdWVzZGF5JyxcbiAgICAnV2VkbmVzZGF5JyxcbiAgICAnVGh1cnNkYXknLFxuICAgICdGcmlkYXknLFxuICAgICdTYXR1cmRheScsXG4gIF0sXG4gIHNob3J0RGF5czogWydTdW4nLCAnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnXSxcbiAgbW9udGhzOiBbXG4gICAgJ0phbnVhcnknLFxuICAgICdGZWJydWFyeScsXG4gICAgJ01hcmNoJyxcbiAgICAnQXByaWwnLFxuICAgICdNYXknLFxuICAgICdKdW5lJyxcbiAgICAnSnVseScsXG4gICAgJ0F1Z3VzdCcsXG4gICAgJ1NlcHRlbWJlcicsXG4gICAgJ09jdG9iZXInLFxuICAgICdOb3ZlbWJlcicsXG4gICAgJ0RlY2VtYmVyJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnSmFuJyxcbiAgICAnRmViJyxcbiAgICAnTWFyJyxcbiAgICAnQXByJyxcbiAgICAnTWF5JyxcbiAgICAnSnVuJyxcbiAgICAnSnVsJyxcbiAgICAnQXVnJyxcbiAgICAnU2VwJyxcbiAgICAnT2N0JyxcbiAgICAnTm92JyxcbiAgICAnRGVjJyxcbiAgXSxcbiAgbm9EYXRhOiAnTm8gRGF0YScsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/en-CA.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/en-GB.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/en-GB.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'en_GB',\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['£', ''],\n  dateTime: '%a %e %b %X %Y',\n  date: '%d/%m/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  noData: 'No Data'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tR0IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0VBQ25CQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixRQUFRLEVBQ1IsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLEVBQ1YsUUFBUSxFQUNSLFVBQVUsQ0FDWDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsT0FBTyxFQUNQLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixRQUFRLEVBQ1IsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tR0IuanM/NzY1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2VuX0dCJyxcbiAgZGVjaW1hbDogJy4nLFxuICB0aG91c2FuZHM6ICcsJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnwqMnLCAnJ10sXG4gIGRhdGVUaW1lOiAnJWEgJWUgJWIgJVggJVknLFxuICBkYXRlOiAnJWQvJW0vJVknLFxuICB0aW1lOiAnJUg6JU06JVMnLFxuICBwZXJpb2RzOiBbJ0FNJywgJ1BNJ10sXG4gIGRheXM6IFtcbiAgICAnU3VuZGF5JyxcbiAgICAnTW9uZGF5JyxcbiAgICAnVHVlc2RheScsXG4gICAgJ1dlZG5lc2RheScsXG4gICAgJ1RodXJzZGF5JyxcbiAgICAnRnJpZGF5JyxcbiAgICAnU2F0dXJkYXknLFxuICBdLFxuICBzaG9ydERheXM6IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J10sXG4gIG1vbnRoczogW1xuICAgICdKYW51YXJ5JyxcbiAgICAnRmVicnVhcnknLFxuICAgICdNYXJjaCcsXG4gICAgJ0FwcmlsJyxcbiAgICAnTWF5JyxcbiAgICAnSnVuZScsXG4gICAgJ0p1bHknLFxuICAgICdBdWd1c3QnLFxuICAgICdTZXB0ZW1iZXInLFxuICAgICdPY3RvYmVyJyxcbiAgICAnTm92ZW1iZXInLFxuICAgICdEZWNlbWJlcicsXG4gIF0sXG4gIHNob3J0TW9udGhzOiBbXG4gICAgJ0phbicsXG4gICAgJ0ZlYicsXG4gICAgJ01hcicsXG4gICAgJ0FwcicsXG4gICAgJ01heScsXG4gICAgJ0p1bicsXG4gICAgJ0p1bCcsXG4gICAgJ0F1ZycsXG4gICAgJ1NlcCcsXG4gICAgJ09jdCcsXG4gICAgJ05vdicsXG4gICAgJ0RlYycsXG4gIF0sXG4gIG5vRGF0YTogJ05vIERhdGEnLFxufTtcbiJdLCJuYW1lcyI6WyJsb2NhbGUiLCJkZWNpbWFsIiwidGhvdXNhbmRzIiwiZ3JvdXBpbmciLCJjdXJyZW5jeSIsImRhdGVUaW1lIiwiZGF0ZSIsInRpbWUiLCJwZXJpb2RzIiwiZGF5cyIsInNob3J0RGF5cyIsIm1vbnRocyIsInNob3J0TW9udGhzIiwibm9EYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/en-GB.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/en-US.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/en-US.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'en_US',\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['$', ''],\n  dateTime: '%a %b %e %X %Y',\n  date: '%m/%d/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  noData: 'No Data'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tVVMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO0VBQ25CQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixRQUFRLEVBQ1IsU0FBUyxFQUNULFdBQVcsRUFDWCxVQUFVLEVBQ1YsUUFBUSxFQUNSLFVBQVUsQ0FDWDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsT0FBTyxFQUNQLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixRQUFRLEVBQ1IsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZW4tVVMuanM/YWNmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2VuX1VTJyxcbiAgZGVjaW1hbDogJy4nLFxuICB0aG91c2FuZHM6ICcsJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJCcsICcnXSxcbiAgZGF0ZVRpbWU6ICclYSAlYiAlZSAlWCAlWScsXG4gIGRhdGU6ICclbS8lZC8lWScsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSxcbiAgZGF5czogW1xuICAgICdTdW5kYXknLFxuICAgICdNb25kYXknLFxuICAgICdUdWVzZGF5JyxcbiAgICAnV2VkbmVzZGF5JyxcbiAgICAnVGh1cnNkYXknLFxuICAgICdGcmlkYXknLFxuICAgICdTYXR1cmRheScsXG4gIF0sXG4gIHNob3J0RGF5czogWydTdW4nLCAnTW9uJywgJ1R1ZScsICdXZWQnLCAnVGh1JywgJ0ZyaScsICdTYXQnXSxcbiAgbW9udGhzOiBbXG4gICAgJ0phbnVhcnknLFxuICAgICdGZWJydWFyeScsXG4gICAgJ01hcmNoJyxcbiAgICAnQXByaWwnLFxuICAgICdNYXknLFxuICAgICdKdW5lJyxcbiAgICAnSnVseScsXG4gICAgJ0F1Z3VzdCcsXG4gICAgJ1NlcHRlbWJlcicsXG4gICAgJ09jdG9iZXInLFxuICAgICdOb3ZlbWJlcicsXG4gICAgJ0RlY2VtYmVyJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnSmFuJyxcbiAgICAnRmViJyxcbiAgICAnTWFyJyxcbiAgICAnQXByJyxcbiAgICAnTWF5JyxcbiAgICAnSnVuJyxcbiAgICAnSnVsJyxcbiAgICAnQXVnJyxcbiAgICAnU2VwJyxcbiAgICAnT2N0JyxcbiAgICAnTm92JyxcbiAgICAnRGVjJyxcbiAgXSxcbiAgbm9EYXRhOiAnTm8gRGF0YScsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/en-US.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/es-ES.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/es-ES.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'en_ES',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['', ' €'],\n  dateTime: '%A, %e de %B de %Y, %X',\n  date: '%d/%m/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\n  shortDays: ['dom.', 'lun.', 'mar.', 'mié.', 'jue.', 'vie.', 'sáb.'],\n  months: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n  shortMonths: ['ene.', 'feb.', 'mar.', 'abr.', 'may.', 'jun.', 'jul.', 'ago.', 'sep.', 'oct.', 'nov.', 'dic.'],\n  noData: 'Sin datos'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZXMtRVMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO0VBQ3BCQyxRQUFRLEVBQUUsd0JBQXdCO0VBQ2xDQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFNBQVMsRUFDVCxPQUFPLEVBQ1AsUUFBUSxFQUNSLFdBQVcsRUFDWCxRQUFRLEVBQ1IsU0FBUyxFQUNULFFBQVEsQ0FDVDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUM7RUFDbkVDLE1BQU0sRUFBRSxDQUNOLE9BQU8sRUFDUCxTQUFTLEVBQ1QsT0FBTyxFQUNQLE9BQU8sRUFDUCxNQUFNLEVBQ04sT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsWUFBWSxFQUNaLFNBQVMsRUFDVCxXQUFXLEVBQ1gsV0FBVyxDQUNaO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLE1BQU0sRUFDTixNQUFNLEVBQ04sTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLEVBQ04sTUFBTSxDQUNQO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZXMtRVMuanM/OGYwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2VuX0VTJyxcbiAgZGVjaW1hbDogJywnLFxuICB0aG91c2FuZHM6ICcuJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJywgJyDigqwnXSxcbiAgZGF0ZVRpbWU6ICclQSwgJWUgZGUgJUIgZGUgJVksICVYJyxcbiAgZGF0ZTogJyVkLyVtLyVZJyxcbiAgdGltZTogJyVIOiVNOiVTJyxcbiAgcGVyaW9kczogWydBTScsICdQTSddLFxuICBkYXlzOiBbXG4gICAgJ2RvbWluZ28nLFxuICAgICdsdW5lcycsXG4gICAgJ21hcnRlcycsXG4gICAgJ21pw6lyY29sZXMnLFxuICAgICdqdWV2ZXMnLFxuICAgICd2aWVybmVzJyxcbiAgICAnc8OhYmFkbycsXG4gIF0sXG4gIHNob3J0RGF5czogWydkb20uJywgJ2x1bi4nLCAnbWFyLicsICdtacOpLicsICdqdWUuJywgJ3ZpZS4nLCAnc8OhYi4nXSxcbiAgbW9udGhzOiBbXG4gICAgJ2VuZXJvJyxcbiAgICAnZmVicmVybycsXG4gICAgJ21hcnpvJyxcbiAgICAnYWJyaWwnLFxuICAgICdtYXlvJyxcbiAgICAnanVuaW8nLFxuICAgICdqdWxpbycsXG4gICAgJ2Fnb3N0bycsXG4gICAgJ3NlcHRpZW1icmUnLFxuICAgICdvY3R1YnJlJyxcbiAgICAnbm92aWVtYnJlJyxcbiAgICAnZGljaWVtYnJlJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnZW5lLicsXG4gICAgJ2ZlYi4nLFxuICAgICdtYXIuJyxcbiAgICAnYWJyLicsXG4gICAgJ21heS4nLFxuICAgICdqdW4uJyxcbiAgICAnanVsLicsXG4gICAgJ2Fnby4nLFxuICAgICdzZXAuJyxcbiAgICAnb2N0LicsXG4gICAgJ25vdi4nLFxuICAgICdkaWMuJyxcbiAgXSxcbiAgbm9EYXRhOiAnU2luIGRhdG9zJyxcbn07XG4iXSwibmFtZXMiOlsibG9jYWxlIiwiZGVjaW1hbCIsInRob3VzYW5kcyIsImdyb3VwaW5nIiwiY3VycmVuY3kiLCJkYXRlVGltZSIsImRhdGUiLCJ0aW1lIiwicGVyaW9kcyIsImRheXMiLCJzaG9ydERheXMiLCJtb250aHMiLCJzaG9ydE1vbnRocyIsIm5vRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/es-ES.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/fr-FR.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/fr-FR.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'fr_FR',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['', ' €'],\n  dateTime: '%A, le %e %B %Y, %X',\n  date: '%d/%m/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  // unused\n  days: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n  shortDays: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n  months: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n  shortMonths: ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n  noData: 'Aucune donnée'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvZnItRlIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDO0VBQ3BCQyxRQUFRLEVBQUUscUJBQXFCO0VBQy9CQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFBRTtFQUN2QkMsSUFBSSxFQUFFLENBQ0osVUFBVSxFQUNWLE9BQU8sRUFDUCxPQUFPLEVBQ1AsVUFBVSxFQUNWLE9BQU8sRUFDUCxVQUFVLEVBQ1YsUUFBUSxDQUNUO0VBQ0RDLFNBQVMsRUFBRSxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQztFQUNuRUMsTUFBTSxFQUFFLENBQ04sU0FBUyxFQUNULFNBQVMsRUFDVCxNQUFNLEVBQ04sT0FBTyxFQUNQLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULE1BQU0sRUFDTixXQUFXLEVBQ1gsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLENBQ1g7RUFDREMsV0FBVyxFQUFFLENBQ1gsT0FBTyxFQUNQLE9BQU8sRUFDUCxNQUFNLEVBQ04sTUFBTSxFQUNOLEtBQUssRUFDTCxNQUFNLEVBQ04sT0FBTyxFQUNQLE1BQU0sRUFDTixPQUFPLEVBQ1AsTUFBTSxFQUNOLE1BQU0sRUFDTixNQUFNLENBQ1A7RUFDREMsTUFBTSxFQUFFO0FBQ1YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RlcnJhLWdyYXBocy8uL3BhY2thZ2VzL2NhcmJvbi1ncmFwaHMvc3JjL2pzL2xvY2FsZS9mci1GUi5qcz9hODA3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHtcbiAgbG9jYWxlOiAnZnJfRlInLFxuICBkZWNpbWFsOiAnLCcsXG4gIHRob3VzYW5kczogJy4nLFxuICBncm91cGluZzogWzNdLFxuICBjdXJyZW5jeTogWycnLCAnIOKCrCddLFxuICBkYXRlVGltZTogJyVBLCBsZSAlZSAlQiAlWSwgJVgnLFxuICBkYXRlOiAnJWQvJW0vJVknLFxuICB0aW1lOiAnJUg6JU06JVMnLFxuICBwZXJpb2RzOiBbJ0FNJywgJ1BNJ10sIC8vIHVudXNlZFxuICBkYXlzOiBbXG4gICAgJ2RpbWFuY2hlJyxcbiAgICAnbHVuZGknLFxuICAgICdtYXJkaScsXG4gICAgJ21lcmNyZWRpJyxcbiAgICAnamV1ZGknLFxuICAgICd2ZW5kcmVkaScsXG4gICAgJ3NhbWVkaScsXG4gIF0sXG4gIHNob3J0RGF5czogWydkaW0uJywgJ2x1bi4nLCAnbWFyLicsICdtZXIuJywgJ2pldS4nLCAndmVuLicsICdzYW0uJ10sXG4gIG1vbnRoczogW1xuICAgICdqYW52aWVyJyxcbiAgICAnZsOpdnJpZXInLFxuICAgICdtYXJzJyxcbiAgICAnYXZyaWwnLFxuICAgICdtYWknLFxuICAgICdqdWluJyxcbiAgICAnanVpbGxldCcsXG4gICAgJ2Fvw7t0JyxcbiAgICAnc2VwdGVtYnJlJyxcbiAgICAnb2N0b2JyZScsXG4gICAgJ25vdmVtYnJlJyxcbiAgICAnZMOpY2VtYnJlJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnamFudi4nLFxuICAgICdmw6l2ci4nLFxuICAgICdtYXJzJyxcbiAgICAnYXZyLicsXG4gICAgJ21haScsXG4gICAgJ2p1aW4nLFxuICAgICdqdWlsLicsXG4gICAgJ2Fvw7t0JyxcbiAgICAnc2VwdC4nLFxuICAgICdvY3QuJyxcbiAgICAnbm92LicsXG4gICAgJ2TDqWMuJyxcbiAgXSxcbiAgbm9EYXRhOiAnQXVjdW5lIGRvbm7DqWUnLFxufTtcbiJdLCJuYW1lcyI6WyJsb2NhbGUiLCJkZWNpbWFsIiwidGhvdXNhbmRzIiwiZ3JvdXBpbmciLCJjdXJyZW5jeSIsImRhdGVUaW1lIiwiZGF0ZSIsInRpbWUiLCJwZXJpb2RzIiwiZGF5cyIsInNob3J0RGF5cyIsIm1vbnRocyIsInNob3J0TW9udGhzIiwibm9EYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/fr-FR.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/index.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_LOCALE: function() { return /* binding */ DEFAULT_LOCALE; },\n/* harmony export */   DEFAULT_TICK_FORMAT: function() { return /* binding */ DEFAULT_TICK_FORMAT; }\n/* harmony export */ });\n/* harmony import */ var _de_DE__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./de-DE */ \"./packages/carbon-graphs/src/js/locale/de-DE.js\");\n/* harmony import */ var _en_AU__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./en-AU */ \"./packages/carbon-graphs/src/js/locale/en-AU.js\");\n/* harmony import */ var _en_CA__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./en-CA */ \"./packages/carbon-graphs/src/js/locale/en-CA.js\");\n/* harmony import */ var _en_GB__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./en-GB */ \"./packages/carbon-graphs/src/js/locale/en-GB.js\");\n/* harmony import */ var _en_US__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./en-US */ \"./packages/carbon-graphs/src/js/locale/en-US.js\");\n/* harmony import */ var _es_ES__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./es-ES */ \"./packages/carbon-graphs/src/js/locale/es-ES.js\");\n/* harmony import */ var _fr_FR__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fr-FR */ \"./packages/carbon-graphs/src/js/locale/fr-FR.js\");\n/* harmony import */ var _ja_JP__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ja-JP */ \"./packages/carbon-graphs/src/js/locale/ja-JP.js\");\n/* harmony import */ var _pt_BR__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pt-BR */ \"./packages/carbon-graphs/src/js/locale/pt-BR.js\");\n/* harmony import */ var _nl_NL__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./nl-NL */ \"./packages/carbon-graphs/src/js/locale/nl-NL.js\");\n/* harmony import */ var _sv_SE__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sv-SE */ \"./packages/carbon-graphs/src/js/locale/sv-SE.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Tick format is null for default d3 tick formatting\n *\n * @private\n * @type {null}\n */\nvar DEFAULT_TICK_FORMAT = null;\n/**\n * `en_US` default locale.\n * Axes revert to this locale if none is provided\n *\n * @private\n * @type {object}\n */\nvar DEFAULT_LOCALE = _en_US__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n/**\n * Locale objects serving as a default set. Consumer can provide a set of properties that\n * axes ticks will honor when the locale is set.\n *\n * @public\n * @property {object} de_DE Carbon locale DE\n * @property {object} en_AU Carbon locale AU\n * @property {object} en_CA Carbon locale CA\n * @property {object} en_GB Carbon locale GB\n * @property {object} en_US Carbon locale default\n * @property {object} es_ES Carbon locale ES\n * @property {object} fr_FR Carbon locale FR\n * @property {object} pt_BR Carbon locale BR\n * @property {object} ja_JP Carbon locale JP\n * @property {object} nl_NL Carbon locale NL\n * @property {object} sv_SE Carbon locale SE\n * @type {{de_DE: *, en_AU: *, en_CA: *, en_GB: *, en_US: *, es_ES: *, fr_FR: *, pt_BR: *, ja_JP: *, nl_NL: *, sv_SE: *}}\n */\nvar LOCALE = {\n  de_DE: _de_DE__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  en_AU: _en_AU__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  en_CA: _en_CA__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  en_GB: _en_GB__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  en_US: _en_US__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  es_ES: _es_ES__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  fr_FR: _fr_FR__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  pt_BR: _pt_BR__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  ja_JP: _ja_JP__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  nl_NL: _nl_NL__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  sv_SE: _sv_SE__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (LOCALE);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxJQUFNVyxtQkFBbUIsR0FBRyxJQUFJO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sSUFBTUMsY0FBYyxHQUFHUiw4Q0FBRTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNUyxNQUFNLEdBQUc7RUFDYkMsS0FBSyxFQUFFZCw4Q0FBRTtFQUNUZSxLQUFLLEVBQUVkLDhDQUFFO0VBQ1RlLEtBQUssRUFBRWQsOENBQUU7RUFDVGUsS0FBSyxFQUFFZCw4Q0FBRTtFQUNUZSxLQUFLLEVBQUVkLDhDQUFFO0VBQ1RlLEtBQUssRUFBRWQsOENBQUU7RUFDVGUsS0FBSyxFQUFFZCw4Q0FBRTtFQUNUZSxLQUFLLEVBQUViLDhDQUFFO0VBQ1RjLEtBQUssRUFBRWYsOENBQUU7RUFDVGdCLEtBQUssRUFBRWQsOENBQUU7RUFDVGUsS0FBSyxFQUFFZCwrQ0FBRUE7QUFDWCxDQUFDO0FBQ0QsK0RBQWVHLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvaW5kZXguanM/OTk5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGUgZnJvbSAnLi9kZS1ERSc7XG5pbXBvcnQgYXUgZnJvbSAnLi9lbi1BVSc7XG5pbXBvcnQgY2EgZnJvbSAnLi9lbi1DQSc7XG5pbXBvcnQgZ2IgZnJvbSAnLi9lbi1HQic7XG5pbXBvcnQgdXMgZnJvbSAnLi9lbi1VUyc7XG5pbXBvcnQgZXMgZnJvbSAnLi9lcy1FUyc7XG5pbXBvcnQgZnIgZnJvbSAnLi9mci1GUic7XG5pbXBvcnQganAgZnJvbSAnLi9qYS1KUCc7XG5pbXBvcnQgYnIgZnJvbSAnLi9wdC1CUic7XG5pbXBvcnQgbmwgZnJvbSAnLi9ubC1OTCc7XG5pbXBvcnQgc3YgZnJvbSAnLi9zdi1TRSc7XG5cbi8qKlxuICogVGljayBmb3JtYXQgaXMgbnVsbCBmb3IgZGVmYXVsdCBkMyB0aWNrIGZvcm1hdHRpbmdcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHR5cGUge251bGx9XG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RJQ0tfRk9STUFUID0gbnVsbDtcbi8qKlxuICogYGVuX1VTYCBkZWZhdWx0IGxvY2FsZS5cbiAqIEF4ZXMgcmV2ZXJ0IHRvIHRoaXMgbG9jYWxlIGlmIG5vbmUgaXMgcHJvdmlkZWRcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHR5cGUge29iamVjdH1cbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfTE9DQUxFID0gdXM7XG4vKipcbiAqIExvY2FsZSBvYmplY3RzIHNlcnZpbmcgYXMgYSBkZWZhdWx0IHNldC4gQ29uc3VtZXIgY2FuIHByb3ZpZGUgYSBzZXQgb2YgcHJvcGVydGllcyB0aGF0XG4gKiBheGVzIHRpY2tzIHdpbGwgaG9ub3Igd2hlbiB0aGUgbG9jYWxlIGlzIHNldC5cbiAqXG4gKiBAcHVibGljXG4gKiBAcHJvcGVydHkge29iamVjdH0gZGVfREUgQ2FyYm9uIGxvY2FsZSBERVxuICogQHByb3BlcnR5IHtvYmplY3R9IGVuX0FVIENhcmJvbiBsb2NhbGUgQVVcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBlbl9DQSBDYXJib24gbG9jYWxlIENBXG4gKiBAcHJvcGVydHkge29iamVjdH0gZW5fR0IgQ2FyYm9uIGxvY2FsZSBHQlxuICogQHByb3BlcnR5IHtvYmplY3R9IGVuX1VTIENhcmJvbiBsb2NhbGUgZGVmYXVsdFxuICogQHByb3BlcnR5IHtvYmplY3R9IGVzX0VTIENhcmJvbiBsb2NhbGUgRVNcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBmcl9GUiBDYXJib24gbG9jYWxlIEZSXG4gKiBAcHJvcGVydHkge29iamVjdH0gcHRfQlIgQ2FyYm9uIGxvY2FsZSBCUlxuICogQHByb3BlcnR5IHtvYmplY3R9IGphX0pQIENhcmJvbiBsb2NhbGUgSlBcbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBubF9OTCBDYXJib24gbG9jYWxlIE5MXG4gKiBAcHJvcGVydHkge29iamVjdH0gc3ZfU0UgQ2FyYm9uIGxvY2FsZSBTRVxuICogQHR5cGUge3tkZV9ERTogKiwgZW5fQVU6ICosIGVuX0NBOiAqLCBlbl9HQjogKiwgZW5fVVM6ICosIGVzX0VTOiAqLCBmcl9GUjogKiwgcHRfQlI6ICosIGphX0pQOiAqLCBubF9OTDogKiwgc3ZfU0U6ICp9fVxuICovXG5jb25zdCBMT0NBTEUgPSB7XG4gIGRlX0RFOiBkZSxcbiAgZW5fQVU6IGF1LFxuICBlbl9DQTogY2EsXG4gIGVuX0dCOiBnYixcbiAgZW5fVVM6IHVzLFxuICBlc19FUzogZXMsXG4gIGZyX0ZSOiBmcixcbiAgcHRfQlI6IGJyLFxuICBqYV9KUDoganAsXG4gIG5sX05MOiBubCxcbiAgc3ZfU0U6IHN2LFxufTtcbmV4cG9ydCBkZWZhdWx0IExPQ0FMRTtcbiJdLCJuYW1lcyI6WyJkZSIsImF1IiwiY2EiLCJnYiIsInVzIiwiZXMiLCJmciIsImpwIiwiYnIiLCJubCIsInN2IiwiREVGQVVMVF9USUNLX0ZPUk1BVCIsIkRFRkFVTFRfTE9DQUxFIiwiTE9DQUxFIiwiZGVfREUiLCJlbl9BVSIsImVuX0NBIiwiZW5fR0IiLCJlbl9VUyIsImVzX0VTIiwiZnJfRlIiLCJwdF9CUiIsImphX0pQIiwibmxfTkwiLCJzdl9TRSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/index.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/ja-JP.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/ja-JP.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'ja_JP',\n  decimal: '.',\n  thousands: ',',\n  grouping: [3],\n  currency: ['', '円'],\n  dateTime: '%Y %b %e %a %X',\n  date: '%Y/%m/%d',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],\n  shortDays: ['日', '月', '火', '水', '木', '金', '土'],\n  months: ['睦月', '如月', '弥生', '卯月', '皐月', '水無月', '文月', '葉月', '長月', '神無月', '霜月', '師走'],\n  shortMonths: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n  noData: 'データなし'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvamEtSlAuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDO0VBQ25CQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssQ0FDTjtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7RUFDOUNDLE1BQU0sRUFBRSxDQUNOLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osS0FBSyxFQUNMLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLEtBQUssRUFDTCxJQUFJLEVBQ0osSUFBSSxDQUNMO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvamEtSlAuanM/NzQ5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ2phX0pQJyxcbiAgZGVjaW1hbDogJy4nLFxuICB0aG91c2FuZHM6ICcsJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJywgJ+WGhiddLFxuICBkYXRlVGltZTogJyVZICViICVlICVhICVYJyxcbiAgZGF0ZTogJyVZLyVtLyVkJyxcbiAgdGltZTogJyVIOiVNOiVTJyxcbiAgcGVyaW9kczogWydBTScsICdQTSddLFxuICBkYXlzOiBbXG4gICAgJ+aXpeabnOaXpScsXG4gICAgJ+aciOabnOaXpScsXG4gICAgJ+eBq+abnOaXpScsXG4gICAgJ+awtOabnOaXpScsXG4gICAgJ+acqOabnOaXpScsXG4gICAgJ+mHkeabnOaXpScsXG4gICAgJ+Wcn+abnOaXpScsXG4gIF0sXG4gIHNob3J0RGF5czogWyfml6UnLCAn5pyIJywgJ+eBqycsICfmsLQnLCAn5pyoJywgJ+mHkScsICflnJ8nXSxcbiAgbW9udGhzOiBbXG4gICAgJ+edpuaciCcsXG4gICAgJ+WmguaciCcsXG4gICAgJ+W8peeUnycsXG4gICAgJ+WNr+aciCcsXG4gICAgJ+eakOaciCcsXG4gICAgJ+awtOeEoeaciCcsXG4gICAgJ+aWh+aciCcsXG4gICAgJ+iRieaciCcsXG4gICAgJ+mVt+aciCcsXG4gICAgJ+elnueEoeaciCcsXG4gICAgJ+mcnOaciCcsXG4gICAgJ+W4q+i1sCcsXG4gIF0sXG4gIHNob3J0TW9udGhzOiBbXG4gICAgJzHmnIgnLFxuICAgICcy5pyIJyxcbiAgICAnM+aciCcsXG4gICAgJzTmnIgnLFxuICAgICc15pyIJyxcbiAgICAnNuaciCcsXG4gICAgJzfmnIgnLFxuICAgICc45pyIJyxcbiAgICAnOeaciCcsXG4gICAgJzEw5pyIJyxcbiAgICAnMTHmnIgnLFxuICAgICcxMuaciCcsXG4gIF0sXG4gIG5vRGF0YTogJ+ODh+ODvOOCv+OBquOBlycsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/ja-JP.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/nl-NL.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/nl-NL.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'nl_NL',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['€ ', ''],\n  dateTime: '%a %e %B %Y %T',\n  date: '%d-%m-%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n  shortDays: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n  months: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n  shortMonths: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n  noData: 'Geen gegevens'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvbmwtTkwuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDO0VBQ3BCQyxRQUFRLEVBQUUsZ0JBQWdCO0VBQzFCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixTQUFTLEVBQ1QsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsU0FBUyxFQUNULFVBQVUsQ0FDWDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckRDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsT0FBTyxFQUNQLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixVQUFVLEVBQ1YsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvbmwtTkwuanM/Mjg0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ25sX05MJyxcbiAgZGVjaW1hbDogJywnLFxuICB0aG91c2FuZHM6ICcuJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsn4oKsICcsICcnXSxcbiAgZGF0ZVRpbWU6ICclYSAlZSAlQiAlWSAlVCcsXG4gIGRhdGU6ICclZC0lbS0lWScsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSxcbiAgZGF5czogW1xuICAgICd6b25kYWcnLFxuICAgICdtYWFuZGFnJyxcbiAgICAnZGluc2RhZycsXG4gICAgJ3dvZW5zZGFnJyxcbiAgICAnZG9uZGVyZGFnJyxcbiAgICAndnJpamRhZycsXG4gICAgJ3phdGVyZGFnJyxcbiAgXSxcbiAgc2hvcnREYXlzOiBbJ3pvJywgJ21hJywgJ2RpJywgJ3dvJywgJ2RvJywgJ3ZyJywgJ3phJ10sXG4gIG1vbnRoczogW1xuICAgICdqYW51YXJpJyxcbiAgICAnZmVicnVhcmknLFxuICAgICdtYWFydCcsXG4gICAgJ2FwcmlsJyxcbiAgICAnbWVpJyxcbiAgICAnanVuaScsXG4gICAgJ2p1bGknLFxuICAgICdhdWd1c3R1cycsXG4gICAgJ3NlcHRlbWJlcicsXG4gICAgJ29rdG9iZXInLFxuICAgICdub3ZlbWJlcicsXG4gICAgJ2RlY2VtYmVyJyxcbiAgXSxcbiAgc2hvcnRNb250aHM6IFtcbiAgICAnamFuJyxcbiAgICAnZmViJyxcbiAgICAnbXJ0JyxcbiAgICAnYXByJyxcbiAgICAnbWVpJyxcbiAgICAnanVuJyxcbiAgICAnanVsJyxcbiAgICAnYXVnJyxcbiAgICAnc2VwJyxcbiAgICAnb2t0JyxcbiAgICAnbm92JyxcbiAgICAnZGVjJyxcbiAgXSxcbiAgbm9EYXRhOiAnR2VlbiBnZWdldmVucycsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/nl-NL.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/pt-BR.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/pt-BR.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'pt_BR',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['R$', ''],\n  dateTime: '%A, %e de %B de %Y. %X',\n  date: '%d/%m/%Y',\n  time: '%H:%M:%S',\n  periods: ['AM', 'PM'],\n  days: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],\n  shortDays: ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'],\n  months: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n  shortMonths: ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'],\n  noData: 'Sem dados'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvcHQtQlIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDO0VBQ3BCQyxRQUFRLEVBQUUsd0JBQXdCO0VBQ2xDQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFNBQVMsRUFDVCxTQUFTLEVBQ1QsT0FBTyxFQUNQLFFBQVEsRUFDUixRQUFRLEVBQ1IsT0FBTyxFQUNQLFFBQVEsQ0FDVDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsT0FBTyxFQUNQLE9BQU8sRUFDUCxNQUFNLEVBQ04sT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsVUFBVSxFQUNWLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvcHQtQlIuanM/MGJiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ3B0X0JSJyxcbiAgZGVjaW1hbDogJywnLFxuICB0aG91c2FuZHM6ICcuJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnUiQnLCAnJ10sXG4gIGRhdGVUaW1lOiAnJUEsICVlIGRlICVCIGRlICVZLiAlWCcsXG4gIGRhdGU6ICclZC8lbS8lWScsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnQU0nLCAnUE0nXSxcbiAgZGF5czogW1xuICAgICdEb21pbmdvJyxcbiAgICAnU2VndW5kYScsXG4gICAgJ1RlcsOnYScsXG4gICAgJ1F1YXJ0YScsXG4gICAgJ1F1aW50YScsXG4gICAgJ1NleHRhJyxcbiAgICAnU8OhYmFkbycsXG4gIF0sXG4gIHNob3J0RGF5czogWydkb20nLCAnc2VnJywgJ3RlcicsICdxdWEnLCAncXVpJywgJ3NleCcsICdzw6FiJ10sXG4gIG1vbnRoczogW1xuICAgICdKYW5laXJvJyxcbiAgICAnRmV2ZXJlaXJvJyxcbiAgICAnTWFyw6dvJyxcbiAgICAnQWJyaWwnLFxuICAgICdNYWlvJyxcbiAgICAnSnVuaG8nLFxuICAgICdKdWxobycsXG4gICAgJ0Fnb3N0bycsXG4gICAgJ1NldGVtYnJvJyxcbiAgICAnT3V0dWJybycsXG4gICAgJ05vdmVtYnJvJyxcbiAgICAnRGV6ZW1icm8nLFxuICBdLFxuICBzaG9ydE1vbnRoczogW1xuICAgICdqYW4nLFxuICAgICdmZXYnLFxuICAgICdtYXInLFxuICAgICdhYnInLFxuICAgICdtYWknLFxuICAgICdqdW4nLFxuICAgICdqdWwnLFxuICAgICdhZ28nLFxuICAgICdzZXQnLFxuICAgICdvdXQnLFxuICAgICdub3YnLFxuICAgICdkZXonLFxuICBdLFxuICBub0RhdGE6ICdTZW0gZGFkb3MnLFxufTtcbiJdLCJuYW1lcyI6WyJsb2NhbGUiLCJkZWNpbWFsIiwidGhvdXNhbmRzIiwiZ3JvdXBpbmciLCJjdXJyZW5jeSIsImRhdGVUaW1lIiwiZGF0ZSIsInRpbWUiLCJwZXJpb2RzIiwiZGF5cyIsInNob3J0RGF5cyIsIm1vbnRocyIsInNob3J0TW9udGhzIiwibm9EYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/pt-BR.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/src/js/locale/sv-SE.js":
/*!*******************************************************!*\
  !*** ./packages/carbon-graphs/src/js/locale/sv-SE.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  locale: 'sv_SE',\n  decimal: ',',\n  thousands: '.',\n  grouping: [3],\n  currency: ['', ' kr'],\n  dateTime: '%A den %d %B %Y %X',\n  date: '%Y-%m-%d',\n  time: '%H:%M:%S',\n  periods: ['fm', 'em'],\n  days: ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'],\n  shortDays: ['Sön', 'Mån', 'Tis', 'Ons', 'Tor', 'Fre', 'Lör'],\n  months: ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'],\n  shortMonths: ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n  noData: 'Ingen information'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvc3YtU0UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlO0VBQ2JBLE1BQU0sRUFBRSxPQUFPO0VBQ2ZDLE9BQU8sRUFBRSxHQUFHO0VBQ1pDLFNBQVMsRUFBRSxHQUFHO0VBQ2RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztFQUNiQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDO0VBQ3JCQyxRQUFRLEVBQUUsb0JBQW9CO0VBQzlCQyxJQUFJLEVBQUUsVUFBVTtFQUNoQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLE9BQU8sRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDckJDLElBQUksRUFBRSxDQUNKLFFBQVEsRUFDUixRQUFRLEVBQ1IsUUFBUSxFQUNSLFFBQVEsRUFDUixTQUFTLEVBQ1QsUUFBUSxFQUNSLFFBQVEsQ0FDVDtFQUNEQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUM7RUFDNURDLE1BQU0sRUFBRSxDQUNOLFNBQVMsRUFDVCxVQUFVLEVBQ1YsTUFBTSxFQUNOLE9BQU8sRUFDUCxLQUFLLEVBQ0wsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsRUFDVCxVQUFVLEVBQ1YsVUFBVSxDQUNYO0VBQ0RDLFdBQVcsRUFBRSxDQUNYLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxLQUFLLEVBQ0wsS0FBSyxDQUNOO0VBQ0RDLE1BQU0sRUFBRTtBQUNWLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZXJyYS1ncmFwaHMvLi9wYWNrYWdlcy9jYXJib24tZ3JhcGhzL3NyYy9qcy9sb2NhbGUvc3YtU0UuanM/NDVlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGxvY2FsZTogJ3N2X1NFJyxcbiAgZGVjaW1hbDogJywnLFxuICB0aG91c2FuZHM6ICcuJyxcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFsnJywgJyBrciddLFxuICBkYXRlVGltZTogJyVBIGRlbiAlZCAlQiAlWSAlWCcsXG4gIGRhdGU6ICclWS0lbS0lZCcsXG4gIHRpbWU6ICclSDolTTolUycsXG4gIHBlcmlvZHM6IFsnZm0nLCAnZW0nXSxcbiAgZGF5czogW1xuICAgICdTw7ZuZGFnJyxcbiAgICAnTcOlbmRhZycsXG4gICAgJ1Rpc2RhZycsXG4gICAgJ09uc2RhZycsXG4gICAgJ1RvcnNkYWcnLFxuICAgICdGcmVkYWcnLFxuICAgICdMw7ZyZGFnJyxcbiAgXSxcbiAgc2hvcnREYXlzOiBbJ1PDtm4nLCAnTcOlbicsICdUaXMnLCAnT25zJywgJ1RvcicsICdGcmUnLCAnTMO2ciddLFxuICBtb250aHM6IFtcbiAgICAnSmFudWFyaScsXG4gICAgJ0ZlYnJ1YXJpJyxcbiAgICAnTWFycycsXG4gICAgJ0FwcmlsJyxcbiAgICAnTWFqJyxcbiAgICAnSnVuaScsXG4gICAgJ0p1bGknLFxuICAgICdBdWd1c3RpJyxcbiAgICAnU2VwdGVtYmVyJyxcbiAgICAnT2t0b2JlcicsXG4gICAgJ05vdmVtYmVyJyxcbiAgICAnRGVjZW1iZXInLFxuICBdLFxuICBzaG9ydE1vbnRoczogW1xuICAgICdqYW4nLFxuICAgICdmZWInLFxuICAgICdtYXInLFxuICAgICdhcHInLFxuICAgICdtYWonLFxuICAgICdqdW4nLFxuICAgICdqdWwnLFxuICAgICdhdWcnLFxuICAgICdzZXAnLFxuICAgICdva3QnLFxuICAgICdub3YnLFxuICAgICdkZWMnLFxuICBdLFxuICBub0RhdGE6ICdJbmdlbiBpbmZvcm1hdGlvbicsXG59O1xuIl0sIm5hbWVzIjpbImxvY2FsZSIsImRlY2ltYWwiLCJ0aG91c2FuZHMiLCJncm91cGluZyIsImN1cnJlbmN5IiwiZGF0ZVRpbWUiLCJkYXRlIiwidGltZSIsInBlcmlvZHMiLCJkYXlzIiwic2hvcnREYXlzIiwibW9udGhzIiwic2hvcnRNb250aHMiLCJub0RhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/carbon-graphs/src/js/locale/sv-SE.js\n");

/***/ }),

/***/ "./packages/carbon-graphs/package.json":
/*!*********************************************!*\
  !*** ./packages/carbon-graphs/package.json ***!
  \*********************************************/
/***/ (function(module) {

module.exports = /*#__PURE__*/JSON.parse('{"name":"@cerner/carbon-graphs","version":"2.26.0","description":"A graphing library built using d3 based on Cerner design standards","author":"Cerner Corporation","repository":{"type":"git","url":"git+https://github.com/cerner/terra-graphs.git","directory":"packages/carbon-graphs"},"bugs":{"url":"https://github.com/cerner/terra-graphs/issues"},"homepage":"https://github.com/cerner/terra-graphs#readme","license":"Apache-2.0","keywords":["carbon","carbon-graphs","Cerner","d3","d3-module","graphing","graphs","Terra","UI"],"publishConfig":{"access":"public"},"main":"lib/index.js","files":["dist","lib","README.md"],"prettier":{"arrowParens":"always","bracketSpacing":true,"semi":true,"tabWidth":4,"trailingComma":"none","overrides":[{"files":"package.json","options":{"tabWidth":2,"printWidth":250}}]},"dependencies":{"d3-array":"1","d3-axis":"1","d3-drag":"1","d3-ease":"1","d3-format":"1","d3-geo":"1","d3-hierarchy":"1","d3-interpolate":"1","d3-path":"1","d3-scale":"2","d3-selection":"1","d3-shape":"1","d3-time":"1","d3-time-format":"2","d3-timer":"1","d3-transition":"1"},"devDependencies":{"@cerner/carbon-site-helpers":"1","@cerner/svg-to-carbon":"1","autoprefixer":"9","commander":"5","css-loader":"3","cssnano":"4","express":"4","express-rate-limit":"5","less":"3","less-loader":"7","mini-css-extract-plugin":"2","postcss-loader":"3","puppeteer":"5","sinon":"9","style-loader":"2","url-loader":"4"},"scripts":{"clean:install":"rm -rf ./node_modules && time npm install","compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js","lint:js":"eslint --ext .js . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run lint && npm run karma","jest":"jest --config ../../jest.config.js"}}');

/***/ })

}]);