(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{1362:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(1273)),t=n(1275),o={key:"stacked_bar_2",label:{display:"Dataset 2"},group:"stacked_bar_1",color:r.default.helpers.COLORS.LIGHT_PURPLE,onClick:t.loadBarPopup,values:[{x:1,y:30},{x:2,y:5},{x:3,y:8},{x:4,y:10},{x:5,y:10},{x:6,y:10}]};a.default=o},1363:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(1273)),t=n(1275),o={key:"stacked_bar_3",label:{display:"Dataset 3"},group:"stacked_bar_1",color:r.default.helpers.COLORS.BLUE,onClick:t.loadBarPopup,values:[{x:1,y:30},{x:2,y:8},{x:3,y:9},{x:4,y:10},{x:5,y:7}]};a.default=o},1421:function(e,a,n){"use strict";n.d(a,"a",(function(){return i}));var l=n(31),r=n.n(l),t=n(55),o=n.n(t),s=(n(0),n(788)),p=["components"],d={},c="wrapper";function i(e){var a=e.components,n=o()(e,p);return Object(s.mdx)(c,r()({},d,n,{components:a,mdxType:"MDXLayout"}),Object(s.mdx)("pre",null,Object(s.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadBarPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'stacked_bar_2',\n  label: {\n    display: 'Dataset 2',\n  },\n  group: 'stacked_bar_1',\n  color: Carbon.helpers.COLORS.LIGHT_PURPLE,\n  onClick: loadBarPopup,\n  values: [\n    {\n      x: 1,\n      y: 30,\n    },\n    {\n      x: 2,\n      y: 5,\n    },\n    {\n      x: 3,\n      y: 8,\n    },\n    {\n      x: 4,\n      y: 10,\n    },\n    {\n      x: 5,\n      y: 10,\n    },\n    {\n      x: 6,\n      y: 10,\n    },\n  ],\n};\n\nexport default data;\n\n")))}i.isMDXComponent=!0},1444:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(1273)),t=n(1275),o={key:"axisinfo_bar_1",label:{display:"Dataset 1"},group:"uid_bar_1",color:r.default.helpers.COLORS.YELLOW,onClick:t.loadBarPopup,values:[{x:1,y:10},{x:2,y:15},{x:3,y:18},{x:4,y:6},{x:5,y:0},{x:6,y:10}],axisInfoRow:[{axis:"x",x:1,value:{onClick:t.loadTextLabelPopup,characterCount:4,color:r.default.helpers.COLORS.ORANGE,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z",fill:r.default.helpers.COLORS.ORANGE},options:{x:-6,y:-6,scale:.25}},label:{display:"1234567",secondaryDisplay:"ICU"}}},{axis:"x",x:2,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z",fill:r.default.helpers.COLORS.PURPLE},options:{x:-6,y:-6,scale:.25}},label:{display:"65",secondaryDisplay:"ICU"}}},{axis:"x",x:3,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.GREEN,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z"},options:{x:-6,y:-6,scale:.25}},label:{display:"42",secondaryDisplay:"ICU"}}},{axis:"x",x:4,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"23",secondaryDisplay:""}}},{axis:"x",x:5,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"",secondaryDisplay:"ICU"}}},{axis:"x",x:6,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"25",secondaryDisplay:"ICU"}}}]};a.default=o},1445:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(1273)),t=n(1275),o={key:"stacked_bar_1",label:{display:"Dataset 1"},color:r.default.helpers.COLORS.GREEN,onClick:t.loadBarPopup,values:[{x:1,y:30},{x:2,y:10},{x:3,y:13},{x:4,y:15},{x:5,y:18}],axisInfoRow:[{axis:"x",x:1,value:{onClick:t.loadTextLabelPopup,characterCount:4,color:r.default.helpers.COLORS.ORANGE,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z",fill:r.default.helpers.COLORS.ORANGE},options:{x:-6,y:-6,scale:.25}},label:{display:"1234567",secondaryDisplay:"ICU"}}},{axis:"x",x:2,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z",fill:r.default.helpers.COLORS.PURPLE},options:{x:-6,y:-6,scale:.25}},label:{display:"65",secondaryDisplay:"ICU"}}},{axis:"x",x:3,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.GREEN,shape:{path:{d:"M24,0l24,24L24,48L0,24L24,0z"},options:{x:-6,y:-6,scale:.25}},label:{display:"42",secondaryDisplay:"ICU"}}},{axis:"x",x:4,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"23",secondaryDisplay:""}}},{axis:"x",x:5,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"",secondaryDisplay:"ICU"}}},{axis:"x",x:6,value:{onClick:t.loadTextLabelPopup,color:r.default.helpers.COLORS.BLACK,shape:{},label:{display:"25",secondaryDisplay:"ICU"}}}]};a.default=o},1691:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(0)),t=l(n(1273)),o=l(n(1274));n(1276),n(1290);var s=l(n(1279)),p=l(n(1304)),d=l(n(1444)),c=o.default.deepClone((0,p.default)("#axisInfoTextLabelsBarGraph")),i=o.default.deepClone(d.default);a.default=function(){return r.default.useEffect((function(){t.default.api.graph(c).loadContent(t.default.api.bar(i))}),[]),r.default.createElement(s.default,{id:"axisInfoTextLabelsBarGraph"})}},1692:function(e,a,n){"use strict";var l=n(2);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var r=l(n(0)),t=l(n(1273)),o=l(n(1274));n(1276),n(1290);var s=l(n(1279)),p=l(n(1304)),d=l(n(1445)),c=l(n(1362)),i=l(n(1363)),x=o.default.deepClone((0,p.default)("#stackedAxisInfoTextLabelsBarGraph")),u=[o.default.deepClone(d.default),o.default.deepClone(c.default),o.default.deepClone(i.default)];a.default=function(){return r.default.useEffect((function(){var e=t.default.api.graph(x);u.forEach((function(a){e.loadContent(t.default.api.bar(a))}))}),[]),r.default.createElement(s.default,{id:"stackedAxisInfoTextLabelsBarGraph"})}},1976:function(e,a,n){"use strict";n.r(a),n.d(a,"default",(function(){return M}));var l=n(31),r=n.n(l),t=n(55),o=n.n(t),s=n(0),p=n.n(s),d=n(788),c=n(1691),i=n.n(c),x=["components"],u={};function b(e){var a=e.components,n=o()(e,x);return Object(d.mdx)("wrapper",r()({},u,n,{components:a,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Bar/BarGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getBarConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Bar/barDefault';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/dataset1axisInfoLabels';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\n\nconst graphConfig = utils.deepClone(getBarConfig('#axisInfoTextLabelsBarGraph'));\nconst dataset = utils.deepClone(exampleData);\n\nexport default () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    graph.loadContent(Carbon.api.bar(dataset));\n  }, []);\n\n  return (\n    <ExampleGraphContainer id=\"axisInfoTextLabelsBarGraph\" />\n  );\n};\n\n")))}b.isMDXComponent=!0;var m=n(1281),f=n.n(m),C=n(1282),h=function(e){var a=e.title,n=e.description,l=e.isExpanded;return p.a.createElement(f.a,{title:a||"Axis Info Text Labels",description:n,example:p.a.createElement(i.a,null),exampleCssSrc:p.a.createElement(C.a,null),exampleSrc:p.a.createElement(b,null),isExpanded:l})},y=n(1358),O=["components"],L={},j="wrapper";function g(e){var a=e.components,n=o()(e,O);return Object(d.mdx)(j,r()({},L,n,{components:a,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadBarPopup, loadTextLabelPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'axisinfo_bar_1',\n  label: {\n    display: 'Dataset 1',\n  },\n  group: 'uid_bar_1',\n  color: Carbon.helpers.COLORS.YELLOW,\n  onClick: loadBarPopup,\n  values: [\n    {\n      x: 1,\n      y: 10,\n    },\n    {\n      x: 2,\n      y: 15,\n    },\n    {\n      x: 3,\n      y: 18,\n    },\n    {\n      x: 4,\n      y: 6,\n    },\n    {\n      x: 5,\n      y: 0,\n    },\n    {\n      x: 6,\n      y: 10,\n    },\n  ],\n  axisInfoRow: [\n    {\n      axis: 'x',\n      x: 1,\n      value: {\n        onClick: loadTextLabelPopup,\n        characterCount: 4,\n        color: Carbon.helpers.COLORS.ORANGE,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n            fill: Carbon.helpers.COLORS.ORANGE,\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '1234567',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 2,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n            fill: Carbon.helpers.COLORS.PURPLE,\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '65',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 3,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.GREEN,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '42',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 4,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '23',\n          secondaryDisplay: '',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 5,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 6,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '25',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n  ],\n};\n\nexport default data;\n\n")))}g.isMDXComponent=!0;var v=n(1692),D=n.n(v),R=["components"],k={};function E(e){var a=e.components,n=o()(e,R);return Object(d.mdx)("wrapper",r()({},k,n,{components:a,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Bar/BarGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getBarConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Bar/barDefault';\nimport exampleData1 from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/stackedBarData1AxisInfo';\nimport exampleData2 from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/stackedBarData2.js';\nimport exampleData3 from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/stackedBarData3.js';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\n\nconst graphConfig = utils.deepClone(getBarConfig('#stackedAxisInfoTextLabelsBarGraph'));\nconst dataset = [\n  utils.deepClone(exampleData1),\n  utils.deepClone(exampleData2),\n  utils.deepClone(exampleData3),\n];\n\nexport default () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    dataset.forEach((data) => {\n      graph.loadContent(Carbon.api.bar(data));\n    });\n  }, []);\n\n  return (\n    <ExampleGraphContainer id=\"stackedAxisInfoTextLabelsBarGraph\" />\n  );\n};\n\n")))}E.isMDXComponent=!0;var P=function(e){var a=e.title,n=e.description,l=e.isExpanded;return p.a.createElement(f.a,{title:a||"Stacked Axis Info Text Labels",description:n,example:p.a.createElement(D.a,null),exampleCssSrc:p.a.createElement(C.a,null),exampleSrc:p.a.createElement(E,null),isExpanded:l})},S=["components"],B={},T="wrapper";function I(e){var a=e.components,n=o()(e,S);return Object(d.mdx)(T,r()({},B,n,{components:a,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadBarPopup, loadTextLabelPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'stacked_bar_1',\n  label: {\n    display: 'Dataset 1',\n  },\n  color: Carbon.helpers.COLORS.GREEN,\n  onClick: loadBarPopup,\n  values: [\n    {\n      x: 1,\n      y: 30,\n    },\n    {\n      x: 2,\n      y: 10,\n    },\n    {\n      x: 3,\n      y: 13,\n    },\n    {\n      x: 4,\n      y: 15,\n    },\n    {\n      x: 5,\n      y: 18,\n    },\n  ],\n  axisInfoRow: [\n    {\n      axis: 'x',\n      x: 1,\n      value: {\n        onClick: loadTextLabelPopup,\n        characterCount: 4,\n        color: Carbon.helpers.COLORS.ORANGE,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n            fill: Carbon.helpers.COLORS.ORANGE,\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '1234567',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 2,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n            fill: Carbon.helpers.COLORS.PURPLE,\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '65',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 3,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.GREEN,\n        shape: {\n          path: {\n            d: 'M24,0l24,24L24,48L0,24L24,0z',\n          },\n          options: {\n            x: -6,\n            y: -6,\n            scale: 0.25,\n          },\n        },\n        label: {\n          display: '42',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 4,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '23',\n          secondaryDisplay: '',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 5,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n    {\n      axis: 'x',\n      x: 6,\n      value: {\n        onClick: loadTextLabelPopup,\n        color: Carbon.helpers.COLORS.BLACK,\n        shape: {},\n        label: {\n          display: '25',\n          secondaryDisplay: 'ICU',\n        },\n      },\n    },\n  ],\n};\n\nexport default data;\n\n")))}I.isMDXComponent=!0;var G=n(1421),A=["components"];n(1284);var _={},N="wrapper";function M(e){var a=e.components,n=o()(e,A);return Object(d.mdx)(N,r()({},_,n,{components:a,mdxType:"MDXLayout"}),Object(d.mdx)("h1",{id:"axis-info-labels"},"Axis Info Labels"),Object(d.mdx)("p",null,"Axis info labels consists of bar graphs with simple bar axis info labels and stacked bar axis info labels."),Object(d.mdx)("h2",{id:"getting-started"},"Getting Started"),Object(d.mdx)("ul",null,Object(d.mdx)("li",{parentName:"ul"},"Install with ",Object(d.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",Object(d.mdx)("ul",{parentName:"li"},Object(d.mdx)("li",{parentName:"ul"},Object(d.mdx)("inlineCode",{parentName:"li"},"npm i @cerner/carbon-graphs --save-dev"))))),Object(d.mdx)("h2",{id:"usage"},"Usage"),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-jsx"},"import Carbon from '@cerner/carbon-graphs/dist/js/carbon-graphs.js';\nimport '@cerner/carbon-graphs/dist/css/carbon-graphs.css';\n")),Object(d.mdx)("h2",{id:"examples"},"Examples"),Object(d.mdx)(h,{mdxType:"SimpleAxisInfoLabelBarGraph"}),Object(d.mdx)("details",null,Object(d.mdx)("summary",{style:{fontSize:24}},Object(d.mdx)("b",null,"Data used for simple bar axis info labels")),Object(d.mdx)("h3",{id:"graph-config-object"},"Graph Config object"),Object(d.mdx)(y.a,{mdxType:"SimpleAxisInfoLabelGraphConfig"}),Object(d.mdx)("h3",{id:"data-object"},"Data object"),Object(d.mdx)(g,{mdxType:"SimpleAxisInfoLabelDataObject"})),Object(d.mdx)("br",null),Object(d.mdx)("br",null),Object(d.mdx)("br",null),Object(d.mdx)(P,{mdxType:"StackedAxisInfoLabelBarGraph"}),Object(d.mdx)("details",null,Object(d.mdx)("summary",{style:{fontSize:24}},Object(d.mdx)("b",null,"Data used for stacked bar axis info labels")),Object(d.mdx)("h3",{id:"graph-config-object-1"},"Graph Config object"),Object(d.mdx)(y.a,{mdxType:"StackedAxisInfoLabelGraphConfig"}),Object(d.mdx)("h3",{id:"data-object-1"},"Data object"),Object(d.mdx)("h4",{id:"dataset-1"},"Dataset 1"),Object(d.mdx)(I,{mdxType:"StackedAxisInfoLabelDataObject1"}),Object(d.mdx)("h4",{id:"dataset-2"},"Dataset 2"),Object(d.mdx)(G.a,{mdxType:"StackedAxisInfoLabelDataObject2"}),Object(d.mdx)("h4",{id:"dataset-3"},"Dataset 3"),Object(d.mdx)(G.a,{mdxType:"StackedAxisInfoLabelDataObject3"})))}M.isMDXComponent=!0}}]);