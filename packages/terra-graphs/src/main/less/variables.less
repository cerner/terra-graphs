/*
Animations should be fast and nimble, never keeping the user waiting longer than is necessary.
The aim is to prioritize user-perceived performance over technical benchmarks.
Animations should last 150msâ€“250ms and should feel quick and responsive.
Using cubic-bezier with ->
Incoming Velocity: 70%
Outgoing Velocity: 0%
We quickly accelerate at the beginning of the animation and slowly decelerate by the end.
*/
@default-transition-timing: cubic-bezier(0.07, 0.95, 0, 1);
@default-transition-duration: 1s;

.font-smooth() {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.basic-transition(@property, @duration, @timing) {
    -moz-transition: @property @duration @timing;
    -webkit-transition: @property @duration @timing;
    -ms-transition: @property @duration @timing;
    -o-transition: @property @duration @timing;
    transition: @property @duration @timing;
}

// prettier-ignore
.transform-transition (@property, @duration, @timing) {
    -moz-transition: @property @duration @timing, -moz-transform @duration @timing;
    -webkit-transition: @property @duration @timing, -webkit-transform @duration @timing;
    -ms-transition: @property @duration @timing, -ms-transform @duration @timing;
    -o-transition: @property @duration @timing, -o-transform @duration @timing;
    transition: @property @duration @timing, transform @duration @timing;
}

.opacity-hide() {
    opacity: 0;
    visibility: hidden;
    .transform-transition(
        opacity,
        @default-transition-duration,
        @default-transition-timing
    );
}

.opacity-show() {
    opacity: 1;
    visibility: visible;
    .transform-transition(
        opacity,
        @default-transition-duration,
        @default-transition-timing
    );
}

.selected-indicator-styles() {
    stroke-width: 1px;
    stroke: @blue30;
    fill: @blue10;
    fill-opacity: 0.25;
}

/*
User agent gives `geometric precision` more importance than `speed` and `crisp edges`
*/
.carbon-shape-rendering() {
    shape-rendering: auto;
}
