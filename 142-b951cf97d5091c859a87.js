(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{1361:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320)),l=a(1322),d={key:"uid_1",label:{display:"Data Label 1"},color:r.default.helpers.COLORS.BLACK,onClick:l.loadPopup,values:[{x:new Date(2016,0,1,1,5).toISOString(),y:5},{x:new Date(2016,0,1,2,15).toISOString(),y:11},{x:new Date(2016,0,1,3,15).toISOString(),y:12},{x:new Date(2016,0,1,4,15).toISOString(),y:16},{x:new Date(2016,0,1,5,15).toISOString(),y:17},{x:new Date(2016,0,1,6,15).toISOString(),y:9},{x:new Date(2016,0,1,7,0).toISOString(),y:11},{x:new Date(2016,0,1,8,15).toISOString(),y:12},{x:new Date(2016,0,1,9,45).toISOString(),y:16},{x:new Date(2016,0,1,12,15).toISOString(),y:17},{x:new Date(2016,0,1,13,15).toISOString(),y:28},{x:new Date(2016,0,1,14,15).toISOString(),y:12},{x:new Date(2016,0,1,19,45).toISOString(),y:13},{x:new Date(2016,0,1,21,15).toISOString(),y:14}]};t.default=d},1430:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;t.default=function(e){return{bindTo:e,bindLegendTo:null,axis:{x:{show:!0,label:"Data",lowerLimit:80,upperLimit:180},y:{show:!0,label:"Line Set A",lowerLimit:0,upperLimit:18},y2:{show:!1,label:"Line Set B",lowerLimit:0,upperLimit:250}},showLabel:!0,showLegend:!0,showShapes:!0,showVGrid:!0,showHGrid:!0}}},1431:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320)),l=a(1322),d={key:"uid_1",label:{display:"Data Label 1"},color:r.default.helpers.COLORS.BLACK,onClick:l.loadPopup,values:[{x:85,y:5},{x:90,y:11},{x:92,y:12},{x:101,y:16},{x:107,y:17},{x:107,y:9},{x:135,y:11},{x:139,y:12},{x:143,y:16},{x:155,y:17},{x:161,y:28},{x:164,y:12},{x:168,y:13},{x:170,y:14}]};t.default=d},1629:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(29),r=a.n(n),l=a(56),d=a.n(l),m=(a(0),a(813)),i=["components"],p={},o="wrapper";function c(e){var t=e.components,a=d()(e,i);return Object(m.mdx)(o,r()({},p,a,{components:t,mdxType:"MDXLayout"}),Object(m.mdx)("pre",null,Object(m.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'uid_1',\n  label: {\n    display: 'Data Label 1',\n  },\n  color: Carbon.helpers.COLORS.BLACK,\n  onClick: loadPopup,\n  values: [\n    {\n      x: 85,\n      y: 5,\n    },\n    {\n      x: 90,\n      y: 11,\n    },\n    {\n      x: 92,\n      y: 12,\n    },\n    {\n      x: 101,\n      y: 16,\n    },\n    {\n      x: 107,\n      y: 17,\n    },\n    {\n      x: 107,\n      y: 9,\n    },\n    {\n      x: 135,\n      y: 11,\n    },\n    {\n      x: 139,\n      y: 12,\n    },\n    {\n      x: 143,\n      y: 16,\n    },\n    {\n      x: 155,\n      y: 17,\n    },\n    {\n      x: 161,\n      y: 28,\n    },\n    {\n      x: 164,\n      y: 12,\n    },\n    {\n      x: 168,\n      y: 13,\n    },\n    {\n      x: 170,\n      y: 14,\n    },\n  ],\n};\n\nexport default data;\n\n")))}c.isMDXComponent=!0},1630:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320));t.default=function(e){return{bindTo:e,axis:{x:{type:r.default.helpers.AXIS_TYPE.TIME_SERIES,label:"Datetime",lowerLimit:new Date(2016,0,1,0,0).toISOString(),upperLimit:new Date(2016,0,1,23,59).toISOString()},y:{label:"Line Set A",lowerLimit:10,upperLimit:30},y2:{show:!1,label:"Line Set B",lowerLimit:0,upperLimit:250}},showLabel:!0,showLegend:!0,showShapes:!0,showVGrid:!0,showHGrid:!0}}},1857:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),l=n(a(1320)),d=n(a(1321));a(1323),a(1336);var m=n(a(1326)),i=n(a(1430)),p=n(a(1431)),o=d.default.deepClone((0,i.default)("#simpleScattergraph")),c=d.default.deepClone(p.default);t.default=function(){return r.default.useEffect((function(){l.default.api.graph(o).loadContent(l.default.api.scatter(c))}),[]),r.default.createElement(m.default,{id:"simpleScattergraph"})}},1858:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),l=n(a(1320)),d=n(a(1321));a(1323),a(1336);var m=n(a(1326)),i=n(a(1630)),p=n(a(1361)),o=d.default.deepClone((0,i.default)("#timeseriesScatterGraph")),c=d.default.deepClone(p.default);t.default=function(){return r.default.useEffect((function(){l.default.api.graph(o).loadContent(l.default.api.scatter(c))}),[]),r.default.createElement(m.default,{id:"timeseriesScatterGraph"})}},2028:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return X}));var n=a(29),r=a.n(n),l=a(56),d=a.n(l),m=a(0),i=a.n(m),p=a(813),o=a(1857),c=a.n(o),s=["components"],b={};function u(e){var t=e.components,a=d()(e,s);return Object(p.mdx)("wrapper",r()({},b,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/PairedResult/PairedResultGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getGraphConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Scatter/scatterDefault';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Scatter/dataset1';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\n\nconst graphConfig = utils.deepClone(getGraphConfig('#simpleScattergraph'));\nconst dataset = utils.deepClone(exampleData);\n\nconst SimpleScatterExample = () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    graph.loadContent(Carbon.api.scatter(dataset));\n  }, []);\n  return (\n    <ExampleGraphContainer id=\"simpleScattergraph\" />\n  );\n};\n\nexport default SimpleScatterExample;\n\n\n")))}u.isMDXComponent=!0;var x=a(1328),O=a.n(x),j=a(1329),g=function(e){var t=e.title,a=e.description,n=e.isExpanded;return i.a.createElement(O.a,{title:t||"Simple Scatter",description:a,example:i.a.createElement(c.a,null),exampleCssSrc:i.a.createElement(j.a,null),exampleSrc:i.a.createElement(u,null),isExpanded:n})},N=["components"],h={},f="wrapper";function y(e){var t=e.components,a=d()(e,N);return Object(p.mdx)(f,r()({},h,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"const getScatterDefaultConfig = (id) => ({\n  bindTo: id,\n  bindLegendTo: null,\n  axis: {\n    x: {\n      show: true,\n      label: 'Data',\n      lowerLimit: 80,\n      upperLimit: 180,\n    },\n    y: {\n      show: true,\n      label: 'Line Set A',\n      lowerLimit: 0,\n      upperLimit: 18,\n    },\n    y2: {\n      show: false,\n      label: 'Line Set B',\n      lowerLimit: 0,\n      upperLimit: 250,\n    },\n  },\n  showLabel: true,\n  showLegend: true,\n  showShapes: true,\n  showVGrid: true,\n  showHGrid: true,\n});\n\nexport default getScatterDefaultConfig;\n\n\n")))}y.isMDXComponent=!0;var C=a(1629),S=a(1858),w=a.n(S),D=["components"],v={};function L(e){var t=e.components,a=d()(e,D);return Object(p.mdx)("wrapper",r()({},v,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/PairedResult/PairedResultGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getGraphConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Scatter/scatterTimeseries';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Scatter/dataset1timeseries';\n\n/*\nPlease refer documentation below to see graphConfig and data objects.\n*/\n\nconst graphConfig = utils.deepClone(getGraphConfig('#timeseriesScatterGraph'));\nconst dataset = utils.deepClone(exampleData);\n\nconst TimelineScatterExample = () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    graph.loadContent(Carbon.api.scatter(dataset));\n  }, []);\n  return (\n    <ExampleGraphContainer id=\"timeseriesScatterGraph\" />\n  );\n};\n\nexport default TimelineScatterExample;\n\n")))}L.isMDXComponent=!0;var E=function(e){var t=e.title,a=e.description,n=e.isExpanded;return i.a.createElement(O.a,{title:t||"Timeseries",description:a,example:i.a.createElement(w.a,null),exampleCssSrc:i.a.createElement(j.a,null),exampleSrc:i.a.createElement(L,null),isExpanded:n})},T=["components"],G={},I="wrapper";function P(e){var t=e.components,a=d()(e,T);return Object(p.mdx)(I,r()({},G,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\n\nconst getScatterTimeseriesConfig = (id) => ({\n  bindTo: id,\n  axis: {\n    x: {\n      type: Carbon.helpers.AXIS_TYPE.TIME_SERIES,\n      label: 'Datetime',\n      lowerLimit: new Date(2016, 0, 1, 0, 0).toISOString(),\n      upperLimit: new Date(2016, 0, 1, 23, 59).toISOString(),\n    },\n    y: {\n      label: 'Line Set A',\n      lowerLimit: 10,\n      upperLimit: 30,\n    },\n    y2: {\n      show: false,\n      label: 'Line Set B',\n      lowerLimit: 0,\n      upperLimit: 250,\n    },\n  },\n  showLabel: true,\n  showLegend: true,\n  showShapes: true,\n  showVGrid: true,\n  showHGrid: true,\n});\n\nexport default getScatterTimeseriesConfig;\n\n")))}P.isMDXComponent=!0;var A=a(1442),M=["components"];a(1331);var R={},_="wrapper";function X(e){var t=e.components,a=d()(e,M);return Object(p.mdx)(_,r()({},R,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("h1",{id:"scatter-graph"},"Scatter Graph"),Object(p.mdx)("p",null,"A scatter plot can be used to plot datapoints of fixed size with independent x and y coordinates."),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#getting-started"},"Getting Started")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#usage"},"Usage")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#dataset-structure"},"structure")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#dataset-properties"},"properties"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#values"},"values")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#label"},"label")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#legendoptions"},"legendOptions")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#regions"},"regions")))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#examples"},"Examples"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#default-x-axis"},"Default")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#timeseries-x-axis"},"Timeseries"))))),Object(p.mdx)("h2",{id:"getting-started"},"Getting Started"),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},"Install with ",Object(p.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("inlineCode",{parentName:"li"},"npm i @cerner/carbon-graphs --save-dev"))))),Object(p.mdx)("h2",{id:"usage"},"Usage"),Object(p.mdx)("p",null,"An instance of a scatter graph can be obtained by:"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"Carbon.api.scatter(/* dataset */)\n")),Object(p.mdx)("p",null,"A scatter graph can be plotted as follows:"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/dist/js/carbon-graphs.js';\nimport '@cerner/carbon-graphs/dist/css/carbon-graphs.css';\n\nconst graph = Carbon.api.graph(/* graph config JSON */);\ngraph.loadContent(Carbon.api.scatter(/* dataset */));\n")),Object(p.mdx)("h4",{id:"multi-scatter"},"Multi scatter"),Object(p.mdx)("p",null,"Additional instances of ",Object(p.mdx)("inlineCode",{parentName:"p"},"Carbon.api.scatter")," can be used to plot multiple datasets on the same graph:"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-javascript"},"const graph = Carbon.api.graph(/* Input JSON */);\nscatterDefault.loadContent(Carbon.api.scatter(/* dataset 1 */));\nscatterDefault.loadContent(Carbon.api.scatter(/* dataset 2 */));\nscatterDefault.loadContent(Carbon.api.scatter(/* dataset 3 */));\nscatterDefault.loadContent(Carbon.api.scatter(/* dataset 4 */));\n")),Object(p.mdx)("h2",{id:"dataset-structure"},"Dataset Structure"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},'const dataset = {\n  key: <string>,\n  values: [\n    {\n      x: <number> or <Date>,\n      y: <number>,\n      isCritical: <bool>\n    },\n  ],\n  color: <hex value as string>,\n  label: {\n    display: <string>,\n  },\n  legendOptions:{\n    showElement: <bool>\n  }\n  onClick: <function>,\n  regions: [\n    start: <number>\n    end: <number>\n    axis: <"y"> or <"y2">\n    color: <hex value as string>\n  ],\n  shape: < shape SVG >,\n  yAxis: <"y"> or <"y2">,\n\n}\n')),Object(p.mdx)("h2",{id:"dataset-properties"},"Dataset Properties"),Object(p.mdx)("table",null,Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"key"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"A unique ",Object(p.mdx)("inlineCode",{parentName:"td"},"id")," to identify the dataset. Adding two datasets with the same ",Object(p.mdx)("inlineCode",{parentName:"td"},"key")," will result in an error.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"values"),Object(p.mdx)("td",{parentName:"tr",align:null},"array of objects"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#values"},"values"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"color"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"COLORS.BLACK")),Object(p.mdx)("td",{parentName:"tr",align:null},"Color for the data points. Can be a hex value (",Object(p.mdx)("inlineCode",{parentName:"td"},"#ffffff"),") or a constant from ",Object(p.mdx)("a",{parentName:"td",href:"../core-configuration/documentation/Colors"},"Colors"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"label"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"{}"),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#label"},"label"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"legendOptions"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"undefined")),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#legendoptions"},"legendOptions"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"onClick"),Object(p.mdx)("td",{parentName:"tr",align:null},"function"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"undefined")),Object(p.mdx)("td",{parentName:"tr",align:null},"Function to execute upon clicking a datapoint, such as to display a popup.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"regions"),Object(p.mdx)("td",{parentName:"tr",align:null},"array of objects"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"[]")),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#regions"},"regions"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"shape"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"SHAPES.DARK.CIRCLE")),Object(p.mdx)("td",{parentName:"tr",align:null},"Shape for representing the data points. Can be a constant from ",Object(p.mdx)("a",{parentName:"td",href:"../core-configuration/documentation/Shapes"},"shapes")," or a custom SVG.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"yAxis"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},'"y"')),Object(p.mdx)("td",{parentName:"tr",align:null},"Prop to select either the Y or Y2 axis for the dataset. Valid values are ",Object(p.mdx)("inlineCode",{parentName:"td"},"y")," or ",Object(p.mdx)("inlineCode",{parentName:"td"},"y2"),".")))),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"values"},Object(p.mdx)("inlineCode",{parentName:"h3"},"values")),Object(p.mdx)("p",{parentName:"li"},Object(p.mdx)("strong",{parentName:"p"},"type:"),"  array of objects | ",Object(p.mdx)("inlineCode",{parentName:"p"},"required prop")),Object(p.mdx)("p",{parentName:"li"},"  This is an array of objects representing the dataset.\nIt is a required prop; passing ",Object(p.mdx)("inlineCode",{parentName:"p"},"undefined")," will result in an error.\nHowever passing an empty array (",Object(p.mdx)("inlineCode",{parentName:"p"},"[]"),") will result in the graph successfully rendering without a dataset.\nEach object in the array takes the following shape:"),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-json"},"  {\n    x: <number>,\n    y: <number>,\n    isCritical: <bool>\n    legendOptions: <object>\n  }\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"x"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Value for the x coordinate.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"y"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Value for the y coordinate.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"isCritical"),Object(p.mdx)("td",{parentName:"tr",align:null},"bool"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"false")),Object(p.mdx)("td",{parentName:"tr",align:null},"Highlights a datapoint if ",Object(p.mdx)("inlineCode",{parentName:"td"},"true"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"legendOptions"),Object(p.mdx)("td",{parentName:"tr",align:null},"bool"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"false")),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#legendoptions"},"legendOptions"),".")))))),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"label"},Object(p.mdx)("inlineCode",{parentName:"h3"},"label")),Object(p.mdx)("p",{parentName:"li"},Object(p.mdx)("strong",{parentName:"p"},"type:")," object\n",Object(p.mdx)("strong",{parentName:"p"},"default value:")," ",Object(p.mdx)("inlineCode",{parentName:"p"},"{}")),Object(p.mdx)("p",{parentName:"li"},"  Label for the dataset in the legend. If it is not provided then it will not be shown in the legend."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre"},"```json\n  label: {\n    display: <string>\n  }\n```\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"display"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"undefined")),Object(p.mdx)("td",{parentName:"tr",align:null},"Text to display as the label for the dataset."))))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"legendoptions"},Object(p.mdx)("inlineCode",{parentName:"h3"},"legendOptions")),Object(p.mdx)("p",{parentName:"li"},Object(p.mdx)("strong",{parentName:"p"},"type:")," object\n",Object(p.mdx)("strong",{parentName:"p"},"default value:")," ",Object(p.mdx)("inlineCode",{parentName:"p"},"undefined")),Object(p.mdx)("p",{parentName:"li"},"  Options for showing dataset in the legend. This prop has the following shape:"),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre"},"```json\n  legendOptions: {\n    showElement: <bool>\n  }\n```\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"showElement"),Object(p.mdx)("td",{parentName:"tr",align:null},"bool"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"true")),Object(p.mdx)("td",{parentName:"tr",align:null},"Toggle to hide the legend when it has no data.")))))),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"regions"},Object(p.mdx)("inlineCode",{parentName:"h3"},"regions")),Object(p.mdx)("p",{parentName:"li"},Object(p.mdx)("strong",{parentName:"p"},"type:")," array of objects\n",Object(p.mdx)("strong",{parentName:"p"},"default value:")," ",Object(p.mdx)("inlineCode",{parentName:"p"},"[]")),Object(p.mdx)("p",{parentName:"li"},"Each dataset can have one or more regions. ",Object(p.mdx)("inlineCode",{parentName:"p"},"start")," and ",Object(p.mdx)("inlineCode",{parentName:"p"},"end")," is necessary for rendering a horizontal area."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-json"},"legendOptions: {\n  showElement: <bool>\n}\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Expected"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"start"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"Start of the region.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"end"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"End of the region.")))))),Object(p.mdx)("h2",{id:"examples"},"Examples"),Object(p.mdx)("h3",{id:"default-x-axis"},"Default X-axis"),Object(p.mdx)(g,{mdxType:"ScatterGraphDefault"}),Object(p.mdx)("h3",{id:"timeseries-x-axis"},"Timeseries X-axis"),Object(p.mdx)(E,{mdxType:"ScatterGraphTimeseries"}),Object(p.mdx)("details",null,Object(p.mdx)("summary",{style:{fontSize:24}},Object(p.mdx)("b",null,"Example Data")),Object(p.mdx)("h3",{id:"graph-config-default-axis"},"Graph Config Default Axis"),Object(p.mdx)(y,{mdxType:"GraphConfigDefault"}),Object(p.mdx)("h3",{id:"graph-config-timeseries"},"Graph Config Timeseries"),Object(p.mdx)(P,{mdxType:"GraphTimeseriesConfig"}),Object(p.mdx)("h3",{id:"dataset1"},Object(p.mdx)("inlineCode",{parentName:"h3"},"dataset1")),Object(p.mdx)(C.a,{mdxType:"DataObject1"}),Object(p.mdx)("h3",{id:"dataset1timeseries"},Object(p.mdx)("inlineCode",{parentName:"h3"},"dataset1timeseries")),Object(p.mdx)(A.a,{mdxType:"DataObjectTimeseries1"})))}X.isMDXComponent=!0}}]);