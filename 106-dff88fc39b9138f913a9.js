(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{1352:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320)),l=a(1322),m={key:"dynamic_dataset_1",label:{display:"Data Label 1"},color:r.default.helpers.COLORS.BLUE,onClick:l.loadBarPopup,values:[{x:new Date(2016,0,1,3).toISOString(),y:15},{x:new Date(2016,0,1,6).toISOString(),y:19},{x:new Date(2016,0,1,9).toISOString(),y:10},{x:new Date(2016,0,1,12).toISOString(),y:13},{x:new Date(2016,0,1,15).toISOString(),y:15}]};t.default=m},1389:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(29),r=a.n(n),l=a(56),m=a.n(l),d=(a(0),a(813)),i=["components"],p={},o="wrapper";function c(e){var t=e.components,a=m()(e,i);return Object(d.mdx)(o,r()({},p,a,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadBarPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'dynamic_dataset_1',\n  label: {\n    display: 'Data Label 1',\n  },\n  color: Carbon.helpers.COLORS.BLUE,\n  onClick: loadBarPopup,\n  values: [\n    {\n      x: new Date(2016, 0, 1, 3).toISOString(),\n      y: 15,\n    },\n    {\n      x: new Date(2016, 0, 1, 6).toISOString(),\n      y: 19,\n    },\n    {\n      x: new Date(2016, 0, 1, 9).toISOString(),\n      y: 10,\n    },\n    {\n      x: new Date(2016, 0, 1, 12).toISOString(),\n      y: 13,\n    },\n    {\n      x: new Date(2016, 0, 1, 15).toISOString(),\n      y: 15,\n    },\n  ],\n};\n\nexport default data;\n\n")))}c.isMDXComponent=!0},1408:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320)),l=a(1322),m={key:"dataset_bar_1",label:{display:"Dataset 1"},color:r.default.helpers.COLORS.LIGHT_PURPLE,onClick:l.loadBarPopup,values:[{x:1,y:10},{x:2,y:15},{x:3,y:18},{x:4,y:6},{x:6,y:10}]};t.default=m},1449:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(29),r=a.n(n),l=a(56),m=a.n(l),d=(a(0),a(813)),i=["components"],p={},o="wrapper";function c(e){var t=e.components,a=m()(e,i);return Object(d.mdx)(o,r()({},p,a,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\n\nconst getbarConfig = (id) => ({\n  bindTo: id,\n  bindLegendTo: null,\n  axis: {\n    x: {\n      show: true,\n      type: Carbon.helpers.AXIS_TYPE.TIME_SERIES,\n      label: 'Data',\n      lowerLimit: new Date(2016, 0, 1, 0).toISOString(),\n      upperLimit: new Date(2016, 0, 2, 0).toISOString(),\n      ticks: {\n        values: [\n          new Date(2016, 0, 1, 3).toISOString(),\n          new Date(2016, 0, 1, 6).toISOString(),\n          new Date(2016, 0, 1, 9).toISOString(),\n          new Date(2016, 0, 1, 12).toISOString(),\n          new Date(2016, 0, 1, 15).toISOString(),\n        ],\n        format: '%H',\n      },\n    },\n    y: {\n      show: true,\n      label: 'Bar Set A',\n      lowerLimit: 0,\n      upperLimit: 20,\n    },\n    y2: {\n      show: false,\n      label: 'Line Set B',\n      lowerLimit: 0,\n      upperLimit: 20,\n    },\n  },\n  showLabel: true,\n  showLegend: true,\n  showShapes: true,\n  showVGrid: false,\n  showHGrid: true,\n});\n\nexport default getbarConfig;\n\n\n")))}c.isMDXComponent=!0},1489:function(e,t,a){"use strict";a.d(t,"a",(function(){return c}));var n=a(29),r=a.n(n),l=a(56),m=a.n(l),d=(a(0),a(813)),i=["components"],p={},o="wrapper";function c(e){var t=e.components,a=m()(e,i);return Object(d.mdx)(o,r()({},p,a,{components:t,mdxType:"MDXLayout"}),Object(d.mdx)("pre",null,Object(d.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport { loadBarPopup } from '@cerner/terra-graphs-docs/lib/example-datasets/popup';\n\nconst data = {\n  key: 'dataset_bar_1',\n  label: {\n    display: 'Dataset 1',\n  },\n  color: Carbon.helpers.COLORS.LIGHT_PURPLE,\n  onClick: loadBarPopup,\n  values: [\n    {\n      x: 1,\n      y: 10,\n    },\n    {\n      x: 2,\n      y: 15,\n    },\n    {\n      x: 3,\n      y: 18,\n    },\n    {\n      x: 4,\n      y: 6,\n    },\n    {\n      x: 6,\n      y: 10,\n    },\n  ],\n};\n\nexport default data;\n\n")))}c.isMDXComponent=!0},1490:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(1320));t.default=function(e){return{bindTo:e,bindLegendTo:null,axis:{x:{show:!0,type:r.default.helpers.AXIS_TYPE.TIME_SERIES,label:"Data",lowerLimit:new Date(2016,0,1,0).toISOString(),upperLimit:new Date(2016,0,2,0).toISOString(),ticks:{values:[new Date(2016,0,1,3).toISOString(),new Date(2016,0,1,6).toISOString(),new Date(2016,0,1,9).toISOString(),new Date(2016,0,1,12).toISOString(),new Date(2016,0,1,15).toISOString()],format:"%H"}},y:{show:!0,label:"Bar Set A",lowerLimit:0,upperLimit:20},y2:{show:!1,label:"Line Set B",lowerLimit:0,upperLimit:20}},showLabel:!0,showLegend:!0,showShapes:!0,showVGrid:!1,showHGrid:!0}}},1668:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),l=n(a(1320)),m=n(a(1321));a(1323),a(1337);var d=n(a(1326)),i=n(a(1351)),p=n(a(1408)),o=m.default.deepClone((0,i.default)("#simpleBarGraph")),c=m.default.deepClone(p.default);t.default=function(){return r.default.useEffect((function(){l.default.api.graph(o).loadContent(l.default.api.bar(c))}),[]),r.default.createElement(d.default,{id:"simpleBarGraph"})}},1737:function(e,t,a){"use strict";var n=a(2);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),l=n(a(1320)),m=n(a(1321));a(1323),a(1337);var d=n(a(1326)),i=n(a(1490)),p=n(a(1352)),o=m.default.deepClone((0,i.default)("#timeseriesBarGraph")),c=m.default.deepClone(p.default);t.default=function(){return r.default.useEffect((function(){l.default.api.graph(o).loadContent(l.default.api.bar(c))}),[]),r.default.createElement(d.default,{id:"timeseriesBarGraph"})}},2032:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return I}));var n=a(29),r=a.n(n),l=a(56),m=a.n(l),d=a(0),i=a.n(d),p=a(813),o=a(1668),c=a.n(o),b=["components"],s={};function u(e){var t=e.components,a=m()(e,b);return Object(p.mdx)("wrapper",r()({},s,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Bar/BarGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getBarConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Bar/barDefault';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/dataset1';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\n\nconst graphConfig = utils.deepClone(getBarConfig('#simpleBarGraph'));\nconst dataset = utils.deepClone(exampleData);\n\nexport default () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    graph.loadContent(Carbon.api.bar(dataset));\n  }, []);\n\n  return (\n    <ExampleGraphContainer id=\"simpleBarGraph\" />\n  );\n};\n\n")))}u.isMDXComponent=!0;var x=a(1328),j=a.n(x),O=a(1329),g=function(e){var t=e.title,a=e.description,n=e.isExpanded;return i.a.createElement(j.a,{title:t||"Simple Bar",description:a,example:i.a.createElement(c.a,null),exampleCssSrc:i.a.createElement(O.a,null),exampleSrc:i.a.createElement(u,null),isExpanded:n})},N=a(1405),h=a(1489),f=a(1737),y=a.n(f),C=["components"],w={};function v(e){var t=e.components,a=m()(e,C);return Object(p.mdx)("wrapper",r()({},w,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport Carbon from '@cerner/carbon-graphs/lib/js/carbon';\nimport utils from '@cerner/carbon-graphs/lib/js/helpers/utils';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Graph.module.scss';\nimport '@cerner/terra-graphs-docs/lib/terra-graphs-src/components/Bar/BarGraph.module.scss';\nimport ExampleGraphContainer from '@cerner/terra-graphs-docs/lib/terra-dev-site/ExampleGraphContainer/ExampleGraphContainer';\nimport getBarConfig from '@cerner/terra-graphs-docs/lib/example-datasets/graphConfigObjects/Bar/barTimeseries';\nimport exampleData from '@cerner/terra-graphs-docs/lib/example-datasets/dataObjects/Bar/datasetTimeseries1';\n\n/*\nPlease refer to the documentation below to see the graphConfig and data objects\n*/\n\nconst graphConfig = utils.deepClone(getBarConfig('#timeseriesBarGraph'));\nconst dataset = utils.deepClone(exampleData);\n\nexport default () => {\n  React.useEffect(() => {\n    const graph = Carbon.api.graph(graphConfig);\n    graph.loadContent(Carbon.api.bar(dataset));\n  }, []);\n\n  return (\n    <ExampleGraphContainer id=\"timeseriesBarGraph\" />\n  );\n};\n\n")))}v.isMDXComponent=!0;var S=function(e){var t=e.title,a=e.description,n=e.isExpanded;return i.a.createElement(j.a,{title:t||"Timeseries",description:a,example:i.a.createElement(y.a,null),exampleCssSrc:i.a.createElement(O.a,null),exampleSrc:i.a.createElement(v,null),isExpanded:n})},D=a(1449),L=a(1389),B=["components"];a(1331);var G={},E="wrapper";function I(e){var t=e.components,a=m()(e,B);return Object(p.mdx)(E,r()({},G,a,{components:t,mdxType:"MDXLayout"}),Object(p.mdx)("h1",{id:"bar"},"Bar"),Object(p.mdx)("p",null,"A native bar graph using D3 based on standard design patterns."),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#bar"},"Bar"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#getting-started"},"Getting started")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#usage"},"Usage")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#configuration-structure"},"Configuration structure")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#configuration-properties"},"Configuration properties")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#dataset-structure"},"Dataset structure"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#simple-bar"},"Simple Bar")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#negative-bar"},"Negative Bar")))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#dataset-properties"},"Dataset properties"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#legendoptions"},"legendOptions")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#values"},"values")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#regions"},"regions")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#style"},"style")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#group"},"group")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#axis-info-row"},"Axis Info Row")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#constraints"},"Constraints")))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("a",{parentName:"li",href:"#examples"},"Examples"))))),Object(p.mdx)("h2",{id:"getting-started"},"Getting Started"),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},"Install with ",Object(p.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("inlineCode",{parentName:"li"},"npm i @cerner/carbon-graphs --save-dev"))))),Object(p.mdx)("h2",{id:"usage"},"Usage"),Object(p.mdx)("p",null,"An instance of Bar graph is obtained as follows:"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"Carbon.api.bar(/* dataset */)\n")),Object(p.mdx)("p",null,"A Bar graph can be plotted as follows:"),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"import Carbon from '@cerner/carbon-graphs/dist/js/carbon-graphs.js';\nimport '@cerner/carbon-graphs/dist/css/carbon-graphs.css';\nconst graph = Carbon.api.graph(/* graph config JSON */);\ngraph.loadContent(Carbon.api.bar(/* dataset 1 */));\n\n// Multiple datasets can be added:\ngraph.loadContent(Carbon.api.bar(/* dataset 1 */));\ngraph.loadContent(Carbon.api.bar(/* dataset 2 */));\n")),Object(p.mdx)("h2",{id:"configuration-structure"},"Configuration Structure"),Object(p.mdx)("p",null,"You will ",Object(p.mdx)("strong",{parentName:"p"},"not")," need all the properties in the example below. Check ",Object(p.mdx)("a",{parentName:"p",href:"../core-configuration/Documentation/Graph"},"Graph")," for graph configuration properties."),Object(p.mdx)("pre",null,Object(p.mdx)("code",{parentName:"pre",className:"language-javascript"},"var root = {\n    bindTo: <string>,\n    axis: {\n        x: {\n            label: <string>,\n            lowerLimit: <number> or <Date>,\n            upperLimit: <number> or <Date>,\n            ticks: {\n                values: <Array>,\n                format: <format string>\n            }\n        },\n        y: {\n            label: <string>,\n            lowerLimit: <number>,\n            upperLimit: <number>,\n        },\n        y2: {\n            show: <bool>,\n            label: <string>,\n            lowerLimit: <number>,\n            upperLimit: <number>,\n        }\n    },\n    showLabel: <bool>,\n    showLegend: <bool>,\n    showShapes: <bool>,\n    showVGrid: <bool>,\n    showHGrid: <bool>,\n};\n")),Object(p.mdx)("h2",{id:"configuration-properties"},"Configuration Properties"),Object(p.mdx)("p",null,"See ",Object(p.mdx)("a",{parentName:"p",href:"../core-configuration/Documentation/Graph"},"Graph")," for more details."),Object(p.mdx)("h2",{id:"dataset-structure"},"Dataset Structure"),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"simple-bar"},"Simple Bar"),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},'var data = {\n    key: <string>,\n    label: {\n        display: <string>\n    },\n    regions: [\n        {\n            axis: <"y" or "y2">,\n            start: <number>,\n            end: <number>,\n            x: <number>,\n        }\n    ],\n    color: <hex value as string>,\n    onClick: <function>,\n    axisInfoRow: [\n        {\n            axis: <"x">,\n            x: 1,\n            value: {\n                onClick: <function>,\n                characterCount: <number>,\n                color: <hex value as string>,\n                shape: <shape SVG>,\n                label: {\n                    display: <string>,\n                    secondaryDisplay: <string>,\n                }\n            }\n        },\n        {\n            axis: "x",\n            x: 2,\n            value: {\n                onClick: <function>,\n                color: <hex value as string>,\n                shape: <shape SVG>,\n                label: {\n                    display: <string>,\n                }\n            }\n        }\n    ],\n    values: [\n        {\n            x: <number>,\n            y: <number> or <Date>,\n        },\n        {\n            x: <number>,\n            y: <number> or <Date>,\n            style: {\n                isHashed: <bool>,\n            }\n        },\n        {\n            x: <number>,\n            y: <number> or <Date>\n        },\n    ]\n};\n'))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"negative-bar"},"Negative Bar"),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-javascript"},'var negativeData = {\n    key: <string>,\n    label: {\n        display: <string>,\n    },\n\n    yAxis: <"y" or y2">,\n    color: <hex value as string>,\n    onClick: <function>,\n    values: [\n        {\n            x: <number>,\n            y: <negative number>,\n        },\n        {\n            x: <number>,\n            y: <negative number>,\n        }\n    ]\n};\n')))),Object(p.mdx)("h2",{id:"dataset-properties"},"Dataset Properties"),Object(p.mdx)("table",null,Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"key"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"A unique ",Object(p.mdx)("inlineCode",{parentName:"td"},"id")," to identify the dataset. Adding two datasets with the same ",Object(p.mdx)("inlineCode",{parentName:"td"},"key")," will result in an error.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"values"),Object(p.mdx)("td",{parentName:"tr",align:null},"Array"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#values"},"Values"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"label"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Label for the dataset in the Legend. If it is not provided then it will not be shown in the legend.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"axisInfoRow"),Object(p.mdx)("td",{parentName:"tr",align:null},"array"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"[]"),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#axis-info-row"},"Axis Info Row"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"color"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"COLORS.BLACK"),Object(p.mdx)("td",{parentName:"tr",align:null},"Color for the data points. Can be a hex value (",Object(p.mdx)("inlineCode",{parentName:"td"},"#ffffff"),") or a constant from ",Object(p.mdx)("a",{parentName:"td",href:"../core-configuration/documentation/colors"},"colors"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"group"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"key"),Object(p.mdx)("td",{parentName:"tr",align:null},"Used for stacking bar content under another bar content. See ",Object(p.mdx)("a",{parentName:"td",href:"#group"},"Group"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"legendOptions"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"undefined"),Object(p.mdx)("td",{parentName:"tr",align:null},"Toggle to show shape, line and legend. See ",Object(p.mdx)("a",{parentName:"td",href:"#legendoptions"},"LegendOptions"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"onClick"),Object(p.mdx)("td",{parentName:"tr",align:null},"Function"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"undefined"),Object(p.mdx)("td",{parentName:"tr",align:null},"Function to execute upon clicking a datapoint, such as, to display a popup.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"regions"),Object(p.mdx)("td",{parentName:"tr",align:null},"array"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"[]"),Object(p.mdx)("td",{parentName:"tr",align:null},"See ",Object(p.mdx)("a",{parentName:"td",href:"#regions"},"regions"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"style"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"{}"),Object(p.mdx)("td",{parentName:"tr",align:null},"Any style that can be applied. See ",Object(p.mdx)("a",{parentName:"td",href:"#style"},"style"),".")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"yAxis"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},'"y"'),Object(p.mdx)("td",{parentName:"tr",align:null},"Function to execute upon clicking a datapoint, such as, to display a popup.")))),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"legendoptions"},Object(p.mdx)("inlineCode",{parentName:"h3"},"legendOptions")),Object(p.mdx)("p",{parentName:"li"},"  Each bar can have a legendOptions object in ",Object(p.mdx)("a",{parentName:"p",href:"#values"},"Values")," level."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre"},"  ```js\n    legendOptions: {\n      showElement: <bool>,\n    },\n  ```\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"showElement"),Object(p.mdx)("td",{parentName:"tr",align:null},"boolean"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"true"),Object(p.mdx)("td",{parentName:"tr",align:null},"Toggle to hide legend when legend item has no data."))))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"values"},Object(p.mdx)("inlineCode",{parentName:"h3"},"values")),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"    values: [\n        {\n            x: <number>,\n            y: <negative number>,\n        },\n        {\n            x: <number>,\n            y: <negative number>,\n        }\n    ]\n")),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"x"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Coordinate x, for plotting the bar.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"y"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Coordinate y, for height of bar.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"style"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"{}"),Object(p.mdx)("td",{parentName:"tr",align:null},"Any style that can be applied. See ",Object(p.mdx)("a",{parentName:"td",href:"#style"},"style"),".")))))),Object(p.mdx)("p",null,Object(p.mdx)("strong",{parentName:"p"},"Note: Providing invalid data to x or y will lead to an error.")),Object(p.mdx)("ul",null,Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"regions"},Object(p.mdx)("inlineCode",{parentName:"h3"},"regions")),Object(p.mdx)("p",{parentName:"li"},"  ",Object(p.mdx)("inlineCode",{parentName:"p"},"regions")," in Bar Graph are conceptually different than other graph types, since ",Object(p.mdx)("inlineCode",{parentName:"p"},"goal lines")," are ",Object(p.mdx)("strong",{parentName:"p"},"per bar")," as opposed to ",Object(p.mdx)("inlineCode",{parentName:"p"},"regions lines")," which are ",Object(p.mdx)("strong",{parentName:"p"},"per data-set"),"."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},'    regions: [\n        {\n            axis: <"y" or "y2">,\n            start: <number>,\n            end: <number>,\n            x: <number>,\n        }\n    ],\n')),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"Each bar can have 1 or more regions. ",Object(p.mdx)("inlineCode",{parentName:"p"},"start")," and ",Object(p.mdx)("inlineCode",{parentName:"p"},"end")," is necessary for rendering a region.")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"Stacked bars has combined regions. Pass in same regions array for every bar content that is stacked.")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"Grouped bars has separate region for each content. Pass in different regions for each content."),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Expected"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"start"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Start of the region.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"end"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"End of the region.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"x"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"X axis tick value for which you want to render region.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"axis"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},'"y"'),Object(p.mdx)("td",{parentName:"tr",align:null},"Defines which axis if represents from.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"color"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"#bcbfc0")),Object(p.mdx)("td",{parentName:"tr",align:null},"Default color of the region area."))))))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"style"},Object(p.mdx)("inlineCode",{parentName:"h3"},"style")),Object(p.mdx)("p",{parentName:"li"},"  Each bar can have 1 or more styles."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"   style: {\n      isHashed: <bool>,\n      isHollow: <bool>,\n      isDotted: <bool>,\n   }\n")),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"To apply style to entire content, pass style object in ",Object(p.mdx)("a",{parentName:"p",href:"#dataset-structure"},"Data")," level.")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"To apply style to a single bar, pass style object in ",Object(p.mdx)("a",{parentName:"p",href:"#values"},"Values")," level.")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"In case both objects are provided, Value level style object will take precedence over Data level style object."),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Expected"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"isHashed"),Object(p.mdx)("td",{parentName:"tr",align:null},"boolean"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"false"),Object(p.mdx)("td",{parentName:"tr",align:null},"applies hash pattern to bar")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"isHollow"),Object(p.mdx)("td",{parentName:"tr",align:null},"boolean"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"false"),Object(p.mdx)("td",{parentName:"tr",align:null},"creates hollow bar")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"isDotted"),Object(p.mdx)("td",{parentName:"tr",align:null},"boolean"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"false"),Object(p.mdx)("td",{parentName:"tr",align:null},"applies dotted pattern to bar outline"))))))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"group"},Object(p.mdx)("inlineCode",{parentName:"h3"},"group")),Object(p.mdx)("p",{parentName:"li"},"  ",Object(p.mdx)("inlineCode",{parentName:"p"},"group")," property is used to enable stacking of bar content on another content. Each content is assigned a group id (by default this is the ",Object(p.mdx)("inlineCode",{parentName:"p"},"key")," property) when rendering on the graph.\nFor instance:\nIf ",Object(p.mdx)("inlineCode",{parentName:"p"},"Content 2")," needs to be stacked, then ",Object(p.mdx)("inlineCode",{parentName:"p"},"Content 2")," needs to provide the unique ",Object(p.mdx)("inlineCode",{parentName:"p"},"key")," of ",Object(p.mdx)("inlineCode",{parentName:"p"},"Content 1")," as ",Object(p.mdx)("inlineCode",{parentName:"p"},"group"),"."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},"   group: <first dataset ID>,\n")),Object(p.mdx)("p",{parentName:"li"},"  Note:"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},"Not providing a ",Object(p.mdx)("inlineCode",{parentName:"li"},"group")," will load the content beside ",Object(p.mdx)("inlineCode",{parentName:"li"},"Content 1"),"."))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"axis-info-row"},"Axis Info Row"),Object(p.mdx)("p",{parentName:"li"},"  Each bar can have Axis Info Row Labels. ",Object(p.mdx)("inlineCode",{parentName:"p"},"axis"),", ",Object(p.mdx)("inlineCode",{parentName:"p"},"x")," and ",Object(p.mdx)("inlineCode",{parentName:"p"},"value")," is necessary for rendering an axis info row label."),Object(p.mdx)("pre",{parentName:"li"},Object(p.mdx)("code",{parentName:"pre",className:"language-js"},'    axisInfoRow: [\n        {\n            axis: <"x">,\n            x: 1,\n            value: {\n                onClick: <function>,\n                characterCount: <number>,\n                color: <hex value as string>,\n                shape: <shape SVG>,\n                label: {\n                    display: <string>,\n                    secondaryDisplay: <string>,\n                }\n            }\n        },\n        {\n            axis: "x",\n            x: 2,\n            value: {\n                onClick: <function>,\n                color: <hex value as string>,\n                shape: <shape SVG>,\n                label: {\n                    display: <string>,\n                }\n            }\n        }\n    ],\n')),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"Stacked Bar Graph has combined axis info row labels. Pass in ",Object(p.mdx)("inlineCode",{parentName:"p"},"axisInfoRow")," array for first bar content that is stacked.")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"Grouped Bar Graph has separate axis info row labels for each content. Pass in different axis info row labels for each content.\nNote:")),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("p",{parentName:"li"},"For a Stacked Bar Graph, disable legend items while using Axis Info Row since toggling legend items will not change the Axis Info Row Labels."),Object(p.mdx)("table",{parentName:"li"},Object(p.mdx)("thead",{parentName:"table"},Object(p.mdx)("tr",{parentName:"thead"},Object(p.mdx)("th",{parentName:"tr",align:null},"Property Name"),Object(p.mdx)("th",{parentName:"tr",align:null},"Type"),Object(p.mdx)("th",{parentName:"tr",align:null},"Required"),Object(p.mdx)("th",{parentName:"tr",align:null},"Default"),Object(p.mdx)("th",{parentName:"tr",align:null},"Description"))),Object(p.mdx)("tbody",{parentName:"table"},Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"x"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"X axis tick value for corresponding axis info row label item")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"value"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"yes"),Object(p.mdx)("td",{parentName:"tr",align:null},"-"),Object(p.mdx)("td",{parentName:"tr",align:null},"Values that are used in axis info rows.")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"axis"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},'"x"'),Object(p.mdx)("td",{parentName:"tr",align:null},"Axis where you want to render axis info row labels")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"characterCount"),Object(p.mdx)("td",{parentName:"tr",align:null},"number"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"No Default Value"),Object(p.mdx)("td",{parentName:"tr",align:null},"Maximum character length before truncation")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"color"),Object(p.mdx)("td",{parentName:"tr",align:null},"string"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("img",{width:"16px",height:"16px",src:"https://placehold.it/15/1c1f21/000000?text=+"})," ",Object(p.mdx)("inlineCode",{parentName:"td"},"#1c1f21")),Object(p.mdx)("td",{parentName:"tr",align:null},"Default color of the display (For Primary label only)")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"onClick"),Object(p.mdx)("td",{parentName:"tr",align:null},"Function"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"undefined"),Object(p.mdx)("td",{parentName:"tr",align:null},"Any action that can be performed when clicking on the data point")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"label"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"{}"),Object(p.mdx)("td",{parentName:"tr",align:null},Object(p.mdx)("inlineCode",{parentName:"td"},"display")," property needs to be provided for label ",Object(p.mdx)("br",null)," ",Object(p.mdx)("inlineCode",{parentName:"td"},"secondaryDisplay")," property can also be provided for label")),Object(p.mdx)("tr",{parentName:"tbody"},Object(p.mdx)("td",{parentName:"tr",align:null},"shape"),Object(p.mdx)("td",{parentName:"tr",align:null},"object"),Object(p.mdx)("td",{parentName:"tr",align:null},"no"),Object(p.mdx)("td",{parentName:"tr",align:null},"{}"),Object(p.mdx)("td",{parentName:"tr",align:null},"svg represented as json, which got transpiled from ",Object(p.mdx)("inlineCode",{parentName:"td"},"@cerner/svg-to-carbon"),". See",Object(p.mdx)("a",{parentName:"td",href:"../core-configuration/Documentation/Shapes"},"Shapes")))))))),Object(p.mdx)("li",{parentName:"ul"},Object(p.mdx)("h3",{parentName:"li",id:"constraints"},"Constraints"),Object(p.mdx)("ul",{parentName:"li"},Object(p.mdx)("li",{parentName:"ul"},"If data-set ",Object(p.mdx)("inlineCode",{parentName:"li"},"label")," display is not provided then the legend item will not be shown as well")))),Object(p.mdx)("h2",{id:"examples"},"Examples"),Object(p.mdx)(g,{mdxType:"SimpleBarGraph"}),Object(p.mdx)("details",null,Object(p.mdx)("summary",{style:{fontSize:24}},Object(p.mdx)("b",null,"Data used for simple bar graph")),Object(p.mdx)("h3",{id:"graph-config-object"},"Graph Config object"),Object(p.mdx)(N.a,{mdxType:"SimpleBarGraphConfig"}),Object(p.mdx)("h3",{id:"data-object"},"Data object"),Object(p.mdx)(h.a,{mdxType:"SimpleBarDataObject"})),Object(p.mdx)("br",null),Object(p.mdx)("br",null),Object(p.mdx)("br",null),Object(p.mdx)(S,{mdxType:"TimeseriesBarGraph"}),Object(p.mdx)("details",null,Object(p.mdx)("summary",{style:{fontSize:24}},Object(p.mdx)("b",null,"Data used for timeseries bar graph")),Object(p.mdx)("h3",{id:"graph-config-object-1"},"Graph Config object"),Object(p.mdx)(D.a,{mdxType:"TimeseriesBarGraphConfig"}),Object(p.mdx)("h3",{id:"data-object-1"},"Data object"),Object(p.mdx)(L.a,{mdxType:"TimeseriesBarDataObject"})))}I.isMDXComponent=!0}}]);